<?xml version="1.0" encoding="utf-8"?>
<doc>
    <assembly>
        <name>Azure.AI.Translation.Text</name>
    </assembly>
    <members>
        <member name="T:Azure.AI.Translation.Text.TextTranslationClient">
            <summary> The Translator service client. </summary>
             <summary>
             Text translation is a cloud-based REST API feature of the Translator service that uses neural
             machine translation technology to enable quick and accurate source-to-target text translation
             in real time across all supported languages.
            
             The following methods are supported by the Text Translation feature:
            
             Languages. Returns a list of languages supported by Translate, Transliterate, and Dictionary Lookup operations.
            
             Translate. Renders single source-language text to multiple target-language texts with a single request.
            
             Transliterate. Converts characters or letters of a source language to the corresponding characters or letters of a target language.
            
             Detect. Returns the source code language code and a boolean variable denoting whether the detected language is supported for text translation and transliteration.
            
             Dictionary lookup. Returns equivalent words for the source term in the target language.
            
             Dictionary example Returns grammatical structure and context examples for the source term and target term pair.
             </summary>
        </member>
        <member name="M:Azure.AI.Translation.Text.TextTranslationClient.#ctor(System.Uri)">
            <summary> Initializes a new instance of TextTranslationClient. </summary>
            <param name="endpoint">
            Supported Text Translation endpoints (protocol and hostname, for example:
                https://api.cognitive.microsofttranslator.com).
            </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="endpoint" /> is null. </exception>
        </member>
        <member name="M:Azure.AI.Translation.Text.TextTranslationClient.#ctor(System.Uri,Azure.AI.Translation.Text.TextTranslationClientOptions)">
            <summary> Initializes a new instance of TextTranslationClient. </summary>
            <param name="endpoint">
            Supported Text Translation endpoints (protocol and hostname, for example:
                https://api.cognitive.microsofttranslator.com).
            </param>
            <param name="options"> The options for configuring the client. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="endpoint" /> is null. </exception>
        </member>
        <member name="M:Azure.AI.Translation.Text.TextTranslationClient.#ctor(Azure.AzureKeyCredential,System.String,Azure.AI.Translation.Text.TextTranslationClientOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.AI.Translation.Text.TextTranslationClient" /> class.
            </summary>
            <param name="credential">Azure Key Credential</param>
            <param name="region">Azure Resource Region</param>
            <param name="options">Translate Client Options</param>
        </member>
        <member name="M:Azure.AI.Translation.Text.TextTranslationClient.#ctor(Azure.AzureKeyCredential,System.Uri,System.String,Azure.AI.Translation.Text.TextTranslationClientOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.AI.Translation.Text.TextTranslationClient" /> class.
            </summary>
            <param name="credential">Azure Key Credential</param>
            <param name="endpoint">Service Endpoint</param>
            <param name="region">Azure Resource Region</param>
            <param name="options">Translate Client Options</param>
        </member>
        <member name="M:Azure.AI.Translation.Text.TextTranslationClient.#ctor(Azure.Core.TokenCredential,Azure.AI.Translation.Text.TextTranslationClientOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.AI.Translation.Text.TextTranslationClient" /> class.
            </summary>
            <param name="credential">Cognitive Services Token</param>
            <param name="options">Translate Client Options</param>
        </member>
        <member name="M:Azure.AI.Translation.Text.TextTranslationClient.#ctor(Azure.Core.TokenCredential,System.Uri,System.String,Azure.AI.Translation.Text.TextTranslationClientOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.AI.Translation.Text.TextTranslationClient" /> class.
            </summary>
            <param name="credential">Cognitive Services Token</param>
            <param name="endpoint">Service Endpoint</param>
            <param name="tokenScope">Token Scopes</param>
            <param name="options">Translate Client Options</param>
        </member>
        <member name="M:Azure.AI.Translation.Text.TextTranslationClient.#ctor(Azure.Core.TokenCredential,System.String,System.String,System.String,Azure.AI.Translation.Text.TextTranslationClientOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.AI.Translation.Text.TextTranslationClient" /> class.
            </summary>
            <param name="credential">Cognitive Services Token</param>
            <param name="resourceId">The value is the Resource ID for your Translator resource instance.</param>
            <param name="region">Azure Resource Region</param>
            <param name="tokenScope">Token Scopes</param>
            <param name="options">Translate Client Options</param>
        </member>
        <member name="M:Azure.AI.Translation.Text.TextTranslationClient.#ctor(Azure.Core.TokenCredential,System.Uri,System.String,System.String,System.String,Azure.AI.Translation.Text.TextTranslationClientOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.AI.Translation.Text.TextTranslationClient" /> class.
            </summary>
            <param name="credential">Cognitive Services Token</param>
            <param name="endpoint">Service Endpoint</param>
            <param name="resourceId">The value is the Resource ID for your Translator resource instance.</param>
            <param name="region">Azure Resource Region</param>
            <param name="tokenScope">Token Scopes</param>
            <param name="options">Translate Client Options</param>
        </member>
        <member name="M:Azure.AI.Translation.Text.TextTranslationClient.TranslateAsync(System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Guid,System.String,System.Nullable{Azure.AI.Translation.Text.TextType},System.String,System.Nullable{Azure.AI.Translation.Text.ProfanityAction},System.Nullable{Azure.AI.Translation.Text.ProfanityMarker},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.String,System.String,System.String,System.Nullable{System.Boolean},System.Threading.CancellationToken)">
             <summary> Translate Text. </summary>
             <param name="targetLanguages">
             Specifies the language of the output text. The target language must be one of the supported languages included
             in the translation scope. For example, use to=de to translate to German.
             It's possible to translate to multiple languages simultaneously by repeating the parameter in the query string.
             For example, use to=de&amp;to=it to translate to German and Italian.
             </param>
             <param name="content"> Array of the text to be translated. </param>
             <param name="clientTraceId"> A client-generated GUID to uniquely identify the request. </param>
             <param name="sourceLanguage">
             Specifies the language of the input text. Find which languages are available to translate from by
             looking up supported languages using the translation scope. If the from parameter isn't specified,
             automatic language detection is applied to determine the source language.
            
             You must use the from parameter rather than autodetection when using the dynamic dictionary feature.
             Note: the dynamic dictionary feature is case-sensitive.
             </param>
             <param name="textType">
             Defines whether the text being translated is plain text or HTML text. Any HTML needs to be a well-formed,
             complete element. Possible values are: plain (default) or html.
             </param>
             <param name="category">
             A string specifying the category (domain) of the translation. This parameter is used to get translations
             from a customized system built with Custom Translator. Add the Category ID from your Custom Translator
             project details to this parameter to use your deployed customized system. Default value is: general.
             </param>
             <param name="profanityAction">
             Specifies how profanities should be treated in translations.
             Possible values are: NoAction (default), Marked or Deleted.
             </param>
             <param name="profanityMarker">
             Specifies how profanities should be marked in translations.
             Possible values are: Asterisk (default) or Tag.
             </param>
             <param name="includeAlignment">
             Specifies whether to include alignment projection from source text to translated text.
             Possible values are: true or false (default).
             </param>
             <param name="includeSentenceLength">
             Specifies whether to include sentence boundaries for the input text and the translated text.
             Possible values are: true or false (default).
             </param>
             <param name="suggestedFrom">
             Specifies a fallback language if the language of the input text can't be identified.
             Language autodetection is applied when the from parameter is omitted. If detection fails,
             the suggestedFrom language will be assumed.
             </param>
             <param name="fromScript"> Specifies the script of the input text. </param>
             <param name="toScript"> Specifies the script of the translated text. </param>
             <param name="allowFallback">
             Specifies that the service is allowed to fall back to a general system when a custom system doesn't exist.
             Possible values are: true (default) or false.
            
             allowFallback=false specifies that the translation should only use systems trained for the category specified
             by the request. If a translation for language X to language Y requires chaining through a pivot language E,
             then all the systems in the chain (X → E and E → Y) will need to be custom and have the same category.
             If no system is found with the specific category, the request will return a 400 status code. allowFallback=true
             specifies that the service is allowed to fall back to a general system when a custom system doesn't exist.
             </param>
             <param name="cancellationToken"> The cancellation token to use. </param>
             <exception cref="T:System.ArgumentNullException"> <paramref name="targetLanguages" /> or <paramref name="content" /> is null. </exception>
        </member>
        <member name="M:Azure.AI.Translation.Text.TextTranslationClient.TranslateAsync(Azure.AI.Translation.Text.TextTranslationTranslateOptions,System.Threading.CancellationToken)">
            <summary> Translate Text. </summary>
            <param name="options">The client translation options. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"><paramref name="options" /> is null. </exception>
        </member>
        <member name="M:Azure.AI.Translation.Text.TextTranslationClient.TranslateAsync(System.String,System.Collections.Generic.IEnumerable{System.String},System.String,System.Threading.CancellationToken)">
             <summary> Translate Text. </summary>
             <param name="targetLanguage">
             Specifies the language of the output text. The target language must be one of the supported languages included
             in the translation scope. For example, use to=de to translate to German.
             It's possible to translate to multiple languages simultaneously by repeating the parameter in the query string.
             For example, use to=de&amp;to=it to translate to German and Italian.
             </param>
             <param name="content"> Array of the text to be translated. </param>
             <param name="sourceLanguage">
             Specifies the language of the input text. Find which languages are available to translate from by
             looking up supported languages using the translation scope. If the from parameter isn't specified,
             automatic language detection is applied to determine the source language.
            
             You must use the from parameter rather than autodetection when using the dynamic dictionary feature.
             Note: the dynamic dictionary feature is case-sensitive.
             </param>
             <param name="cancellationToken"> The cancellation token to use. </param>
             <exception cref="T:System.ArgumentNullException"> <paramref name="targetLanguage" /> or <paramref name="content" /> is null. </exception>
        </member>
        <member name="M:Azure.AI.Translation.Text.TextTranslationClient.TranslateAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
             <summary> Translate Text. </summary>
             <param name="targetLanguage">
             Specifies the language of the output text. The target language must be one of the supported languages included
             in the translation scope. For example, use to=de to translate to German.
             It's possible to translate to multiple languages simultaneously by repeating the parameter in the query string.
             For example, use to=de&amp;to=it to translate to German and Italian.
             </param>
             <param name="text"> Text to be translated. </param>
             <param name="sourceLanguage">
             Specifies the language of the input text. Find which languages are available to translate from by
             looking up supported languages using the translation scope. If the from parameter isn't specified,
             automatic language detection is applied to determine the source language.
            
             You must use the from parameter rather than autodetection when using the dynamic dictionary feature.
             Note: the dynamic dictionary feature is case-sensitive.
             </param>
             <param name="cancellationToken"> The cancellation token to use. </param>
             <exception cref="T:System.ArgumentNullException"> <paramref name="targetLanguage" /> or <paramref name="text" /> is null. </exception>
        </member>
        <member name="M:Azure.AI.Translation.Text.TextTranslationClient.Translate(System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Guid,System.String,System.Nullable{Azure.AI.Translation.Text.TextType},System.String,System.Nullable{Azure.AI.Translation.Text.ProfanityAction},System.Nullable{Azure.AI.Translation.Text.ProfanityMarker},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.String,System.String,System.String,System.Nullable{System.Boolean},System.Threading.CancellationToken)">
             <summary> Translate Text. </summary>
             <param name="targetLanguages">
             Specifies the language of the output text. The target language must be one of the supported languages included
             in the translation scope. For example, use to=de to translate to German.
             It's possible to translate to multiple languages simultaneously by repeating the parameter in the query string.
             For example, use to=de&amp;to=it to translate to German and Italian.
             </param>
             <param name="content"> Array of the text to be translated. </param>
             <param name="clientTraceId"> A client-generated GUID to uniquely identify the request. </param>
             <param name="sourceLanguage">
             Specifies the language of the input text. Find which languages are available to translate from by
             looking up supported languages using the translation scope. If the from parameter isn't specified,
             automatic language detection is applied to determine the source language.
            
             You must use the from parameter rather than autodetection when using the dynamic dictionary feature.
             Note: the dynamic dictionary feature is case-sensitive.
             </param>
             <param name="textType">
             Defines whether the text being translated is plain text or HTML text. Any HTML needs to be a well-formed,
             complete element. Possible values are: plain (default) or html.
             </param>
             <param name="category">
             A string specifying the category (domain) of the translation. This parameter is used to get translations
             from a customized system built with Custom Translator. Add the Category ID from your Custom Translator
             project details to this parameter to use your deployed customized system. Default value is: general.
             </param>
             <param name="profanityAction">
             Specifies how profanities should be treated in translations.
             Possible values are: NoAction (default), Marked or Deleted.
             </param>
             <param name="profanityMarker">
             Specifies how profanities should be marked in translations.
             Possible values are: Asterisk (default) or Tag.
             </param>
             <param name="includeAlignment">
             Specifies whether to include alignment projection from source text to translated text.
             Possible values are: true or false (default).
             </param>
             <param name="includeSentenceLength">
             Specifies whether to include sentence boundaries for the input text and the translated text.
             Possible values are: true or false (default).
             </param>
             <param name="suggestedFrom">
             Specifies a fallback language if the language of the input text can't be identified.
             Language autodetection is applied when the from parameter is omitted. If detection fails,
             the suggestedFrom language will be assumed.
             </param>
             <param name="fromScript"> Specifies the script of the input text. </param>
             <param name="toScript"> Specifies the script of the translated text. </param>
             <param name="allowFallback">
             Specifies that the service is allowed to fall back to a general system when a custom system doesn't exist.
             Possible values are: true (default) or false.
            
             allowFallback=false specifies that the translation should only use systems trained for the category specified
             by the request. If a translation for language X to language Y requires chaining through a pivot language E,
             then all the systems in the chain (X → E and E → Y) will need to be custom and have the same category.
             If no system is found with the specific category, the request will return a 400 status code. allowFallback=true
             specifies that the service is allowed to fall back to a general system when a custom system doesn't exist.
             </param>
             <param name="cancellationToken"> The cancellation token to use. </param>
             <exception cref="T:System.ArgumentNullException"> <paramref name="targetLanguages" /> or <paramref name="content" /> is null. </exception>
        </member>
        <member name="M:Azure.AI.Translation.Text.TextTranslationClient.Translate(Azure.AI.Translation.Text.TextTranslationTranslateOptions,System.Threading.CancellationToken)">
            <summary> Translate Text. </summary>
            <param name="options">The client translation options. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"><paramref name="options" /> is null. </exception>
        </member>
        <member name="M:Azure.AI.Translation.Text.TextTranslationClient.Translate(System.String,System.Collections.Generic.IEnumerable{System.String},System.String,System.Threading.CancellationToken)">
             <summary> Translate Text. </summary>
             <param name="targetLanguage">
             Specifies the language of the output text. The target language must be one of the supported languages included
             in the translation scope. For example, use to=de to translate to German.
             It's possible to translate to multiple languages simultaneously by repeating the parameter in the query string.
             For example, use to=de&amp;to=it to translate to German and Italian.
             </param>
             <param name="content"> Array of the text to be translated. </param>
             <param name="sourceLanguage">
             Specifies the language of the input text. Find which languages are available to translate from by
             looking up supported languages using the translation scope. If the from parameter isn't specified,
             automatic language detection is applied to determine the source language.
            
             You must use the from parameter rather than autodetection when using the dynamic dictionary feature.
             Note: the dynamic dictionary feature is case-sensitive.
             </param>
             <param name="cancellationToken"> The cancellation token to use. </param>
             <exception cref="T:System.ArgumentNullException"> <paramref name="targetLanguage" /> or <paramref name="content" /> is null. </exception>
        </member>
        <member name="M:Azure.AI.Translation.Text.TextTranslationClient.Translate(System.String,System.String,System.String,System.Threading.CancellationToken)">
             <summary> Translate Text. </summary>
             <param name="targetLanguage">
             Specifies the language of the output text. The target language must be one of the supported languages included
             in the translation scope. For example, use to=de to translate to German.
             It's possible to translate to multiple languages simultaneously by repeating the parameter in the query string.
             For example, use to=de&amp;to=it to translate to German and Italian.
             </param>
             <param name="text"> Text to be translated. </param>
             <param name="sourceLanguage">
             Specifies the language of the input text. Find which languages are available to translate from by
             looking up supported languages using the translation scope. If the from parameter isn't specified,
             automatic language detection is applied to determine the source language.
            
             You must use the from parameter rather than autodetection when using the dynamic dictionary feature.
             Note: the dynamic dictionary feature is case-sensitive.
             </param>
             <param name="cancellationToken"> The cancellation token to use. </param>
             <exception cref="T:System.ArgumentNullException"> <paramref name="targetLanguage" /> or <paramref name="text" /> is null. </exception>
        </member>
        <member name="M:Azure.AI.Translation.Text.TextTranslationClient.TransliterateAsync(System.String,System.String,System.String,System.Collections.Generic.IEnumerable{System.String},System.Guid,System.Threading.CancellationToken)">
            <summary> Transliterate Text. </summary>
            <param name="language">
            Specifies the language of the text to convert from one script to another.
            Possible languages are listed in the transliteration scope obtained by querying the service
            for its supported languages.
            </param>
            <param name="fromScript">
            Specifies the script used by the input text. Look up supported languages using the transliteration scope,
            to find input scripts available for the selected language.
            </param>
            <param name="toScript">
            Specifies the output script. Look up supported languages using the transliteration scope, to find output
            scripts available for the selected combination of input language and input script.
            </param>
            <param name="content"> Array of the text to be transliterated. </param>
            <param name="clientTraceId"> A client-generated GUID to uniquely identify the request. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="language" />, <paramref name="fromScript" />, <paramref name="toScript" /> or <paramref name="content" /> is null. </exception>
        </member>
        <member name="M:Azure.AI.Translation.Text.TextTranslationClient.TransliterateAsync(Azure.AI.Translation.Text.TextTranslationTransliterateOptions,System.Threading.CancellationToken)">
            <summary>Transliterate Text. </summary>
            <param name="options"></param>
            <param name="cancellationToken"></param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1" /> representing the result of the asynchronous operation.</returns>
        </member>
        <member name="M:Azure.AI.Translation.Text.TextTranslationClient.TransliterateAsync(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Transliterate Text. </summary>
            <param name="language">
            Specifies the language of the text to convert from one script to another.
            Possible languages are listed in the transliteration scope obtained by querying the service
            for its supported languages.
            </param>
            <param name="fromScript">
            Specifies the script used by the input text. Look up supported languages using the transliteration scope,
            to find input scripts available for the selected language.
            </param>
            <param name="toScript">
            Specifies the output script. Look up supported languages using the transliteration scope, to find output
            scripts available for the selected combination of input language and input script.
            </param>
            <param name="text"> Text to be transliterated. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="language" />, <paramref name="fromScript" />, <paramref name="toScript" /> or <paramref name="text" /> is null. </exception>
        </member>
        <member name="M:Azure.AI.Translation.Text.TextTranslationClient.Transliterate(System.String,System.String,System.String,System.Collections.Generic.IEnumerable{System.String},System.Guid,System.Threading.CancellationToken)">
            <summary> Transliterate Text. </summary>
            <param name="language">
            Specifies the language of the text to convert from one script to another.
            Possible languages are listed in the transliteration scope obtained by querying the service
            for its supported languages.
            </param>
            <param name="fromScript">
            Specifies the script used by the input text. Look up supported languages using the transliteration scope,
            to find input scripts available for the selected language.
            </param>
            <param name="toScript">
            Specifies the output script. Look up supported languages using the transliteration scope, to find output
            scripts available for the selected combination of input language and input script.
            </param>
            <param name="content"> Array of the text to be transliterated. </param>
            <param name="clientTraceId"> A client-generated GUID to uniquely identify the request. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="language" />, <paramref name="fromScript" />, <paramref name="toScript" /> or <paramref name="content" /> is null. </exception>
        </member>
        <member name="M:Azure.AI.Translation.Text.TextTranslationClient.Transliterate(Azure.AI.Translation.Text.TextTranslationTransliterateOptions,System.Threading.CancellationToken)">
            <summary> Transliterate Text. </summary>
            <param name="options">The configuration options for the transliterate call. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="options" /> is null. </exception>
        </member>
        <member name="M:Azure.AI.Translation.Text.TextTranslationClient.Transliterate(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Transliterate Text. </summary>
            <param name="language">
            Specifies the language of the text to convert from one script to another.
            Possible languages are listed in the transliteration scope obtained by querying the service
            for its supported languages.
            </param>
            <param name="fromScript">
            Specifies the script used by the input text. Look up supported languages using the transliteration scope,
            to find input scripts available for the selected language.
            </param>
            <param name="toScript">
            Specifies the output script. Look up supported languages using the transliteration scope, to find output
            scripts available for the selected combination of input language and input script.
            </param>
            <param name="text"> Text to be transliterated. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="language" />, <paramref name="fromScript" />, <paramref name="toScript" /> or <paramref name="text" /> is null. </exception>
        </member>
        <member name="M:Azure.AI.Translation.Text.TextTranslationClient.FindSentenceBoundariesAsync(System.Collections.Generic.IEnumerable{System.String},System.Guid,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Break Sentence. </summary>
            <param name="content"> Array of the text for which values the sentence boundaries will be calculated. </param>
            <param name="clientTraceId"> A client-generated GUID to uniquely identify the request. </param>
            <param name="language">
            Language tag identifying the language of the input text.
            If a code isn't specified, automatic language detection will be applied.
            </param>
            <param name="script">
            Script tag identifying the script used by the input text.
            If a script isn't specified, the default script of the language will be assumed.
            </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="content" /> is null. </exception>
        </member>
        <member name="M:Azure.AI.Translation.Text.TextTranslationClient.FindSentenceBoundariesAsync(System.String,System.Guid,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Break Sentence. </summary>
            <param name="text"> Array of the text for which values the sentence boundaries will be calculated. </param>
            <param name="clientTraceId"> A client-generated GUID to uniquely identify the request. </param>
            <param name="language">
            Language tag identifying the language of the input text.
            If a code isn't specified, automatic language detection will be applied.
            </param>
            <param name="script">
            Script tag identifying the script used by the input text.
            If a script isn't specified, the default script of the language will be assumed.
            </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="text" /> is null. </exception>
        </member>
        <member name="M:Azure.AI.Translation.Text.TextTranslationClient.FindSentenceBoundaries(System.Collections.Generic.IEnumerable{System.String},System.Guid,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Break Sentence. </summary>
            <param name="content"> Array of the text for which values the sentence boundaries will be calculated. </param>
            <param name="clientTraceId"> A client-generated GUID to uniquely identify the request. </param>
            <param name="language">
            Language tag identifying the language of the input text.
            If a code isn't specified, automatic language detection will be applied.
            </param>
            <param name="script">
            Script tag identifying the script used by the input text.
            If a script isn't specified, the default script of the language will be assumed.
            </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="content" /> is null. </exception>
        </member>
        <member name="M:Azure.AI.Translation.Text.TextTranslationClient.FindSentenceBoundaries(System.String,System.Guid,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Break Sentence. </summary>
            <param name="text"> Array of the text for which values the sentence boundaries will be calculated. </param>
            <param name="clientTraceId"> A client-generated GUID to uniquely identify the request. </param>
            <param name="language">
            Language tag identifying the language of the input text.
            If a code isn't specified, automatic language detection will be applied.
            </param>
            <param name="script">
            Script tag identifying the script used by the input text.
            If a script isn't specified, the default script of the language will be assumed.
            </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="text" /> is null. </exception>
        </member>
        <member name="M:Azure.AI.Translation.Text.TextTranslationClient.LookupDictionaryEntriesAsync(System.String,System.String,System.Collections.Generic.IEnumerable{System.String},System.Guid,System.Threading.CancellationToken)">
            <summary> Dictionary Lookup. </summary>
            <param name="from">
            Specifies the language of the input text.
            The source language must be one of the supported languages included in the dictionary scope.
            </param>
            <param name="to">
            Specifies the language of the output text.
            The target language must be one of the supported languages included in the dictionary scope.
            </param>
            <param name="words"> Array of the words to lookup in the dictionary. </param>
            <param name="clientTraceId"> A client-generated GUID to uniquely identify the request. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="from" />, <paramref name="to" /> or <paramref name="words" /> is null. </exception>
        </member>
        <member name="M:Azure.AI.Translation.Text.TextTranslationClient.LookupDictionaryEntriesAsync(System.String,System.String,System.String,System.Guid,System.Threading.CancellationToken)">
            <summary> Dictionary Lookup. </summary>
            <param name="from">
            Specifies the language of the input text.
            The source language must be one of the supported languages included in the dictionary scope.
            </param>
            <param name="to">
            Specifies the language of the output text.
            The target language must be one of the supported languages included in the dictionary scope.
            </param>
            <param name="word"> A word to lookup in the dictionary. </param>
            <param name="clientTraceId"> A client-generated GUID to uniquely identify the request. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="from" />, <paramref name="to" /> or <paramref name="word" /> is null. </exception>
        </member>
        <member name="M:Azure.AI.Translation.Text.TextTranslationClient.LookupDictionaryEntries(System.String,System.String,System.Collections.Generic.IEnumerable{System.String},System.Guid,System.Threading.CancellationToken)">
            <summary> Dictionary Lookup. </summary>
            <param name="from">
            Specifies the language of the input text.
            The source language must be one of the supported languages included in the dictionary scope.
            </param>
            <param name="to">
            Specifies the language of the output text.
            The target language must be one of the supported languages included in the dictionary scope.
            </param>
            <param name="words"> Array of the words to lookup in the dictionary. </param>
            <param name="clientTraceId"> A client-generated GUID to uniquely identify the request. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="from" />, <paramref name="to" /> or <paramref name="words" /> is null. </exception>
        </member>
        <member name="M:Azure.AI.Translation.Text.TextTranslationClient.LookupDictionaryEntries(System.String,System.String,System.String,System.Guid,System.Threading.CancellationToken)">
            <summary> Dictionary Lookup. </summary>
            <param name="from">
            Specifies the language of the input text.
            The source language must be one of the supported languages included in the dictionary scope.
            </param>
            <param name="to">
            Specifies the language of the output text.
            The target language must be one of the supported languages included in the dictionary scope.
            </param>
            <param name="word"> A word to lookup in the dictionary. </param>
            <param name="clientTraceId"> A client-generated GUID to uniquely identify the request. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="from" />, <paramref name="to" /> or <paramref name="word" /> is null. </exception>
        </member>
        <member name="M:Azure.AI.Translation.Text.TextTranslationClient.LookupDictionaryExamplesAsync(System.String,System.String,System.Collections.Generic.IEnumerable{Azure.AI.Translation.Text.InputTextWithTranslation},System.Guid,System.Threading.CancellationToken)">
            <summary> Dictionary Examples. </summary>
            <param name="from">
            Specifies the language of the input text.
            The source language must be one of the supported languages included in the dictionary scope.
            </param>
            <param name="to">
            Specifies the language of the output text.
            The target language must be one of the supported languages included in the dictionary scope.
            </param>
            <param name="content"> Array of the text to be sent to dictionary. </param>
            <param name="clientTraceId"> A client-generated GUID to uniquely identify the request. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="from" />, <paramref name="to" /> or <paramref name="content" /> is null. </exception>
        </member>
        <member name="M:Azure.AI.Translation.Text.TextTranslationClient.LookupDictionaryExamplesAsync(System.String,System.String,Azure.AI.Translation.Text.InputTextWithTranslation,System.Guid,System.Threading.CancellationToken)">
            <summary> Dictionary Examples. </summary>
            <param name="from">
            Specifies the language of the input text.
            The source language must be one of the supported languages included in the dictionary scope.
            </param>
            <param name="to">
            Specifies the language of the output text.
            The target language must be one of the supported languages included in the dictionary scope.
            </param>
            <param name="content"> Array of the text to be sent to dictionary. </param>
            <param name="clientTraceId"> A client-generated GUID to uniquely identify the request. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="from" />, <paramref name="to" /> or <paramref name="content" /> is null. </exception>
        </member>
        <member name="M:Azure.AI.Translation.Text.TextTranslationClient.LookupDictionaryExamples(System.String,System.String,System.Collections.Generic.IEnumerable{Azure.AI.Translation.Text.InputTextWithTranslation},System.Guid,System.Threading.CancellationToken)">
            <summary> Dictionary Examples. </summary>
            <param name="from">
            Specifies the language of the input text.
            The source language must be one of the supported languages included in the dictionary scope.
            </param>
            <param name="to">
            Specifies the language of the output text.
            The target language must be one of the supported languages included in the dictionary scope.
            </param>
            <param name="content"> Array of the text to be sent to dictionary. </param>
            <param name="clientTraceId"> A client-generated GUID to uniquely identify the request. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="from" />, <paramref name="to" /> or <paramref name="content" /> is null. </exception>
        </member>
        <member name="M:Azure.AI.Translation.Text.TextTranslationClient.LookupDictionaryExamples(System.String,System.String,Azure.AI.Translation.Text.InputTextWithTranslation,System.Guid,System.Threading.CancellationToken)">
            <summary> Dictionary Examples. </summary>
            <param name="from">
            Specifies the language of the input text.
            The source language must be one of the supported languages included in the dictionary scope.
            </param>
            <param name="to">
            Specifies the language of the output text.
            The target language must be one of the supported languages included in the dictionary scope.
            </param>
            <param name="content"> Array of the text to be sent to dictionary. </param>
            <param name="clientTraceId"> A client-generated GUID to uniquely identify the request. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="from" />, <paramref name="to" /> or <paramref name="content" /> is null. </exception>
        </member>
        <member name="M:Azure.AI.Translation.Text.TextTranslationClient.TranslateAsync(System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{Azure.AI.Translation.Text.InputTextItem},System.Guid,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.String,System.String,System.String,System.Nullable{System.Boolean},System.Threading.CancellationToken)">
             <summary> Translate Text. </summary>
             <param name="to">
             Specifies the language of the output text. The target language must be one of the supported languages included
             in the translation scope. For example, use to=de to translate to German.
             It's possible to translate to multiple languages simultaneously by repeating the parameter in the query string.
             For example, use to=de&amp;to=it to translate to German and Italian.
             </param>
             <param name="requestBody"> Defines the content of the request. </param>
             <param name="clientTraceId"> A client-generated GUID to uniquely identify the request. </param>
             <param name="from">
             Specifies the language of the input text. Find which languages are available to translate from by
             looking up supported languages using the translation scope. If the from parameter isn't specified,
             automatic language detection is applied to determine the source language.
            
             You must use the from parameter rather than autodetection when using the dynamic dictionary feature.
             Note: the dynamic dictionary feature is case-sensitive.
             </param>
             <param name="textType">
             Defines whether the text being translated is plain text or HTML text. Any HTML needs to be a well-formed,
             complete element. Possible values are: plain (default) or html. Allowed values: "Plain" | "Html"
             </param>
             <param name="category">
             A string specifying the category (domain) of the translation. This parameter is used to get translations
             from a customized system built with Custom Translator. Add the Category ID from your Custom Translator
             project details to this parameter to use your deployed customized system. Default value is: general.
             </param>
             <param name="profanityAction">
             Specifies how profanities should be treated in translations.
             Possible values are: NoAction (default), Marked or Deleted. Allowed values: "NoAction" | "Marked" | "Deleted"
             </param>
             <param name="profanityMarker">
             Specifies how profanities should be marked in translations.
             Possible values are: Asterisk (default) or Tag. . Allowed values: "Asterisk" | "Tag"
             </param>
             <param name="includeAlignment">
             Specifies whether to include alignment projection from source text to translated text.
             Possible values are: true or false (default).
             </param>
             <param name="includeSentenceLength">
             Specifies whether to include sentence boundaries for the input text and the translated text.
             Possible values are: true or false (default).
             </param>
             <param name="suggestedFrom">
             Specifies a fallback language if the language of the input text can't be identified.
             Language autodetection is applied when the from parameter is omitted. If detection fails,
             the suggestedFrom language will be assumed.
             </param>
             <param name="fromScript"> Specifies the script of the input text. </param>
             <param name="toScript"> Specifies the script of the translated text. </param>
             <param name="allowFallback">
             Specifies that the service is allowed to fall back to a general system when a custom system doesn't exist.
             Possible values are: true (default) or false.
            
             allowFallback=false specifies that the translation should only use systems trained for the category specified
             by the request. If a translation for language X to language Y requires chaining through a pivot language E,
             then all the systems in the chain (X → E and E → Y) will need to be custom and have the same category.
             If no system is found with the specific category, the request will return a 400 status code. allowFallback=true
             specifies that the service is allowed to fall back to a general system when a custom system doesn't exist.
             </param>
             <param name="cancellationToken"> The cancellation token to use. </param>
             <exception cref="T:System.ArgumentNullException"> <paramref name="to" /> or <paramref name="requestBody" /> is null. </exception>
        </member>
        <member name="M:Azure.AI.Translation.Text.TextTranslationClient.Translate(System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{Azure.AI.Translation.Text.InputTextItem},System.Guid,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.String,System.String,System.String,System.Nullable{System.Boolean},System.Threading.CancellationToken)">
             <summary> Translate Text. </summary>
             <param name="to">
             Specifies the language of the output text. The target language must be one of the supported languages included
             in the translation scope. For example, use to=de to translate to German.
             It's possible to translate to multiple languages simultaneously by repeating the parameter in the query string.
             For example, use to=de&amp;to=it to translate to German and Italian.
             </param>
             <param name="requestBody"> Defines the content of the request. </param>
             <param name="clientTraceId"> A client-generated GUID to uniquely identify the request. </param>
             <param name="from">
             Specifies the language of the input text. Find which languages are available to translate from by
             looking up supported languages using the translation scope. If the from parameter isn't specified,
             automatic language detection is applied to determine the source language.
            
             You must use the from parameter rather than autodetection when using the dynamic dictionary feature.
             Note: the dynamic dictionary feature is case-sensitive.
             </param>
             <param name="textType">
             Defines whether the text being translated is plain text or HTML text. Any HTML needs to be a well-formed,
             complete element. Possible values are: plain (default) or html. Allowed values: "Plain" | "Html"
             </param>
             <param name="category">
             A string specifying the category (domain) of the translation. This parameter is used to get translations
             from a customized system built with Custom Translator. Add the Category ID from your Custom Translator
             project details to this parameter to use your deployed customized system. Default value is: general.
             </param>
             <param name="profanityAction">
             Specifies how profanities should be treated in translations.
             Possible values are: NoAction (default), Marked or Deleted. Allowed values: "NoAction" | "Marked" | "Deleted"
             </param>
             <param name="profanityMarker">
             Specifies how profanities should be marked in translations.
             Possible values are: Asterisk (default) or Tag. . Allowed values: "Asterisk" | "Tag"
             </param>
             <param name="includeAlignment">
             Specifies whether to include alignment projection from source text to translated text.
             Possible values are: true or false (default).
             </param>
             <param name="includeSentenceLength">
             Specifies whether to include sentence boundaries for the input text and the translated text.
             Possible values are: true or false (default).
             </param>
             <param name="suggestedFrom">
             Specifies a fallback language if the language of the input text can't be identified.
             Language autodetection is applied when the from parameter is omitted. If detection fails,
             the suggestedFrom language will be assumed.
             </param>
             <param name="fromScript"> Specifies the script of the input text. </param>
             <param name="toScript"> Specifies the script of the translated text. </param>
             <param name="allowFallback">
             Specifies that the service is allowed to fall back to a general system when a custom system doesn't exist.
             Possible values are: true (default) or false.
            
             allowFallback=false specifies that the translation should only use systems trained for the category specified
             by the request. If a translation for language X to language Y requires chaining through a pivot language E,
             then all the systems in the chain (X → E and E → Y) will need to be custom and have the same category.
             If no system is found with the specific category, the request will return a 400 status code. allowFallback=true
             specifies that the service is allowed to fall back to a general system when a custom system doesn't exist.
             </param>
             <param name="cancellationToken"> The cancellation token to use. </param>
             <exception cref="T:System.ArgumentNullException"> <paramref name="to" /> or <paramref name="requestBody" /> is null. </exception>
        </member>
        <member name="M:Azure.AI.Translation.Text.TextTranslationClient.TranslateAsync(System.Collections.Generic.IEnumerable{System.String},Azure.Core.RequestContent,System.Guid,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.String,System.String,System.String,System.Nullable{System.Boolean},Azure.RequestContext)">
             <summary> Translate Text. </summary>
             <param name="to">
             Specifies the language of the output text. The target language must be one of the supported languages included
             in the translation scope. For example, use to=de to translate to German.
             It's possible to translate to multiple languages simultaneously by repeating the parameter in the query string.
             For example, use to=de&amp;to=it to translate to German and Italian.
             </param>
             <param name="content"> The content to send as the body of the request. Details of the request body schema are in the Remarks section below. </param>
             <param name="clientTraceId"> A client-generated GUID to uniquely identify the request. </param>
             <param name="from">
             Specifies the language of the input text. Find which languages are available to translate from by
             looking up supported languages using the translation scope. If the from parameter isn't specified,
             automatic language detection is applied to determine the source language.
            
             You must use the from parameter rather than autodetection when using the dynamic dictionary feature.
             Note: the dynamic dictionary feature is case-sensitive.
             </param>
             <param name="textType">
             Defines whether the text being translated is plain text or HTML text. Any HTML needs to be a well-formed,
             complete element. Possible values are: plain (default) or html. Allowed values: "plain" | "html"
             </param>
             <param name="category">
             A string specifying the category (domain) of the translation. This parameter is used to get translations
             from a customized system built with Custom Translator. Add the Category ID from your Custom Translator
             project details to this parameter to use your deployed customized system. Default value is: general.
             </param>
             <param name="profanityAction">
             Specifies how profanities should be treated in translations.
             Possible values are: NoAction (default), Marked or Deleted. Allowed values: "NoAction" | "Marked" | "Deleted"
             </param>
             <param name="profanityMarker">
             Specifies how profanities should be marked in translations.
             Possible values are: Asterisk (default) or Tag. . Allowed values: "Asterisk" | "Tag"
             </param>
             <param name="includeAlignment">
             Specifies whether to include alignment projection from source text to translated text.
             Possible values are: true or false (default).
             </param>
             <param name="includeSentenceLength">
             Specifies whether to include sentence boundaries for the input text and the translated text.
             Possible values are: true or false (default).
             </param>
             <param name="suggestedFrom">
             Specifies a fallback language if the language of the input text can't be identified.
             Language autodetection is applied when the from parameter is omitted. If detection fails,
             the suggestedFrom language will be assumed.
             </param>
             <param name="fromScript"> Specifies the script of the input text. </param>
             <param name="toScript"> Specifies the script of the translated text. </param>
             <param name="allowFallback">
             Specifies that the service is allowed to fall back to a general system when a custom system doesn't exist.
             Possible values are: true (default) or false.
            
             allowFallback=false specifies that the translation should only use systems trained for the category specified
             by the request. If a translation for language X to language Y requires chaining through a pivot language E,
             then all the systems in the chain (X → E and E → Y) will need to be custom and have the same category.
             If no system is found with the specific category, the request will return a 400 status code. allowFallback=true
             specifies that the service is allowed to fall back to a general system when a custom system doesn't exist.
             </param>
             <param name="context"> The request context, which can override default behaviors of the client pipeline on a per-call basis. </param>
             <exception cref="T:System.ArgumentNullException"> <paramref name="to" /> or <paramref name="content" /> is null. </exception>
             <exception cref="T:Azure.RequestFailedException"> Service returned a non-success status code. </exception>
             <returns> The response returned from the service. Details of the response body schema are in the Remarks section below. </returns>
        </member>
        <member name="M:Azure.AI.Translation.Text.TextTranslationClient.Translate(System.Collections.Generic.IEnumerable{System.String},Azure.Core.RequestContent,System.Guid,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.String,System.String,System.String,System.Nullable{System.Boolean},Azure.RequestContext)">
             <summary> Translate Text. </summary>
             <param name="to">
             Specifies the language of the output text. The target language must be one of the supported languages included
             in the translation scope. For example, use to=de to translate to German.
             It's possible to translate to multiple languages simultaneously by repeating the parameter in the query string.
             For example, use to=de&amp;to=it to translate to German and Italian.
             </param>
             <param name="content"> The content to send as the body of the request. Details of the request body schema are in the Remarks section below. </param>
             <param name="clientTraceId"> A client-generated GUID to uniquely identify the request. </param>
             <param name="from">
             Specifies the language of the input text. Find which languages are available to translate from by
             looking up supported languages using the translation scope. If the from parameter isn't specified,
             automatic language detection is applied to determine the source language.
            
             You must use the from parameter rather than autodetection when using the dynamic dictionary feature.
             Note: the dynamic dictionary feature is case-sensitive.
             </param>
             <param name="textType">
             Defines whether the text being translated is plain text or HTML text. Any HTML needs to be a well-formed,
             complete element. Possible values are: plain (default) or html. Allowed values: "plain" | "html"
             </param>
             <param name="category">
             A string specifying the category (domain) of the translation. This parameter is used to get translations
             from a customized system built with Custom Translator. Add the Category ID from your Custom Translator
             project details to this parameter to use your deployed customized system. Default value is: general.
             </param>
             <param name="profanityAction">
             Specifies how profanities should be treated in translations.
             Possible values are: NoAction (default), Marked or Deleted. Allowed values: "NoAction" | "Marked" | "Deleted"
             </param>
             <param name="profanityMarker">
             Specifies how profanities should be marked in translations.
             Possible values are: Asterisk (default) or Tag. . Allowed values: "Asterisk" | "Tag"
             </param>
             <param name="includeAlignment">
             Specifies whether to include alignment projection from source text to translated text.
             Possible values are: true or false (default).
             </param>
             <param name="includeSentenceLength">
             Specifies whether to include sentence boundaries for the input text and the translated text.
             Possible values are: true or false (default).
             </param>
             <param name="suggestedFrom">
             Specifies a fallback language if the language of the input text can't be identified.
             Language autodetection is applied when the from parameter is omitted. If detection fails,
             the suggestedFrom language will be assumed.
             </param>
             <param name="fromScript"> Specifies the script of the input text. </param>
             <param name="toScript"> Specifies the script of the translated text. </param>
             <param name="allowFallback">
             Specifies that the service is allowed to fall back to a general system when a custom system doesn't exist.
             Possible values are: true (default) or false.
            
             allowFallback=false specifies that the translation should only use systems trained for the category specified
             by the request. If a translation for language X to language Y requires chaining through a pivot language E,
             then all the systems in the chain (X → E and E → Y) will need to be custom and have the same category.
             If no system is found with the specific category, the request will return a 400 status code. allowFallback=true
             specifies that the service is allowed to fall back to a general system when a custom system doesn't exist.
             </param>
             <param name="context"> The request context, which can override default behaviors of the client pipeline on a per-call basis. </param>
             <exception cref="T:System.ArgumentNullException"> <paramref name="to" /> or <paramref name="content" /> is null. </exception>
             <exception cref="T:Azure.RequestFailedException"> Service returned a non-success status code. </exception>
             <returns> The response returned from the service. Details of the response body schema are in the Remarks section below. </returns>
        </member>
        <member name="M:Azure.AI.Translation.Text.TextTranslationClient.TransliterateAsync(System.String,System.String,System.String,System.Collections.Generic.IEnumerable{Azure.AI.Translation.Text.InputTextItem},System.Guid,System.Threading.CancellationToken)">
            <summary> Transliterate Text. </summary>
            <param name="language">
            Specifies the language of the text to convert from one script to another.
            Possible languages are listed in the transliteration scope obtained by querying the service
            for its supported languages.
            </param>
            <param name="fromScript">
            Specifies the script used by the input text. Look up supported languages using the transliteration scope,
            to find input scripts available for the selected language.
            </param>
            <param name="toScript">
            Specifies the output script. Look up supported languages using the transliteration scope, to find output
            scripts available for the selected combination of input language and input script.
            </param>
            <param name="requestBody"> Defines the content of the request. </param>
            <param name="clientTraceId"> A client-generated GUID to uniquely identify the request. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="language" />, <paramref name="fromScript" />, <paramref name="toScript" /> or <paramref name="requestBody" /> is null. </exception>
        </member>
        <member name="M:Azure.AI.Translation.Text.TextTranslationClient.Transliterate(System.String,System.String,System.String,System.Collections.Generic.IEnumerable{Azure.AI.Translation.Text.InputTextItem},System.Guid,System.Threading.CancellationToken)">
            <summary> Transliterate Text. </summary>
            <param name="language">
            Specifies the language of the text to convert from one script to another.
            Possible languages are listed in the transliteration scope obtained by querying the service
            for its supported languages.
            </param>
            <param name="fromScript">
            Specifies the script used by the input text. Look up supported languages using the transliteration scope,
            to find input scripts available for the selected language.
            </param>
            <param name="toScript">
            Specifies the output script. Look up supported languages using the transliteration scope, to find output
            scripts available for the selected combination of input language and input script.
            </param>
            <param name="requestBody"> Defines the content of the request. </param>
            <param name="clientTraceId"> A client-generated GUID to uniquely identify the request. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="language" />, <paramref name="fromScript" />, <paramref name="toScript" /> or <paramref name="requestBody" /> is null. </exception>
        </member>
        <member name="M:Azure.AI.Translation.Text.TextTranslationClient.TransliterateAsync(System.String,System.String,System.String,Azure.Core.RequestContent,System.Guid,Azure.RequestContext)">
            <summary> Transliterate Text. </summary>
            <param name="language">
            Specifies the language of the text to convert from one script to another.
            Possible languages are listed in the transliteration scope obtained by querying the service
            for its supported languages.
            </param>
            <param name="fromScript">
            Specifies the script used by the input text. Look up supported languages using the transliteration scope,
            to find input scripts available for the selected language.
            </param>
            <param name="toScript">
            Specifies the output script. Look up supported languages using the transliteration scope, to find output
            scripts available for the selected combination of input language and input script.
            </param>
            <param name="content"> The content to send as the body of the request. Details of the request body schema are in the Remarks section below. </param>
            <param name="clientTraceId"> A client-generated GUID to uniquely identify the request. </param>
            <param name="context"> The request context, which can override default behaviors of the client pipeline on a per-call basis. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="language" />, <paramref name="fromScript" />, <paramref name="toScript" /> or <paramref name="content" /> is null. </exception>
            <exception cref="T:Azure.RequestFailedException"> Service returned a non-success status code. </exception>
            <returns> The response returned from the service. Details of the response body schema are in the Remarks section below. </returns>
        </member>
        <member name="M:Azure.AI.Translation.Text.TextTranslationClient.Transliterate(System.String,System.String,System.String,Azure.Core.RequestContent,System.Guid,Azure.RequestContext)">
            <summary> Transliterate Text. </summary>
            <param name="language">
            Specifies the language of the text to convert from one script to another.
            Possible languages are listed in the transliteration scope obtained by querying the service
            for its supported languages.
            </param>
            <param name="fromScript">
            Specifies the script used by the input text. Look up supported languages using the transliteration scope,
            to find input scripts available for the selected language.
            </param>
            <param name="toScript">
            Specifies the output script. Look up supported languages using the transliteration scope, to find output
            scripts available for the selected combination of input language and input script.
            </param>
            <param name="content"> The content to send as the body of the request. Details of the request body schema are in the Remarks section below. </param>
            <param name="clientTraceId"> A client-generated GUID to uniquely identify the request. </param>
            <param name="context"> The request context, which can override default behaviors of the client pipeline on a per-call basis. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="language" />, <paramref name="fromScript" />, <paramref name="toScript" /> or <paramref name="content" /> is null. </exception>
            <exception cref="T:Azure.RequestFailedException"> Service returned a non-success status code. </exception>
            <returns> The response returned from the service. Details of the response body schema are in the Remarks section below. </returns>
        </member>
        <member name="M:Azure.AI.Translation.Text.TextTranslationClient.FindSentenceBoundariesAsync(System.Collections.Generic.IEnumerable{Azure.AI.Translation.Text.InputTextItem},System.Guid,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Find Sentence Boundaries. </summary>
            <param name="requestBody"> Defines the content of the request. </param>
            <param name="clientTraceId"> A client-generated GUID to uniquely identify the request. </param>
            <param name="language">
            Language tag identifying the language of the input text.
            If a code isn't specified, automatic language detection will be applied.
            </param>
            <param name="script">
            Script tag identifying the script used by the input text.
            If a script isn't specified, the default script of the language will be assumed.
            </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="requestBody" /> is null. </exception>
        </member>
        <member name="M:Azure.AI.Translation.Text.TextTranslationClient.FindSentenceBoundaries(System.Collections.Generic.IEnumerable{Azure.AI.Translation.Text.InputTextItem},System.Guid,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Find Sentence Boundaries. </summary>
            <param name="requestBody"> Defines the content of the request. </param>
            <param name="clientTraceId"> A client-generated GUID to uniquely identify the request. </param>
            <param name="language">
            Language tag identifying the language of the input text.
            If a code isn't specified, automatic language detection will be applied.
            </param>
            <param name="script">
            Script tag identifying the script used by the input text.
            If a script isn't specified, the default script of the language will be assumed.
            </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="requestBody" /> is null. </exception>
        </member>
        <member name="M:Azure.AI.Translation.Text.TextTranslationClient.FindSentenceBoundariesAsync(Azure.Core.RequestContent,System.Guid,System.String,System.String,Azure.RequestContext)">
            <summary> Find Sentence Boundaries. </summary>
            <param name="content"> The content to send as the body of the request. Details of the request body schema are in the Remarks section below. </param>
            <param name="clientTraceId"> A client-generated GUID to uniquely identify the request. </param>
            <param name="language">
            Language tag identifying the language of the input text.
            If a code isn't specified, automatic language detection will be applied.
            </param>
            <param name="script">
            Script tag identifying the script used by the input text.
            If a script isn't specified, the default script of the language will be assumed.
            </param>
            <param name="context"> The request context, which can override default behaviors of the client pipeline on a per-call basis. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="content" /> is null. </exception>
            <exception cref="T:Azure.RequestFailedException"> Service returned a non-success status code. </exception>
            <returns> The response returned from the service. Details of the response body schema are in the Remarks section below. </returns>
        </member>
        <member name="M:Azure.AI.Translation.Text.TextTranslationClient.FindSentenceBoundaries(Azure.Core.RequestContent,System.Guid,System.String,System.String,Azure.RequestContext)">
            <summary> Find Sentence Boundaries. </summary>
            <param name="content"> The content to send as the body of the request. Details of the request body schema are in the Remarks section below. </param>
            <param name="clientTraceId"> A client-generated GUID to uniquely identify the request. </param>
            <param name="language">
            Language tag identifying the language of the input text.
            If a code isn't specified, automatic language detection will be applied.
            </param>
            <param name="script">
            Script tag identifying the script used by the input text.
            If a script isn't specified, the default script of the language will be assumed.
            </param>
            <param name="context"> The request context, which can override default behaviors of the client pipeline on a per-call basis. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="content" /> is null. </exception>
            <exception cref="T:Azure.RequestFailedException"> Service returned a non-success status code. </exception>
            <returns> The response returned from the service. Details of the response body schema are in the Remarks section below. </returns>
        </member>
        <member name="M:Azure.AI.Translation.Text.TextTranslationClient.LookupDictionaryEntriesAsync(System.String,System.String,System.Collections.Generic.IEnumerable{Azure.AI.Translation.Text.InputTextItem},System.Guid,System.Threading.CancellationToken)">
            <summary> Lookup Dictionary Entries. </summary>
            <param name="from">
            Specifies the language of the input text.
            The source language must be one of the supported languages included in the dictionary scope.
            </param>
            <param name="to">
            Specifies the language of the output text.
            The target language must be one of the supported languages included in the dictionary scope.
            </param>
            <param name="requestBody"> Defines the content of the request. </param>
            <param name="clientTraceId"> A client-generated GUID to uniquely identify the request. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="from" />, <paramref name="to" /> or <paramref name="requestBody" /> is null. </exception>
        </member>
        <member name="M:Azure.AI.Translation.Text.TextTranslationClient.LookupDictionaryEntries(System.String,System.String,System.Collections.Generic.IEnumerable{Azure.AI.Translation.Text.InputTextItem},System.Guid,System.Threading.CancellationToken)">
            <summary> Lookup Dictionary Entries. </summary>
            <param name="from">
            Specifies the language of the input text.
            The source language must be one of the supported languages included in the dictionary scope.
            </param>
            <param name="to">
            Specifies the language of the output text.
            The target language must be one of the supported languages included in the dictionary scope.
            </param>
            <param name="requestBody"> Defines the content of the request. </param>
            <param name="clientTraceId"> A client-generated GUID to uniquely identify the request. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="from" />, <paramref name="to" /> or <paramref name="requestBody" /> is null. </exception>
        </member>
        <member name="M:Azure.AI.Translation.Text.TextTranslationClient.LookupDictionaryEntriesAsync(System.String,System.String,Azure.Core.RequestContent,System.Guid,Azure.RequestContext)">
            <summary> Lookup Dictionary Entries. </summary>
            <param name="from">
            Specifies the language of the input text.
            The source language must be one of the supported languages included in the dictionary scope.
            </param>
            <param name="to">
            Specifies the language of the output text.
            The target language must be one of the supported languages included in the dictionary scope.
            </param>
            <param name="content"> The content to send as the body of the request. Details of the request body schema are in the Remarks section below. </param>
            <param name="clientTraceId"> A client-generated GUID to uniquely identify the request. </param>
            <param name="context"> The request context, which can override default behaviors of the client pipeline on a per-call basis. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="from" />, <paramref name="to" /> or <paramref name="content" /> is null. </exception>
            <exception cref="T:Azure.RequestFailedException"> Service returned a non-success status code. </exception>
            <returns> The response returned from the service. Details of the response body schema are in the Remarks section below. </returns>
        </member>
        <member name="M:Azure.AI.Translation.Text.TextTranslationClient.LookupDictionaryEntries(System.String,System.String,Azure.Core.RequestContent,System.Guid,Azure.RequestContext)">
            <summary> Lookup Dictionary Entries. </summary>
            <param name="from">
            Specifies the language of the input text.
            The source language must be one of the supported languages included in the dictionary scope.
            </param>
            <param name="to">
            Specifies the language of the output text.
            The target language must be one of the supported languages included in the dictionary scope.
            </param>
            <param name="content"> The content to send as the body of the request. Details of the request body schema are in the Remarks section below. </param>
            <param name="clientTraceId"> A client-generated GUID to uniquely identify the request. </param>
            <param name="context"> The request context, which can override default behaviors of the client pipeline on a per-call basis. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="from" />, <paramref name="to" /> or <paramref name="content" /> is null. </exception>
            <exception cref="T:Azure.RequestFailedException"> Service returned a non-success status code. </exception>
            <returns> The response returned from the service. Details of the response body schema are in the Remarks section below. </returns>
        </member>
        <member name="M:Azure.AI.Translation.Text.TextTranslationClient.LookupDictionaryExamplesAsync(System.String,System.String,System.Collections.Generic.IEnumerable{Azure.AI.Translation.Text.DictionaryExampleTextItem},System.Guid,System.Threading.CancellationToken)">
            <summary> Lookup Dictionary Examples. </summary>
            <param name="from">
            Specifies the language of the input text.
            The source language must be one of the supported languages included in the dictionary scope.
            </param>
            <param name="to">
            Specifies the language of the output text.
            The target language must be one of the supported languages included in the dictionary scope.
            </param>
            <param name="requestBody"> Defines the content of the request. </param>
            <param name="clientTraceId"> A client-generated GUID to uniquely identify the request. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="from" />, <paramref name="to" /> or <paramref name="requestBody" /> is null. </exception>
        </member>
        <member name="M:Azure.AI.Translation.Text.TextTranslationClient.LookupDictionaryExamples(System.String,System.String,System.Collections.Generic.IEnumerable{Azure.AI.Translation.Text.DictionaryExampleTextItem},System.Guid,System.Threading.CancellationToken)">
            <summary> Lookup Dictionary Examples. </summary>
            <param name="from">
            Specifies the language of the input text.
            The source language must be one of the supported languages included in the dictionary scope.
            </param>
            <param name="to">
            Specifies the language of the output text.
            The target language must be one of the supported languages included in the dictionary scope.
            </param>
            <param name="requestBody"> Defines the content of the request. </param>
            <param name="clientTraceId"> A client-generated GUID to uniquely identify the request. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="from" />, <paramref name="to" /> or <paramref name="requestBody" /> is null. </exception>
        </member>
        <member name="M:Azure.AI.Translation.Text.TextTranslationClient.LookupDictionaryExamplesAsync(System.String,System.String,Azure.Core.RequestContent,System.Guid,Azure.RequestContext)">
            <summary> Lookup Dictionary Examples. </summary>
            <param name="from">
            Specifies the language of the input text.
            The source language must be one of the supported languages included in the dictionary scope.
            </param>
            <param name="to">
            Specifies the language of the output text.
            The target language must be one of the supported languages included in the dictionary scope.
            </param>
            <param name="content"> The content to send as the body of the request. Details of the request body schema are in the Remarks section below. </param>
            <param name="clientTraceId"> A client-generated GUID to uniquely identify the request. </param>
            <param name="context"> The request context, which can override default behaviors of the client pipeline on a per-call basis. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="from" />, <paramref name="to" /> or <paramref name="content" /> is null. </exception>
            <exception cref="T:Azure.RequestFailedException"> Service returned a non-success status code. </exception>
            <returns> The response returned from the service. Details of the response body schema are in the Remarks section below. </returns>
        </member>
        <member name="M:Azure.AI.Translation.Text.TextTranslationClient.LookupDictionaryExamples(System.String,System.String,Azure.Core.RequestContent,System.Guid,Azure.RequestContext)">
            <summary> Lookup Dictionary Examples. </summary>
            <param name="from">
            Specifies the language of the input text.
            The source language must be one of the supported languages included in the dictionary scope.
            </param>
            <param name="to">
            Specifies the language of the output text.
            The target language must be one of the supported languages included in the dictionary scope.
            </param>
            <param name="content"> The content to send as the body of the request. Details of the request body schema are in the Remarks section below. </param>
            <param name="clientTraceId"> A client-generated GUID to uniquely identify the request. </param>
            <param name="context"> The request context, which can override default behaviors of the client pipeline on a per-call basis. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="from" />, <paramref name="to" /> or <paramref name="content" /> is null. </exception>
            <exception cref="T:Azure.RequestFailedException"> Service returned a non-success status code. </exception>
            <returns> The response returned from the service. Details of the response body schema are in the Remarks section below. </returns>
        </member>
        <member name="P:Azure.AI.Translation.Text.TextTranslationClient.ClientDiagnostics">
            <summary> The ClientDiagnostics is used to provide tracing support for the client library. </summary>
        </member>
        <member name="P:Azure.AI.Translation.Text.TextTranslationClient.Pipeline">
            <summary> The HTTP pipeline for sending and receiving REST requests and responses. </summary>
        </member>
        <member name="M:Azure.AI.Translation.Text.TextTranslationClient.#ctor">
            <summary> Initializes a new instance of TextTranslationClient for mocking. </summary>
        </member>
        <member name="M:Azure.AI.Translation.Text.TextTranslationClient.GetSupportedLanguagesAsync(System.String,System.String,System.String,System.Nullable{Azure.ETag},System.Threading.CancellationToken)">
            <summary> Gets the set of languages currently supported by other operations of the Translator. </summary>
            <param name="clientTraceId"> A client-generated GUID to uniquely identify the request. </param>
            <param name="scope">
            A comma-separated list of names defining the group of languages to return.
            Allowed group names are: `translation`, `transliteration` and `dictionary`.
            If no scope is given, then all groups are returned, which is equivalent to passing
            `scope=translation,transliteration,dictionary`. To decide which set of supported languages
            is appropriate for your scenario, see the description of the [response object](#response-body).
            </param>
            <param name="acceptLanguage">
            The language to use for user interface strings. Some of the fields in the response are names of languages or
            names of regions. Use this parameter to define the language in which these names are returned.
            The language is specified by providing a well-formed BCP 47 language tag. For instance, use the value `fr`
            to request names in French or use the value `zh-Hant` to request names in Chinese Traditional.
            Names are provided in the English language when a target language is not specified or when localization
            is not available.
            </param>
            <param name="ifNoneMatch">
            Passing the value of the ETag response header in an If-None-Match field will allow the service to optimize the response.
            If the resource has not been modified, the service will return status code 304 and an empty response body.
            </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <example>
This sample shows how to call GetSupportedLanguagesAsync.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TextTranslationClient client = new TextTranslationClient(endpoint);

Response<GetSupportedLanguagesResult> response = await client.GetSupportedLanguagesAsync();
]]></code>
This sample shows how to call GetSupportedLanguagesAsync with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TextTranslationClient client = new TextTranslationClient(endpoint);

Response<GetSupportedLanguagesResult> response = await client.GetSupportedLanguagesAsync(clientTraceId: "<clientTraceId>", scope: "<scope>", acceptLanguage: "<acceptLanguage>", ifNoneMatch: new ETag("<ifNoneMatch>"));
]]></code></example>
        </member>
        <member name="M:Azure.AI.Translation.Text.TextTranslationClient.GetSupportedLanguages(System.String,System.String,System.String,System.Nullable{Azure.ETag},System.Threading.CancellationToken)">
            <summary> Gets the set of languages currently supported by other operations of the Translator. </summary>
            <param name="clientTraceId"> A client-generated GUID to uniquely identify the request. </param>
            <param name="scope">
            A comma-separated list of names defining the group of languages to return.
            Allowed group names are: `translation`, `transliteration` and `dictionary`.
            If no scope is given, then all groups are returned, which is equivalent to passing
            `scope=translation,transliteration,dictionary`. To decide which set of supported languages
            is appropriate for your scenario, see the description of the [response object](#response-body).
            </param>
            <param name="acceptLanguage">
            The language to use for user interface strings. Some of the fields in the response are names of languages or
            names of regions. Use this parameter to define the language in which these names are returned.
            The language is specified by providing a well-formed BCP 47 language tag. For instance, use the value `fr`
            to request names in French or use the value `zh-Hant` to request names in Chinese Traditional.
            Names are provided in the English language when a target language is not specified or when localization
            is not available.
            </param>
            <param name="ifNoneMatch">
            Passing the value of the ETag response header in an If-None-Match field will allow the service to optimize the response.
            If the resource has not been modified, the service will return status code 304 and an empty response body.
            </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <example>
This sample shows how to call GetSupportedLanguages.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TextTranslationClient client = new TextTranslationClient(endpoint);

Response<GetSupportedLanguagesResult> response = client.GetSupportedLanguages();
]]></code>
This sample shows how to call GetSupportedLanguages with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TextTranslationClient client = new TextTranslationClient(endpoint);

Response<GetSupportedLanguagesResult> response = client.GetSupportedLanguages(clientTraceId: "<clientTraceId>", scope: "<scope>", acceptLanguage: "<acceptLanguage>", ifNoneMatch: new ETag("<ifNoneMatch>"));
]]></code></example>
        </member>
        <member name="M:Azure.AI.Translation.Text.TextTranslationClient.GetSupportedLanguagesAsync(System.String,System.String,System.String,System.Nullable{Azure.ETag},Azure.RequestContext)">
            <summary>
            [Protocol Method] Gets the set of languages currently supported by other operations of the Translator.
            <list type="bullet">
            <item>
            <description>
            This <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/ProtocolMethods.md">protocol method</see> allows explicit creation of the request and processing of the response for advanced scenarios.
            </description>
            </item>
            <item>
            <description>
            Please try the simpler <see cref="M:Azure.AI.Translation.Text.TextTranslationClient.GetSupportedLanguagesAsync(System.String,System.String,System.String,System.Nullable{Azure.ETag},System.Threading.CancellationToken)" /> convenience overload with strongly typed models first.
            </description>
            </item>
            </list>
            </summary>
            <param name="clientTraceId"> A client-generated GUID to uniquely identify the request. </param>
            <param name="scope">
            A comma-separated list of names defining the group of languages to return.
            Allowed group names are: `translation`, `transliteration` and `dictionary`.
            If no scope is given, then all groups are returned, which is equivalent to passing
            `scope=translation,transliteration,dictionary`. To decide which set of supported languages
            is appropriate for your scenario, see the description of the [response object](#response-body).
            </param>
            <param name="acceptLanguage">
            The language to use for user interface strings. Some of the fields in the response are names of languages or
            names of regions. Use this parameter to define the language in which these names are returned.
            The language is specified by providing a well-formed BCP 47 language tag. For instance, use the value `fr`
            to request names in French or use the value `zh-Hant` to request names in Chinese Traditional.
            Names are provided in the English language when a target language is not specified or when localization
            is not available.
            </param>
            <param name="ifNoneMatch">
            Passing the value of the ETag response header in an If-None-Match field will allow the service to optimize the response.
            If the resource has not been modified, the service will return status code 304 and an empty response body.
            </param>
            <param name="context"> The request context, which can override default behaviors of the client pipeline on a per-call basis. </param>
            <exception cref="T:Azure.RequestFailedException"> Service returned a non-success status code. </exception>
            <returns> The response returned from the service. </returns>
            <example>
This sample shows how to call GetSupportedLanguagesAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TextTranslationClient client = new TextTranslationClient(endpoint);

Response response = await client.GetSupportedLanguagesAsync(null, null, null, null, null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.ToString());
]]></code>
This sample shows how to call GetSupportedLanguagesAsync with all parameters and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TextTranslationClient client = new TextTranslationClient(endpoint);

Response response = await client.GetSupportedLanguagesAsync("<clientTraceId>", "<scope>", "<acceptLanguage>", new ETag("<ifNoneMatch>"), null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("translation").GetProperty("<key>").GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("translation").GetProperty("<key>").GetProperty("nativeName").ToString());
Console.WriteLine(result.GetProperty("translation").GetProperty("<key>").GetProperty("dir").ToString());
Console.WriteLine(result.GetProperty("transliteration").GetProperty("<key>").GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("transliteration").GetProperty("<key>").GetProperty("nativeName").ToString());
Console.WriteLine(result.GetProperty("transliteration").GetProperty("<key>").GetProperty("scripts")[0].GetProperty("toScripts")[0].GetProperty("code").ToString());
Console.WriteLine(result.GetProperty("transliteration").GetProperty("<key>").GetProperty("scripts")[0].GetProperty("toScripts")[0].GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("transliteration").GetProperty("<key>").GetProperty("scripts")[0].GetProperty("toScripts")[0].GetProperty("nativeName").ToString());
Console.WriteLine(result.GetProperty("transliteration").GetProperty("<key>").GetProperty("scripts")[0].GetProperty("toScripts")[0].GetProperty("dir").ToString());
Console.WriteLine(result.GetProperty("transliteration").GetProperty("<key>").GetProperty("scripts")[0].GetProperty("code").ToString());
Console.WriteLine(result.GetProperty("transliteration").GetProperty("<key>").GetProperty("scripts")[0].GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("transliteration").GetProperty("<key>").GetProperty("scripts")[0].GetProperty("nativeName").ToString());
Console.WriteLine(result.GetProperty("transliteration").GetProperty("<key>").GetProperty("scripts")[0].GetProperty("dir").ToString());
Console.WriteLine(result.GetProperty("dictionary").GetProperty("<key>").GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("dictionary").GetProperty("<key>").GetProperty("nativeName").ToString());
Console.WriteLine(result.GetProperty("dictionary").GetProperty("<key>").GetProperty("dir").ToString());
Console.WriteLine(result.GetProperty("dictionary").GetProperty("<key>").GetProperty("translations")[0].GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("dictionary").GetProperty("<key>").GetProperty("translations")[0].GetProperty("nativeName").ToString());
Console.WriteLine(result.GetProperty("dictionary").GetProperty("<key>").GetProperty("translations")[0].GetProperty("dir").ToString());
Console.WriteLine(result.GetProperty("dictionary").GetProperty("<key>").GetProperty("translations")[0].GetProperty("code").ToString());
]]></code></example>
        </member>
        <member name="M:Azure.AI.Translation.Text.TextTranslationClient.GetSupportedLanguages(System.String,System.String,System.String,System.Nullable{Azure.ETag},Azure.RequestContext)">
            <summary>
            [Protocol Method] Gets the set of languages currently supported by other operations of the Translator.
            <list type="bullet">
            <item>
            <description>
            This <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/ProtocolMethods.md">protocol method</see> allows explicit creation of the request and processing of the response for advanced scenarios.
            </description>
            </item>
            <item>
            <description>
            Please try the simpler <see cref="M:Azure.AI.Translation.Text.TextTranslationClient.GetSupportedLanguages(System.String,System.String,System.String,System.Nullable{Azure.ETag},System.Threading.CancellationToken)" /> convenience overload with strongly typed models first.
            </description>
            </item>
            </list>
            </summary>
            <param name="clientTraceId"> A client-generated GUID to uniquely identify the request. </param>
            <param name="scope">
            A comma-separated list of names defining the group of languages to return.
            Allowed group names are: `translation`, `transliteration` and `dictionary`.
            If no scope is given, then all groups are returned, which is equivalent to passing
            `scope=translation,transliteration,dictionary`. To decide which set of supported languages
            is appropriate for your scenario, see the description of the [response object](#response-body).
            </param>
            <param name="acceptLanguage">
            The language to use for user interface strings. Some of the fields in the response are names of languages or
            names of regions. Use this parameter to define the language in which these names are returned.
            The language is specified by providing a well-formed BCP 47 language tag. For instance, use the value `fr`
            to request names in French or use the value `zh-Hant` to request names in Chinese Traditional.
            Names are provided in the English language when a target language is not specified or when localization
            is not available.
            </param>
            <param name="ifNoneMatch">
            Passing the value of the ETag response header in an If-None-Match field will allow the service to optimize the response.
            If the resource has not been modified, the service will return status code 304 and an empty response body.
            </param>
            <param name="context"> The request context, which can override default behaviors of the client pipeline on a per-call basis. </param>
            <exception cref="T:Azure.RequestFailedException"> Service returned a non-success status code. </exception>
            <returns> The response returned from the service. </returns>
            <example>
This sample shows how to call GetSupportedLanguages and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TextTranslationClient client = new TextTranslationClient(endpoint);

Response response = client.GetSupportedLanguages(null, null, null, null, null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.ToString());
]]></code>
This sample shows how to call GetSupportedLanguages with all parameters and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TextTranslationClient client = new TextTranslationClient(endpoint);

Response response = client.GetSupportedLanguages("<clientTraceId>", "<scope>", "<acceptLanguage>", new ETag("<ifNoneMatch>"), null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("translation").GetProperty("<key>").GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("translation").GetProperty("<key>").GetProperty("nativeName").ToString());
Console.WriteLine(result.GetProperty("translation").GetProperty("<key>").GetProperty("dir").ToString());
Console.WriteLine(result.GetProperty("transliteration").GetProperty("<key>").GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("transliteration").GetProperty("<key>").GetProperty("nativeName").ToString());
Console.WriteLine(result.GetProperty("transliteration").GetProperty("<key>").GetProperty("scripts")[0].GetProperty("toScripts")[0].GetProperty("code").ToString());
Console.WriteLine(result.GetProperty("transliteration").GetProperty("<key>").GetProperty("scripts")[0].GetProperty("toScripts")[0].GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("transliteration").GetProperty("<key>").GetProperty("scripts")[0].GetProperty("toScripts")[0].GetProperty("nativeName").ToString());
Console.WriteLine(result.GetProperty("transliteration").GetProperty("<key>").GetProperty("scripts")[0].GetProperty("toScripts")[0].GetProperty("dir").ToString());
Console.WriteLine(result.GetProperty("transliteration").GetProperty("<key>").GetProperty("scripts")[0].GetProperty("code").ToString());
Console.WriteLine(result.GetProperty("transliteration").GetProperty("<key>").GetProperty("scripts")[0].GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("transliteration").GetProperty("<key>").GetProperty("scripts")[0].GetProperty("nativeName").ToString());
Console.WriteLine(result.GetProperty("transliteration").GetProperty("<key>").GetProperty("scripts")[0].GetProperty("dir").ToString());
Console.WriteLine(result.GetProperty("dictionary").GetProperty("<key>").GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("dictionary").GetProperty("<key>").GetProperty("nativeName").ToString());
Console.WriteLine(result.GetProperty("dictionary").GetProperty("<key>").GetProperty("dir").ToString());
Console.WriteLine(result.GetProperty("dictionary").GetProperty("<key>").GetProperty("translations")[0].GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("dictionary").GetProperty("<key>").GetProperty("translations")[0].GetProperty("nativeName").ToString());
Console.WriteLine(result.GetProperty("dictionary").GetProperty("<key>").GetProperty("translations")[0].GetProperty("dir").ToString());
Console.WriteLine(result.GetProperty("dictionary").GetProperty("<key>").GetProperty("translations")[0].GetProperty("code").ToString());
]]></code></example>
        </member>
        <member name="T:Azure.AI.Translation.Text.TextTranslationClientOptions">
            <summary> Client options for TextTranslationClient. </summary>
            <summary> Client options for TextTranslationClient. </summary>
        </member>
        <member name="M:Azure.AI.Translation.Text.TextTranslationClientOptions.#ctor(Azure.AI.Translation.Text.TextTranslationClientOptions.ServiceVersion)">
            <summary> Initializes new instance of TextTranslationClientOptions. </summary>
        </member>
        <member name="T:Azure.AI.Translation.Text.TextTranslationClientOptions.ServiceVersion">
            <summary> The version of the service to use. </summary>
        </member>
        <member name="F:Azure.AI.Translation.Text.TextTranslationClientOptions.ServiceVersion.V3_0">
            <summary> Service version "3.0". </summary>
        </member>
        <member name="T:Azure.AI.Translation.Text.TextTranslationTranslateOptions">
            <summary> Client options for TextTranslationClient.Translate </summary>
        </member>
        <member name="P:Azure.AI.Translation.Text.TextTranslationTranslateOptions.TargetLanguages">
            <summary>
            Specifies the language of the output text. The target language must be one of the supported languages included
            in the translation scope. For example, use to=de to translate to German.
            It's possible to translate to multiple languages simultaneously by repeating the parameter in the query string.
            For example, use to=de and to=it to translate to German and Italian.
            </summary>
        </member>
        <member name="P:Azure.AI.Translation.Text.TextTranslationTranslateOptions.Content">
            <summary>
            Array of the text to be translated.
            </summary>
        </member>
        <member name="P:Azure.AI.Translation.Text.TextTranslationTranslateOptions.ClientTraceId">
            <summary>
            A client-generated GUID to uniquely identify the request.
            </summary>
        </member>
        <member name="P:Azure.AI.Translation.Text.TextTranslationTranslateOptions.SourceLanguage">
             <summary>
             Specifies the language of the input text. Find which languages are available to translate from by
             looking up supported languages using the translation scope. If the from parameter isn't specified,
             automatic language detection is applied to determine the source language.
            
             You must use the from parameter rather than autodetection when using the dynamic dictionary feature.
             Note: the dynamic dictionary feature is case-sensitive.
             </summary>
        </member>
        <member name="P:Azure.AI.Translation.Text.TextTranslationTranslateOptions.TextType">
            <summary>
            Defines whether the text being translated is plain text or HTML text. Any HTML needs to be a well-formed,
            complete element. Possible values are: plain (default) or html.
            </summary>
        </member>
        <member name="P:Azure.AI.Translation.Text.TextTranslationTranslateOptions.Category">
            <summary>
            A string specifying the category (domain) of the translation. This parameter is used to get translations
            from a customized system built with Custom Translator. Add the Category ID from your Custom Translator
            project details to this parameter to use your deployed customized system. Default value is: general.
            </summary>
        </member>
        <member name="P:Azure.AI.Translation.Text.TextTranslationTranslateOptions.ProfanityAction">
            <summary>
            Specifies how profanities should be treated in translations.
            Possible values are: NoAction (default), Marked or Deleted.
            </summary>
        </member>
        <member name="P:Azure.AI.Translation.Text.TextTranslationTranslateOptions.ProfanityMarker">
            <summary>
            Specifies how profanities should be marked in translations.
            Possible values are: Asterisk (default) or Tag.
            </summary>
        </member>
        <member name="P:Azure.AI.Translation.Text.TextTranslationTranslateOptions.IncludeAlignment">
            <summary>
            Specifies whether to include alignment projection from source text to translated text.
            Possible values are: true or false (default).
            </summary>
        </member>
        <member name="P:Azure.AI.Translation.Text.TextTranslationTranslateOptions.IncludeSentenceLength">
            <summary>
            Specifies whether to include sentence boundaries for the input text and the translated text.
            Possible values are: true or false (default).
            </summary>
        </member>
        <member name="P:Azure.AI.Translation.Text.TextTranslationTranslateOptions.SuggestedFrom">
            <summary>
            Specifies a fallback language if the language of the input text can't be identified.
            Language autodetection is applied when the from parameter is omitted. If detection fails,
            the SuggestedFrom language will be assumed.
            </summary>
        </member>
        <member name="P:Azure.AI.Translation.Text.TextTranslationTranslateOptions.FromScript">
            <summary>
            Specifies the script of the input text.
            </summary>
        </member>
        <member name="P:Azure.AI.Translation.Text.TextTranslationTranslateOptions.ToScript">
            <summary>
            Specifies the script of the translated text.
            </summary>
        </member>
        <member name="P:Azure.AI.Translation.Text.TextTranslationTranslateOptions.AllowFallback">
             <summary>
             Specifies that the service is allowed to fall back to a general system when a custom system doesn't exist.
             Possible values are: true (default) or false.
            
             AllowFallback=false specifies that the translation should only use systems trained for the category specified
             by the request. If a translation for language X to language Y requires chaining through a pivot language E,
             then all the systems in the chain (X → E and E → Y) will need to be custom and have the same category.
             If no system is found with the specific category, the request will return a 400 status code. AllowFallback=true
             specifies that the service is allowed to fall back to a general system when a custom system doesn't exist.
             </summary>
        </member>
        <member name="M:Azure.AI.Translation.Text.TextTranslationTranslateOptions.#ctor(System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String})">
            <summary> Initializes new instance of TextTranslationTranslateOptions. </summary>
            <param name="targetLanguages">
            Specifies the language of the output text. The target language must be one of the supported languages included
            in the translation scope. For example, use to=de to translate to German.
            It's possible to translate to multiple languages simultaneously by repeating the parameter in the query string.
            For example, use to=de&amp;to=it to translate to German and Italian.
            </param>
            <param name="content"> Array of the text to be translated.</param>
        </member>
        <member name="M:Azure.AI.Translation.Text.TextTranslationTranslateOptions.#ctor(System.String,System.String)">
            <summary> Initializes new instance of TextTranslationTranslateOptions. </summary>
            <param name="targetLanguage">
            Specifies the language of the output text. The target language must be one of the supported languages included
            in the translation scope. For example, use to=de to translate to German.
            </param>
            <param name="content">Text to be translated.</param>
        </member>
        <member name="M:Azure.AI.Translation.Text.TextTranslationTranslateOptions.#ctor(System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Guid,System.String,System.Nullable{Azure.AI.Translation.Text.TextType},System.String,System.Nullable{Azure.AI.Translation.Text.ProfanityAction},System.Nullable{Azure.AI.Translation.Text.ProfanityMarker},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.String,System.String,System.String,System.Nullable{System.Boolean})">
             <summary> Initializes new instance of TextTranslationTranslateOptions. </summary>
             <param name="targetLanguages">
             Specifies the language of the output text. The target language must be one of the supported languages included
             in the translation scope. For example, use to=de to translate to German.
             It's possible to translate to multiple languages simultaneously by repeating the parameter in the query string.
             For example, use to=de&amp;to=it to translate to German and Italian.
             </param>
             <param name="content"> Array of the text to be translated. </param>
             <param name="clientTraceId"> A client-generated GUID to uniquely identify the request. </param>
             <param name="sourceLanguage">
             Specifies the language of the input text. Find which languages are available to translate from by
             looking up supported languages using the translation scope. If the from parameter isn't specified,
             automatic language detection is applied to determine the source language.
            
             You must use the from parameter rather than autodetection when using the dynamic dictionary feature.
             Note: the dynamic dictionary feature is case-sensitive.
             </param>
             <param name="textType">
             Defines whether the text being translated is plain text or HTML text. Any HTML needs to be a well-formed,
             complete element. Possible values are: plain (default) or html.
             </param>
             <param name="category">
             A string specifying the category (domain) of the translation. This parameter is used to get translations
             from a customized system built with Custom Translator. Add the Category ID from your Custom Translator
             project details to this parameter to use your deployed customized system. Default value is: general.
             </param>
             <param name="profanityAction">
             Specifies how profanities should be treated in translations.
             Possible values are: NoAction (default), Marked or Deleted.
             </param>
             <param name="profanityMarker">
             Specifies how profanities should be marked in translations.
             Possible values are: Asterisk (default) or Tag.
             </param>
             <param name="includeAlignment">
             Specifies whether to include alignment projection from source text to translated text.
             Possible values are: true or false (default).
             </param>
             <param name="includeSentenceLength">
             Specifies whether to include sentence boundaries for the input text and the translated text.
             Possible values are: true or false (default).
             </param>
             <param name="suggestedFrom">
             Specifies a fallback language if the language of the input text can't be identified.
             Language autodetection is applied when the from parameter is omitted. If detection fails,
             the suggestedFrom language will be assumed.
             </param>
             <param name="fromScript"> Specifies the script of the input text. </param>
             <param name="toScript"> Specifies the script of the translated text. </param>
             <param name="allowFallback">
             Specifies that the service is allowed to fall back to a general system when a custom system doesn't exist.
             Possible values are: true (default) or false.
            
             allowFallback=false specifies that the translation should only use systems trained for the category specified
             by the request. If a translation for language X to language Y requires chaining through a pivot language E,
             then all the systems in the chain (X → E and E → Y) will need to be custom and have the same category.
             If no system is found with the specific category, the request will return a 400 status code. allowFallback=true
             specifies that the service is allowed to fall back to a general system when a custom system doesn't exist.
             </param>
        </member>
        <member name="T:Azure.AI.Translation.Text.TextTranslationTransliterateOptions">
            <summary> Client options for TextTranslationClient.Transliterate </summary>
        </member>
        <member name="P:Azure.AI.Translation.Text.TextTranslationTransliterateOptions.Language">
            <summary>
            Specifies the language of the text to convert from one script to another.
            Possible languages are listed in the transliteration scope obtained by querying the service
            for its supported languages.
            </summary>
        </member>
        <member name="P:Azure.AI.Translation.Text.TextTranslationTransliterateOptions.FromScript">
            <summary>
            Specifies the script used by the input text. Look up supported languages using the transliteration scope,
            to find input scripts available for the selected language.
            </summary>
        </member>
        <member name="P:Azure.AI.Translation.Text.TextTranslationTransliterateOptions.ToScript">
            <summary>
            Specifies the output script. Look up supported languages using the transliteration scope, to find output
            scripts available for the selected combination of input language and input script.
            </summary>
        </member>
        <member name="P:Azure.AI.Translation.Text.TextTranslationTransliterateOptions.Content">
            <summary>
            Array of the text to be transliterated.
            </summary>
        </member>
        <member name="P:Azure.AI.Translation.Text.TextTranslationTransliterateOptions.ClientTraceId">
            <summary>
            A client-generated GUID to uniquely identify the request.
            </summary>
        </member>
        <member name="M:Azure.AI.Translation.Text.TextTranslationTransliterateOptions.#ctor(System.String,System.String,System.String,System.Collections.Generic.IEnumerable{System.String},System.Guid)">
            <summary> Initializes new instance of TextTranslationTransliterateOptions. </summary>
            <param name="language">
            Specifies the language of the text to convert from one script to another.
            Possible languages are listed in the transliteration scope obtained by querying the service
            for its supported languages.
            </param>
            <param name="fromScript">
            Specifies the script used by the input text. Look up supported languages using the transliteration scope,
            to find input scripts available for the selected language.
            </param>
            <param name="toScript">
            Specifies the output script. Look up supported languages using the transliteration scope, to find output
            scripts available for the selected combination of input language and input script.
            </param>
            <param name="content"> Array of the text to be transliterated. </param>
            <param name="clientTraceId"> A client-generated GUID to uniquely identify the request. </param>
        </member>
        <member name="M:Azure.AI.Translation.Text.TextTranslationTransliterateOptions.#ctor(System.String,System.String,System.String,System.String,System.Guid)">
            <summary> Initializes new instance of TextTranslationTransliterateOptions. </summary>
            <param name="language">
            Specifies the language of the text to convert from one script to another.
            Possible languages are listed in the transliteration scope obtained by querying the service
            for its supported languages.
            </param>
            <param name="fromScript">
            Specifies the script used by the input text. Look up supported languages using the transliteration scope,
            to find input scripts available for the selected language.
            </param>
            <param name="toScript">
            Specifies the output script. Look up supported languages using the transliteration scope, to find output
            scripts available for the selected combination of input language and input script.
            </param>
            <param name="content"> The text to be transliterated. </param>
            <param name="clientTraceId"> A client-generated GUID to uniquely identify the request. </param>
        </member>
        <member name="T:Azure.AI.Translation.Text.AITranslationTextModelFactory">
            <summary> Model factory for models. </summary>
        </member>
        <member name="M:Azure.AI.Translation.Text.AITranslationTextModelFactory.GetSupportedLanguagesResult(System.Collections.Generic.IReadOnlyDictionary{System.String,Azure.AI.Translation.Text.TranslationLanguage},System.Collections.Generic.IReadOnlyDictionary{System.String,Azure.AI.Translation.Text.TransliterationLanguage},System.Collections.Generic.IReadOnlyDictionary{System.String,Azure.AI.Translation.Text.SourceDictionaryLanguage})">
            <summary> Initializes a new instance of <see cref="T:Azure.AI.Translation.Text.GetSupportedLanguagesResult" />. </summary>
            <param name="translation"> Languages that support translate API. </param>
            <param name="transliteration"> Languages that support transliteration API. </param>
            <param name="dictionary"> Languages that support dictionary API. </param>
            <returns> A new <see cref="T:Azure.AI.Translation.Text.GetSupportedLanguagesResult" /> instance for mocking. </returns>
        </member>
        <member name="M:Azure.AI.Translation.Text.AITranslationTextModelFactory.TranslationLanguage(System.String,System.String,Azure.AI.Translation.Text.LanguageDirectionality)">
            <summary> Initializes a new instance of <see cref="T:Azure.AI.Translation.Text.TranslationLanguage" />. </summary>
            <param name="name"> Display name of the language in the locale requested via Accept-Language header. </param>
            <param name="nativeName"> Display name of the language in the locale native for this language. </param>
            <param name="directionality"> Directionality, which is rtl for right-to-left languages or ltr for left-to-right languages. </param>
            <returns> A new <see cref="T:Azure.AI.Translation.Text.TranslationLanguage" /> instance for mocking. </returns>
        </member>
        <member name="M:Azure.AI.Translation.Text.AITranslationTextModelFactory.TransliterationLanguage(System.String,System.String,System.Collections.Generic.IEnumerable{Azure.AI.Translation.Text.TransliterableScript})">
            <summary> Initializes a new instance of <see cref="T:Azure.AI.Translation.Text.TransliterationLanguage" />. </summary>
            <param name="name"> Display name of the language in the locale requested via Accept-Language header. </param>
            <param name="nativeName"> Display name of the language in the locale native for this language. </param>
            <param name="scripts"> List of scripts to convert from. </param>
            <returns> A new <see cref="T:Azure.AI.Translation.Text.TransliterationLanguage" /> instance for mocking. </returns>
        </member>
        <member name="M:Azure.AI.Translation.Text.AITranslationTextModelFactory.TransliterableScript(System.String,System.String,System.String,Azure.AI.Translation.Text.LanguageDirectionality,System.Collections.Generic.IEnumerable{Azure.AI.Translation.Text.LanguageScript})">
            <summary> Initializes a new instance of <see cref="T:Azure.AI.Translation.Text.TransliterableScript" />. </summary>
            <param name="code"> Code identifying the script. </param>
            <param name="name"> Display name of the script in the locale requested via Accept-Language header. </param>
            <param name="nativeName"> Display name of the language in the locale native for the language. </param>
            <param name="directionality"> Directionality, which is rtl for right-to-left languages or ltr for left-to-right languages. </param>
            <param name="targetLanguageScripts"> List of scripts available to convert text to. </param>
            <returns> A new <see cref="T:Azure.AI.Translation.Text.TransliterableScript" /> instance for mocking. </returns>
        </member>
        <member name="M:Azure.AI.Translation.Text.AITranslationTextModelFactory.LanguageScript(System.String,System.String,System.String,Azure.AI.Translation.Text.LanguageDirectionality)">
            <summary> Initializes a new instance of <see cref="T:Azure.AI.Translation.Text.LanguageScript" />. </summary>
            <param name="code"> Code identifying the script. </param>
            <param name="name"> Display name of the script in the locale requested via Accept-Language header. </param>
            <param name="nativeName"> Display name of the language in the locale native for the language. </param>
            <param name="directionality"> Directionality, which is rtl for right-to-left languages or ltr for left-to-right languages. </param>
            <returns> A new <see cref="T:Azure.AI.Translation.Text.LanguageScript" /> instance for mocking. </returns>
        </member>
        <member name="M:Azure.AI.Translation.Text.AITranslationTextModelFactory.SourceDictionaryLanguage(System.String,System.String,Azure.AI.Translation.Text.LanguageDirectionality,System.Collections.Generic.IEnumerable{Azure.AI.Translation.Text.TargetDictionaryLanguage})">
            <summary> Initializes a new instance of <see cref="T:Azure.AI.Translation.Text.SourceDictionaryLanguage" />. </summary>
            <param name="name"> Display name of the language in the locale requested via Accept-Language header. </param>
            <param name="nativeName"> Display name of the language in the locale native for this language. </param>
            <param name="directionality"> Directionality, which is rtl for right-to-left languages or ltr for left-to-right languages. </param>
            <param name="translations"> List of languages with alterative translations and examples for the query expressed in the source language. </param>
            <returns> A new <see cref="T:Azure.AI.Translation.Text.SourceDictionaryLanguage" /> instance for mocking. </returns>
        </member>
        <member name="M:Azure.AI.Translation.Text.AITranslationTextModelFactory.TargetDictionaryLanguage(System.String,System.String,Azure.AI.Translation.Text.LanguageDirectionality,System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.AI.Translation.Text.TargetDictionaryLanguage" />. </summary>
            <param name="name"> Display name of the language in the locale requested via Accept-Language header. </param>
            <param name="nativeName"> Display name of the language in the locale native for this language. </param>
            <param name="directionality"> Directionality, which is rtl for right-to-left languages or ltr for left-to-right languages. </param>
            <param name="code"> Language code identifying the target language. </param>
            <returns> A new <see cref="T:Azure.AI.Translation.Text.TargetDictionaryLanguage" /> instance for mocking. </returns>
        </member>
        <member name="M:Azure.AI.Translation.Text.AITranslationTextModelFactory.TranslatedTextItem(Azure.AI.Translation.Text.DetectedLanguage,System.Collections.Generic.IEnumerable{Azure.AI.Translation.Text.TranslationText},Azure.AI.Translation.Text.SourceText)">
            <summary> Initializes a new instance of <see cref="T:Azure.AI.Translation.Text.TranslatedTextItem" />. </summary>
            <param name="detectedLanguage"> The detectedLanguage property is only present in the result object when language auto-detection is requested. </param>
            <param name="translations">
            An array of translation results. The size of the array matches the number of target
            languages specified through the to query parameter.
            </param>
            <param name="sourceText">
            Input text in the default script of the source language. sourceText property is present only when
            the input is expressed in a script that's not the usual script for the language. For example,
            if the input were Arabic written in Latin script, then sourceText.text would be the same Arabic text
            converted into Arab script.
            </param>
            <returns> A new <see cref="T:Azure.AI.Translation.Text.TranslatedTextItem" /> instance for mocking. </returns>
        </member>
        <member name="M:Azure.AI.Translation.Text.AITranslationTextModelFactory.DetectedLanguage(System.String,System.Single)">
            <summary> Initializes a new instance of <see cref="T:Azure.AI.Translation.Text.DetectedLanguage" />. </summary>
            <param name="language"> A string representing the code of the detected language. </param>
            <param name="confidence">
            A float value indicating the confidence in the result.
            The score is between zero and one and a low score indicates a low confidence.
            </param>
            <returns> A new <see cref="T:Azure.AI.Translation.Text.DetectedLanguage" /> instance for mocking. </returns>
        </member>
        <member name="M:Azure.AI.Translation.Text.AITranslationTextModelFactory.TranslationText(System.String,System.String,Azure.AI.Translation.Text.TransliteratedText,Azure.AI.Translation.Text.TranslatedTextAlignment,Azure.AI.Translation.Text.SentenceBoundaries)">
            <summary> Initializes a new instance of <see cref="T:Azure.AI.Translation.Text.TranslationText" />. </summary>
            <param name="targetLanguage"> A string representing the language code of the target language. </param>
            <param name="text"> A string giving the translated text. </param>
            <param name="transliteration"> An object giving the translated text in the script specified by the toScript parameter. </param>
            <param name="alignment"> Alignment information. </param>
            <param name="sentenceBoundaries"> Sentence boundaries in the input and output texts. </param>
            <returns> A new <see cref="T:Azure.AI.Translation.Text.TranslationText" /> instance for mocking. </returns>
        </member>
        <member name="M:Azure.AI.Translation.Text.AITranslationTextModelFactory.TransliteratedText(System.String,System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.AI.Translation.Text.TransliteratedText" />. </summary>
            <param name="text"> A string which is the result of converting the input string to the output script. </param>
            <param name="script"> A string specifying the script used in the output. </param>
            <returns> A new <see cref="T:Azure.AI.Translation.Text.TransliteratedText" /> instance for mocking. </returns>
        </member>
        <member name="M:Azure.AI.Translation.Text.AITranslationTextModelFactory.TranslatedTextAlignment(System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.AI.Translation.Text.TranslatedTextAlignment" />. </summary>
            <param name="projections">
            Maps input text to translated text. The alignment information is only provided when the request
            parameter includeAlignment is true. Alignment is returned as a string value of the following
            format: [[SourceTextStartIndex]:[SourceTextEndIndex]–[TgtTextStartIndex]:[TgtTextEndIndex]].
            The colon separates start and end index, the dash separates the languages, and space separates the words.
            One word may align with zero, one, or multiple words in the other language, and the aligned words may
            be non-contiguous. When no alignment information is available, the alignment element will be empty.
            </param>
            <returns> A new <see cref="T:Azure.AI.Translation.Text.TranslatedTextAlignment" /> instance for mocking. </returns>
        </member>
        <member name="M:Azure.AI.Translation.Text.AITranslationTextModelFactory.SentenceBoundaries(System.Collections.Generic.IEnumerable{System.Int32},System.Collections.Generic.IEnumerable{System.Int32})">
            <summary> Initializes a new instance of <see cref="T:Azure.AI.Translation.Text.SentenceBoundaries" />. </summary>
            <param name="sourceSentencesLengths">
            An integer array representing the lengths of the sentences in the input text.
            The length of the array is the number of sentences, and the values are the length of each sentence.
            </param>
            <param name="translatedSentencesLengths">
            An integer array representing the lengths of the sentences in the translated text.
            The length of the array is the number of sentences, and the values are the length of each sentence.
            </param>
            <returns> A new <see cref="T:Azure.AI.Translation.Text.SentenceBoundaries" /> instance for mocking. </returns>
        </member>
        <member name="M:Azure.AI.Translation.Text.AITranslationTextModelFactory.SourceText(System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.AI.Translation.Text.SourceText" />. </summary>
            <param name="text"> Input text in the default script of the source language. </param>
            <returns> A new <see cref="T:Azure.AI.Translation.Text.SourceText" /> instance for mocking. </returns>
        </member>
        <member name="M:Azure.AI.Translation.Text.AITranslationTextModelFactory.BreakSentenceItem(Azure.AI.Translation.Text.DetectedLanguage,System.Collections.Generic.IEnumerable{System.Int32})">
            <summary> Initializes a new instance of <see cref="T:Azure.AI.Translation.Text.BreakSentenceItem" />. </summary>
            <param name="detectedLanguage"> The detectedLanguage property is only present in the result object when language auto-detection is requested. </param>
            <param name="sentencesLengths">
            An integer array representing the lengths of the sentences in the input text.
            The length of the array is the number of sentences, and the values are the length of each sentence.
            </param>
            <returns> A new <see cref="T:Azure.AI.Translation.Text.BreakSentenceItem" /> instance for mocking. </returns>
        </member>
        <member name="M:Azure.AI.Translation.Text.AITranslationTextModelFactory.DictionaryLookupItem(System.String,System.String,System.Collections.Generic.IEnumerable{Azure.AI.Translation.Text.DictionaryTranslation})">
            <summary> Initializes a new instance of <see cref="T:Azure.AI.Translation.Text.DictionaryLookupItem" />. </summary>
            <param name="normalizedSource">
            A string giving the normalized form of the source term.
            For example, if the request is "JOHN", the normalized form will be "john".
            The content of this field becomes the input to lookup examples.
            </param>
            <param name="displaySource">
            A string giving the source term in a form best suited for end-user display.
            For example, if the input is "JOHN", the display form will reflect the usual
            spelling of the name: "John".
            </param>
            <param name="translations"> A list of translations for the source term. </param>
            <returns> A new <see cref="T:Azure.AI.Translation.Text.DictionaryLookupItem" /> instance for mocking. </returns>
        </member>
        <member name="M:Azure.AI.Translation.Text.AITranslationTextModelFactory.DictionaryTranslation(System.String,System.String,System.String,System.Single,System.String,System.Collections.Generic.IEnumerable{Azure.AI.Translation.Text.BackTranslation})">
            <summary> Initializes a new instance of <see cref="T:Azure.AI.Translation.Text.DictionaryTranslation" />. </summary>
            <param name="normalizedTarget">
            A string giving the normalized form of this term in the target language.
            This value should be used as input to lookup examples.
            </param>
            <param name="displayTarget">
            A string giving the term in the target language and in a form best suited
            for end-user display. Generally, this will only differ from the normalizedTarget
            in terms of capitalization. For example, a proper noun like "Juan" will have
            normalizedTarget = "juan" and displayTarget = "Juan".
            </param>
            <param name="posTag"> A string associating this term with a part-of-speech tag. </param>
            <param name="confidence">
            A value between 0.0 and 1.0 which represents the "confidence"
            (or perhaps more accurately, "probability in the training data") of that translation pair.
            The sum of confidence scores for one source word may or may not sum to 1.0.
            </param>
            <param name="prefixWord">
            A string giving the word to display as a prefix of the translation. Currently,
            this is the gendered determiner of nouns, in languages that have gendered determiners.
            For example, the prefix of the Spanish word "mosca" is "la", since "mosca" is a feminine noun in Spanish.
            This is only dependent on the translation, and not on the source.
            If there is no prefix, it will be the empty string.
            </param>
            <param name="backTranslations">
            A list of "back translations" of the target. For example, source words that the target can translate to.
            The list is guaranteed to contain the source word that was requested (e.g., if the source word being
            looked up is "fly", then it is guaranteed that "fly" will be in the backTranslations list).
            However, it is not guaranteed to be in the first position, and often will not be.
            </param>
            <returns> A new <see cref="T:Azure.AI.Translation.Text.DictionaryTranslation" /> instance for mocking. </returns>
        </member>
        <member name="M:Azure.AI.Translation.Text.AITranslationTextModelFactory.BackTranslation(System.String,System.String,System.Int32,System.Int32)">
            <summary> Initializes a new instance of <see cref="T:Azure.AI.Translation.Text.BackTranslation" />. </summary>
            <param name="normalizedText">
            A string giving the normalized form of the source term that is a back-translation of the target.
            This value should be used as input to lookup examples.
            </param>
            <param name="displayText">
            A string giving the source term that is a back-translation of the target in a form best
            suited for end-user display.
            </param>
            <param name="examplesCount">
            An integer representing the number of examples that are available for this translation pair.
            Actual examples must be retrieved with a separate call to lookup examples. The number is mostly
            intended to facilitate display in a UX. For example, a user interface may add a hyperlink
            to the back-translation if the number of examples is greater than zero and show the back-translation
            as plain text if there are no examples. Note that the actual number of examples returned
            by a call to lookup examples may be less than numExamples, because additional filtering may be
            applied on the fly to remove "bad" examples.
            </param>
            <param name="frequencyCount">
            An integer representing the frequency of this translation pair in the data. The main purpose of this
            field is to provide a user interface with a means to sort back-translations so the most frequent terms are first.
            </param>
            <returns> A new <see cref="T:Azure.AI.Translation.Text.BackTranslation" /> instance for mocking. </returns>
        </member>
        <member name="M:Azure.AI.Translation.Text.AITranslationTextModelFactory.DictionaryExampleItem(System.String,System.String,System.Collections.Generic.IEnumerable{Azure.AI.Translation.Text.DictionaryExample})">
            <summary> Initializes a new instance of <see cref="T:Azure.AI.Translation.Text.DictionaryExampleItem" />. </summary>
            <param name="normalizedSource">
            A string giving the normalized form of the source term. Generally, this should be identical
            to the value of the Text field at the matching list index in the body of the request.
            </param>
            <param name="normalizedTarget">
            A string giving the normalized form of the target term. Generally, this should be identical
            to the value of the Translation field at the matching list index in the body of the request.
            </param>
            <param name="examples"> A list of examples for the (source term, target term) pair. </param>
            <returns> A new <see cref="T:Azure.AI.Translation.Text.DictionaryExampleItem" /> instance for mocking. </returns>
        </member>
        <member name="M:Azure.AI.Translation.Text.AITranslationTextModelFactory.DictionaryExample(System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.AI.Translation.Text.DictionaryExample" />. </summary>
            <param name="sourcePrefix">
            The string to concatenate before the value of sourceTerm to form a complete example.
            Do not add a space character, since it is already there when it should be.
            This value may be an empty string.
            </param>
            <param name="sourceTerm">
            A string equal to the actual term looked up. The string is added with sourcePrefix
            and sourceSuffix to form the complete example. Its value is separated so it can be
            marked in a user interface, e.g., by bolding it.
            </param>
            <param name="sourceSuffix">
            The string to concatenate after the value of sourceTerm to form a complete example.
            Do not add a space character, since it is already there when it should be.
            This value may be an empty string.
            </param>
            <param name="targetPrefix"> A string similar to sourcePrefix but for the target. </param>
            <param name="targetTerm"> A string similar to sourceTerm but for the target. </param>
            <param name="targetSuffix"> A string similar to sourceSuffix but for the target. </param>
            <returns> A new <see cref="T:Azure.AI.Translation.Text.DictionaryExample" /> instance for mocking. </returns>
        </member>
        <member name="T:Azure.AI.Translation.Text.BackTranslation">
            <summary> Back Translation. </summary>
        </member>
        <member name="M:Azure.AI.Translation.Text.BackTranslation.#ctor(System.String,System.String,System.Int32,System.Int32)">
            <summary> Initializes a new instance of <see cref="T:Azure.AI.Translation.Text.BackTranslation" />. </summary>
            <param name="normalizedText">
            A string giving the normalized form of the source term that is a back-translation of the target.
            This value should be used as input to lookup examples.
            </param>
            <param name="displayText">
            A string giving the source term that is a back-translation of the target in a form best
            suited for end-user display.
            </param>
            <param name="examplesCount">
            An integer representing the number of examples that are available for this translation pair.
            Actual examples must be retrieved with a separate call to lookup examples. The number is mostly
            intended to facilitate display in a UX. For example, a user interface may add a hyperlink
            to the back-translation if the number of examples is greater than zero and show the back-translation
            as plain text if there are no examples. Note that the actual number of examples returned
            by a call to lookup examples may be less than numExamples, because additional filtering may be
            applied on the fly to remove "bad" examples.
            </param>
            <param name="frequencyCount">
            An integer representing the frequency of this translation pair in the data. The main purpose of this
            field is to provide a user interface with a means to sort back-translations so the most frequent terms are first.
            </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="normalizedText" /> or <paramref name="displayText" /> is null. </exception>
        </member>
        <member name="M:Azure.AI.Translation.Text.BackTranslation.#ctor(System.String,System.String,System.Int32,System.Int32,System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.AI.Translation.Text.BackTranslation" />. </summary>
            <param name="normalizedText">
            A string giving the normalized form of the source term that is a back-translation of the target.
            This value should be used as input to lookup examples.
            </param>
            <param name="displayText">
            A string giving the source term that is a back-translation of the target in a form best
            suited for end-user display.
            </param>
            <param name="examplesCount">
            An integer representing the number of examples that are available for this translation pair.
            Actual examples must be retrieved with a separate call to lookup examples. The number is mostly
            intended to facilitate display in a UX. For example, a user interface may add a hyperlink
            to the back-translation if the number of examples is greater than zero and show the back-translation
            as plain text if there are no examples. Note that the actual number of examples returned
            by a call to lookup examples may be less than numExamples, because additional filtering may be
            applied on the fly to remove "bad" examples.
            </param>
            <param name="frequencyCount">
            An integer representing the frequency of this translation pair in the data. The main purpose of this
            field is to provide a user interface with a means to sort back-translations so the most frequent terms are first.
            </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="M:Azure.AI.Translation.Text.BackTranslation.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.AI.Translation.Text.BackTranslation" /> for deserialization. </summary>
        </member>
        <member name="P:Azure.AI.Translation.Text.BackTranslation.NormalizedText">
            <summary>
            A string giving the normalized form of the source term that is a back-translation of the target.
            This value should be used as input to lookup examples.
            </summary>
        </member>
        <member name="P:Azure.AI.Translation.Text.BackTranslation.DisplayText">
            <summary>
            A string giving the source term that is a back-translation of the target in a form best
            suited for end-user display.
            </summary>
        </member>
        <member name="P:Azure.AI.Translation.Text.BackTranslation.ExamplesCount">
            <summary>
            An integer representing the number of examples that are available for this translation pair.
            Actual examples must be retrieved with a separate call to lookup examples. The number is mostly
            intended to facilitate display in a UX. For example, a user interface may add a hyperlink
            to the back-translation if the number of examples is greater than zero and show the back-translation
            as plain text if there are no examples. Note that the actual number of examples returned
            by a call to lookup examples may be less than numExamples, because additional filtering may be
            applied on the fly to remove "bad" examples.
            </summary>
        </member>
        <member name="P:Azure.AI.Translation.Text.BackTranslation.FrequencyCount">
            <summary>
            An integer representing the frequency of this translation pair in the data. The main purpose of this
            field is to provide a user interface with a means to sort back-translations so the most frequent terms are first.
            </summary>
        </member>
        <member name="M:Azure.AI.Translation.Text.BackTranslation.FromResponse(Azure.Response)">
            <summary> Deserializes the model from a raw response. </summary>
            <param name="response"> The response to deserialize the model from. </param>
        </member>
        <member name="M:Azure.AI.Translation.Text.BackTranslation.ToRequestContent">
            <summary> Convert into a <see cref="T:Azure.Core.RequestContent" />. </summary>
        </member>
        <member name="T:Azure.AI.Translation.Text.BreakSentenceItem">
            <summary> Item containing break sentence result. </summary>
        </member>
        <member name="M:Azure.AI.Translation.Text.BreakSentenceItem.#ctor(System.Collections.Generic.IEnumerable{System.Int32})">
            <summary> Initializes a new instance of <see cref="T:Azure.AI.Translation.Text.BreakSentenceItem" />. </summary>
            <param name="sentencesLengths">
            An integer array representing the lengths of the sentences in the input text.
            The length of the array is the number of sentences, and the values are the length of each sentence.
            </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="sentencesLengths" /> is null. </exception>
        </member>
        <member name="M:Azure.AI.Translation.Text.BreakSentenceItem.#ctor(Azure.AI.Translation.Text.DetectedLanguage,System.Collections.Generic.IReadOnlyList{System.Int32},System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.AI.Translation.Text.BreakSentenceItem" />. </summary>
            <param name="detectedLanguage"> The detectedLanguage property is only present in the result object when language auto-detection is requested. </param>
            <param name="sentencesLengths">
            An integer array representing the lengths of the sentences in the input text.
            The length of the array is the number of sentences, and the values are the length of each sentence.
            </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="M:Azure.AI.Translation.Text.BreakSentenceItem.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.AI.Translation.Text.BreakSentenceItem" /> for deserialization. </summary>
        </member>
        <member name="P:Azure.AI.Translation.Text.BreakSentenceItem.DetectedLanguage">
            <summary> The detectedLanguage property is only present in the result object when language auto-detection is requested. </summary>
        </member>
        <member name="P:Azure.AI.Translation.Text.BreakSentenceItem.SentencesLengths">
            <summary>
            An integer array representing the lengths of the sentences in the input text.
            The length of the array is the number of sentences, and the values are the length of each sentence.
            </summary>
        </member>
        <member name="M:Azure.AI.Translation.Text.BreakSentenceItem.FromResponse(Azure.Response)">
            <summary> Deserializes the model from a raw response. </summary>
            <param name="response"> The response to deserialize the model from. </param>
        </member>
        <member name="M:Azure.AI.Translation.Text.BreakSentenceItem.ToRequestContent">
            <summary> Convert into a <see cref="T:Azure.Core.RequestContent" />. </summary>
        </member>
        <member name="T:Azure.AI.Translation.Text.DetectedLanguage">
            <summary> An object describing the detected language. </summary>
        </member>
        <member name="M:Azure.AI.Translation.Text.DetectedLanguage.#ctor(System.String,System.Single)">
            <summary> Initializes a new instance of <see cref="T:Azure.AI.Translation.Text.DetectedLanguage" />. </summary>
            <param name="language"> A string representing the code of the detected language. </param>
            <param name="confidence">
            A float value indicating the confidence in the result.
            The score is between zero and one and a low score indicates a low confidence.
            </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="language" /> is null. </exception>
        </member>
        <member name="M:Azure.AI.Translation.Text.DetectedLanguage.#ctor(System.String,System.Single,System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.AI.Translation.Text.DetectedLanguage" />. </summary>
            <param name="language"> A string representing the code of the detected language. </param>
            <param name="confidence">
            A float value indicating the confidence in the result.
            The score is between zero and one and a low score indicates a low confidence.
            </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="M:Azure.AI.Translation.Text.DetectedLanguage.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.AI.Translation.Text.DetectedLanguage" /> for deserialization. </summary>
        </member>
        <member name="P:Azure.AI.Translation.Text.DetectedLanguage.Language">
            <summary> A string representing the code of the detected language. </summary>
        </member>
        <member name="P:Azure.AI.Translation.Text.DetectedLanguage.Confidence">
            <summary>
            A float value indicating the confidence in the result.
            The score is between zero and one and a low score indicates a low confidence.
            </summary>
        </member>
        <member name="M:Azure.AI.Translation.Text.DetectedLanguage.FromResponse(Azure.Response)">
            <summary> Deserializes the model from a raw response. </summary>
            <param name="response"> The response to deserialize the model from. </param>
        </member>
        <member name="M:Azure.AI.Translation.Text.DetectedLanguage.ToRequestContent">
            <summary> Convert into a <see cref="T:Azure.Core.RequestContent" />. </summary>
        </member>
        <member name="T:Azure.AI.Translation.Text.DictionaryExample">
            <summary> Dictionary Example. </summary>
        </member>
        <member name="M:Azure.AI.Translation.Text.DictionaryExample.#ctor(System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.AI.Translation.Text.DictionaryExample" />. </summary>
            <param name="sourcePrefix">
            The string to concatenate before the value of sourceTerm to form a complete example.
            Do not add a space character, since it is already there when it should be.
            This value may be an empty string.
            </param>
            <param name="sourceTerm">
            A string equal to the actual term looked up. The string is added with sourcePrefix
            and sourceSuffix to form the complete example. Its value is separated so it can be
            marked in a user interface, e.g., by bolding it.
            </param>
            <param name="sourceSuffix">
            The string to concatenate after the value of sourceTerm to form a complete example.
            Do not add a space character, since it is already there when it should be.
            This value may be an empty string.
            </param>
            <param name="targetPrefix"> A string similar to sourcePrefix but for the target. </param>
            <param name="targetTerm"> A string similar to sourceTerm but for the target. </param>
            <param name="targetSuffix"> A string similar to sourceSuffix but for the target. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="sourcePrefix" />, <paramref name="sourceTerm" />, <paramref name="sourceSuffix" />, <paramref name="targetPrefix" />, <paramref name="targetTerm" /> or <paramref name="targetSuffix" /> is null. </exception>
        </member>
        <member name="M:Azure.AI.Translation.Text.DictionaryExample.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.AI.Translation.Text.DictionaryExample" />. </summary>
            <param name="sourcePrefix">
            The string to concatenate before the value of sourceTerm to form a complete example.
            Do not add a space character, since it is already there when it should be.
            This value may be an empty string.
            </param>
            <param name="sourceTerm">
            A string equal to the actual term looked up. The string is added with sourcePrefix
            and sourceSuffix to form the complete example. Its value is separated so it can be
            marked in a user interface, e.g., by bolding it.
            </param>
            <param name="sourceSuffix">
            The string to concatenate after the value of sourceTerm to form a complete example.
            Do not add a space character, since it is already there when it should be.
            This value may be an empty string.
            </param>
            <param name="targetPrefix"> A string similar to sourcePrefix but for the target. </param>
            <param name="targetTerm"> A string similar to sourceTerm but for the target. </param>
            <param name="targetSuffix"> A string similar to sourceSuffix but for the target. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="M:Azure.AI.Translation.Text.DictionaryExample.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.AI.Translation.Text.DictionaryExample" /> for deserialization. </summary>
        </member>
        <member name="P:Azure.AI.Translation.Text.DictionaryExample.SourcePrefix">
            <summary>
            The string to concatenate before the value of sourceTerm to form a complete example.
            Do not add a space character, since it is already there when it should be.
            This value may be an empty string.
            </summary>
        </member>
        <member name="P:Azure.AI.Translation.Text.DictionaryExample.SourceTerm">
            <summary>
            A string equal to the actual term looked up. The string is added with sourcePrefix
            and sourceSuffix to form the complete example. Its value is separated so it can be
            marked in a user interface, e.g., by bolding it.
            </summary>
        </member>
        <member name="P:Azure.AI.Translation.Text.DictionaryExample.SourceSuffix">
            <summary>
            The string to concatenate after the value of sourceTerm to form a complete example.
            Do not add a space character, since it is already there when it should be.
            This value may be an empty string.
            </summary>
        </member>
        <member name="P:Azure.AI.Translation.Text.DictionaryExample.TargetPrefix">
            <summary> A string similar to sourcePrefix but for the target. </summary>
        </member>
        <member name="P:Azure.AI.Translation.Text.DictionaryExample.TargetTerm">
            <summary> A string similar to sourceTerm but for the target. </summary>
        </member>
        <member name="P:Azure.AI.Translation.Text.DictionaryExample.TargetSuffix">
            <summary> A string similar to sourceSuffix but for the target. </summary>
        </member>
        <member name="M:Azure.AI.Translation.Text.DictionaryExample.FromResponse(Azure.Response)">
            <summary> Deserializes the model from a raw response. </summary>
            <param name="response"> The response to deserialize the model from. </param>
        </member>
        <member name="M:Azure.AI.Translation.Text.DictionaryExample.ToRequestContent">
            <summary> Convert into a <see cref="T:Azure.Core.RequestContent" />. </summary>
        </member>
        <member name="T:Azure.AI.Translation.Text.DictionaryExampleItem">
            <summary> Dictionary Example element. </summary>
        </member>
        <member name="M:Azure.AI.Translation.Text.DictionaryExampleItem.#ctor(System.String,System.String,System.Collections.Generic.IEnumerable{Azure.AI.Translation.Text.DictionaryExample})">
            <summary> Initializes a new instance of <see cref="T:Azure.AI.Translation.Text.DictionaryExampleItem" />. </summary>
            <param name="normalizedSource">
            A string giving the normalized form of the source term. Generally, this should be identical
            to the value of the Text field at the matching list index in the body of the request.
            </param>
            <param name="normalizedTarget">
            A string giving the normalized form of the target term. Generally, this should be identical
            to the value of the Translation field at the matching list index in the body of the request.
            </param>
            <param name="examples"> A list of examples for the (source term, target term) pair. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="normalizedSource" />, <paramref name="normalizedTarget" /> or <paramref name="examples" /> is null. </exception>
        </member>
        <member name="M:Azure.AI.Translation.Text.DictionaryExampleItem.#ctor(System.String,System.String,System.Collections.Generic.IReadOnlyList{Azure.AI.Translation.Text.DictionaryExample},System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.AI.Translation.Text.DictionaryExampleItem" />. </summary>
            <param name="normalizedSource">
            A string giving the normalized form of the source term. Generally, this should be identical
            to the value of the Text field at the matching list index in the body of the request.
            </param>
            <param name="normalizedTarget">
            A string giving the normalized form of the target term. Generally, this should be identical
            to the value of the Translation field at the matching list index in the body of the request.
            </param>
            <param name="examples"> A list of examples for the (source term, target term) pair. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="M:Azure.AI.Translation.Text.DictionaryExampleItem.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.AI.Translation.Text.DictionaryExampleItem" /> for deserialization. </summary>
        </member>
        <member name="P:Azure.AI.Translation.Text.DictionaryExampleItem.NormalizedSource">
            <summary>
            A string giving the normalized form of the source term. Generally, this should be identical
            to the value of the Text field at the matching list index in the body of the request.
            </summary>
        </member>
        <member name="P:Azure.AI.Translation.Text.DictionaryExampleItem.NormalizedTarget">
            <summary>
            A string giving the normalized form of the target term. Generally, this should be identical
            to the value of the Translation field at the matching list index in the body of the request.
            </summary>
        </member>
        <member name="P:Azure.AI.Translation.Text.DictionaryExampleItem.Examples">
            <summary> A list of examples for the (source term, target term) pair. </summary>
        </member>
        <member name="M:Azure.AI.Translation.Text.DictionaryExampleItem.FromResponse(Azure.Response)">
            <summary> Deserializes the model from a raw response. </summary>
            <param name="response"> The response to deserialize the model from. </param>
        </member>
        <member name="M:Azure.AI.Translation.Text.DictionaryExampleItem.ToRequestContent">
            <summary> Convert into a <see cref="T:Azure.Core.RequestContent" />. </summary>
        </member>
        <member name="T:Azure.AI.Translation.Text.DictionaryExampleTextItem">
            <summary> Element containing the text with translation. </summary>
        </member>
        <member name="M:Azure.AI.Translation.Text.DictionaryExampleTextItem.#ctor(System.String,System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.AI.Translation.Text.DictionaryExampleTextItem" />. </summary>
            <param name="text"> Text to translate. </param>
            <param name="translation">
            A string specifying the translated text previously returned by the Dictionary lookup operation.
            This should be the value from the normalizedTarget field in the translations list of the Dictionary
            lookup response. The service will return examples for the specific source-target word-pair.
            </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="text" /> or <paramref name="translation" /> is null. </exception>
        </member>
        <member name="M:Azure.AI.Translation.Text.DictionaryExampleTextItem.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.BinaryData},System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.AI.Translation.Text.DictionaryExampleTextItem" />. </summary>
            <param name="text"> Text to translate. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
            <param name="translation">
            A string specifying the translated text previously returned by the Dictionary lookup operation.
            This should be the value from the normalizedTarget field in the translations list of the Dictionary
            lookup response. The service will return examples for the specific source-target word-pair.
            </param>
        </member>
        <member name="M:Azure.AI.Translation.Text.DictionaryExampleTextItem.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.AI.Translation.Text.DictionaryExampleTextItem" /> for deserialization. </summary>
        </member>
        <member name="P:Azure.AI.Translation.Text.DictionaryExampleTextItem.Translation">
            <summary>
            A string specifying the translated text previously returned by the Dictionary lookup operation.
            This should be the value from the normalizedTarget field in the translations list of the Dictionary
            lookup response. The service will return examples for the specific source-target word-pair.
            </summary>
        </member>
        <member name="M:Azure.AI.Translation.Text.DictionaryExampleTextItem.FromResponse(Azure.Response)">
            <summary> Deserializes the model from a raw response. </summary>
            <param name="response"> The response to deserialize the model from. </param>
        </member>
        <member name="M:Azure.AI.Translation.Text.DictionaryExampleTextItem.ToRequestContent">
            <summary> Convert into a <see cref="T:Azure.Core.RequestContent" />. </summary>
        </member>
        <member name="T:Azure.AI.Translation.Text.DictionaryLookupItem">
            <summary> Dictionary Lookup Element. </summary>
        </member>
        <member name="M:Azure.AI.Translation.Text.DictionaryLookupItem.#ctor(System.String,System.String,System.Collections.Generic.IEnumerable{Azure.AI.Translation.Text.DictionaryTranslation})">
            <summary> Initializes a new instance of <see cref="T:Azure.AI.Translation.Text.DictionaryLookupItem" />. </summary>
            <param name="normalizedSource">
            A string giving the normalized form of the source term.
            For example, if the request is "JOHN", the normalized form will be "john".
            The content of this field becomes the input to lookup examples.
            </param>
            <param name="displaySource">
            A string giving the source term in a form best suited for end-user display.
            For example, if the input is "JOHN", the display form will reflect the usual
            spelling of the name: "John".
            </param>
            <param name="translations"> A list of translations for the source term. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="normalizedSource" />, <paramref name="displaySource" /> or <paramref name="translations" /> is null. </exception>
        </member>
        <member name="M:Azure.AI.Translation.Text.DictionaryLookupItem.#ctor(System.String,System.String,System.Collections.Generic.IReadOnlyList{Azure.AI.Translation.Text.DictionaryTranslation},System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.AI.Translation.Text.DictionaryLookupItem" />. </summary>
            <param name="normalizedSource">
            A string giving the normalized form of the source term.
            For example, if the request is "JOHN", the normalized form will be "john".
            The content of this field becomes the input to lookup examples.
            </param>
            <param name="displaySource">
            A string giving the source term in a form best suited for end-user display.
            For example, if the input is "JOHN", the display form will reflect the usual
            spelling of the name: "John".
            </param>
            <param name="translations"> A list of translations for the source term. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="M:Azure.AI.Translation.Text.DictionaryLookupItem.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.AI.Translation.Text.DictionaryLookupItem" /> for deserialization. </summary>
        </member>
        <member name="P:Azure.AI.Translation.Text.DictionaryLookupItem.NormalizedSource">
            <summary>
            A string giving the normalized form of the source term.
            For example, if the request is "JOHN", the normalized form will be "john".
            The content of this field becomes the input to lookup examples.
            </summary>
        </member>
        <member name="P:Azure.AI.Translation.Text.DictionaryLookupItem.DisplaySource">
            <summary>
            A string giving the source term in a form best suited for end-user display.
            For example, if the input is "JOHN", the display form will reflect the usual
            spelling of the name: "John".
            </summary>
        </member>
        <member name="P:Azure.AI.Translation.Text.DictionaryLookupItem.Translations">
            <summary> A list of translations for the source term. </summary>
        </member>
        <member name="M:Azure.AI.Translation.Text.DictionaryLookupItem.FromResponse(Azure.Response)">
            <summary> Deserializes the model from a raw response. </summary>
            <param name="response"> The response to deserialize the model from. </param>
        </member>
        <member name="M:Azure.AI.Translation.Text.DictionaryLookupItem.ToRequestContent">
            <summary> Convert into a <see cref="T:Azure.Core.RequestContent" />. </summary>
        </member>
        <member name="T:Azure.AI.Translation.Text.DictionaryTranslation">
            <summary> Translation source term. </summary>
        </member>
        <member name="M:Azure.AI.Translation.Text.DictionaryTranslation.#ctor(System.String,System.String,System.String,System.Single,System.String,System.Collections.Generic.IEnumerable{Azure.AI.Translation.Text.BackTranslation})">
            <summary> Initializes a new instance of <see cref="T:Azure.AI.Translation.Text.DictionaryTranslation" />. </summary>
            <param name="normalizedTarget">
            A string giving the normalized form of this term in the target language.
            This value should be used as input to lookup examples.
            </param>
            <param name="displayTarget">
            A string giving the term in the target language and in a form best suited
            for end-user display. Generally, this will only differ from the normalizedTarget
            in terms of capitalization. For example, a proper noun like "Juan" will have
            normalizedTarget = "juan" and displayTarget = "Juan".
            </param>
            <param name="posTag"> A string associating this term with a part-of-speech tag. </param>
            <param name="confidence">
            A value between 0.0 and 1.0 which represents the "confidence"
            (or perhaps more accurately, "probability in the training data") of that translation pair.
            The sum of confidence scores for one source word may or may not sum to 1.0.
            </param>
            <param name="prefixWord">
            A string giving the word to display as a prefix of the translation. Currently,
            this is the gendered determiner of nouns, in languages that have gendered determiners.
            For example, the prefix of the Spanish word "mosca" is "la", since "mosca" is a feminine noun in Spanish.
            This is only dependent on the translation, and not on the source.
            If there is no prefix, it will be the empty string.
            </param>
            <param name="backTranslations">
            A list of "back translations" of the target. For example, source words that the target can translate to.
            The list is guaranteed to contain the source word that was requested (e.g., if the source word being
            looked up is "fly", then it is guaranteed that "fly" will be in the backTranslations list).
            However, it is not guaranteed to be in the first position, and often will not be.
            </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="normalizedTarget" />, <paramref name="displayTarget" />, <paramref name="posTag" />, <paramref name="prefixWord" /> or <paramref name="backTranslations" /> is null. </exception>
        </member>
        <member name="M:Azure.AI.Translation.Text.DictionaryTranslation.#ctor(System.String,System.String,System.String,System.Single,System.String,System.Collections.Generic.IReadOnlyList{Azure.AI.Translation.Text.BackTranslation},System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.AI.Translation.Text.DictionaryTranslation" />. </summary>
            <param name="normalizedTarget">
            A string giving the normalized form of this term in the target language.
            This value should be used as input to lookup examples.
            </param>
            <param name="displayTarget">
            A string giving the term in the target language and in a form best suited
            for end-user display. Generally, this will only differ from the normalizedTarget
            in terms of capitalization. For example, a proper noun like "Juan" will have
            normalizedTarget = "juan" and displayTarget = "Juan".
            </param>
            <param name="posTag"> A string associating this term with a part-of-speech tag. </param>
            <param name="confidence">
            A value between 0.0 and 1.0 which represents the "confidence"
            (or perhaps more accurately, "probability in the training data") of that translation pair.
            The sum of confidence scores for one source word may or may not sum to 1.0.
            </param>
            <param name="prefixWord">
            A string giving the word to display as a prefix of the translation. Currently,
            this is the gendered determiner of nouns, in languages that have gendered determiners.
            For example, the prefix of the Spanish word "mosca" is "la", since "mosca" is a feminine noun in Spanish.
            This is only dependent on the translation, and not on the source.
            If there is no prefix, it will be the empty string.
            </param>
            <param name="backTranslations">
            A list of "back translations" of the target. For example, source words that the target can translate to.
            The list is guaranteed to contain the source word that was requested (e.g., if the source word being
            looked up is "fly", then it is guaranteed that "fly" will be in the backTranslations list).
            However, it is not guaranteed to be in the first position, and often will not be.
            </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="M:Azure.AI.Translation.Text.DictionaryTranslation.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.AI.Translation.Text.DictionaryTranslation" /> for deserialization. </summary>
        </member>
        <member name="P:Azure.AI.Translation.Text.DictionaryTranslation.NormalizedTarget">
            <summary>
            A string giving the normalized form of this term in the target language.
            This value should be used as input to lookup examples.
            </summary>
        </member>
        <member name="P:Azure.AI.Translation.Text.DictionaryTranslation.DisplayTarget">
            <summary>
            A string giving the term in the target language and in a form best suited
            for end-user display. Generally, this will only differ from the normalizedTarget
            in terms of capitalization. For example, a proper noun like "Juan" will have
            normalizedTarget = "juan" and displayTarget = "Juan".
            </summary>
        </member>
        <member name="P:Azure.AI.Translation.Text.DictionaryTranslation.PosTag">
            <summary> A string associating this term with a part-of-speech tag. </summary>
        </member>
        <member name="P:Azure.AI.Translation.Text.DictionaryTranslation.Confidence">
            <summary>
            A value between 0.0 and 1.0 which represents the "confidence"
            (or perhaps more accurately, "probability in the training data") of that translation pair.
            The sum of confidence scores for one source word may or may not sum to 1.0.
            </summary>
        </member>
        <member name="P:Azure.AI.Translation.Text.DictionaryTranslation.PrefixWord">
            <summary>
            A string giving the word to display as a prefix of the translation. Currently,
            this is the gendered determiner of nouns, in languages that have gendered determiners.
            For example, the prefix of the Spanish word "mosca" is "la", since "mosca" is a feminine noun in Spanish.
            This is only dependent on the translation, and not on the source.
            If there is no prefix, it will be the empty string.
            </summary>
        </member>
        <member name="P:Azure.AI.Translation.Text.DictionaryTranslation.BackTranslations">
            <summary>
            A list of "back translations" of the target. For example, source words that the target can translate to.
            The list is guaranteed to contain the source word that was requested (e.g., if the source word being
            looked up is "fly", then it is guaranteed that "fly" will be in the backTranslations list).
            However, it is not guaranteed to be in the first position, and often will not be.
            </summary>
        </member>
        <member name="M:Azure.AI.Translation.Text.DictionaryTranslation.FromResponse(Azure.Response)">
            <summary> Deserializes the model from a raw response. </summary>
            <param name="response"> The response to deserialize the model from. </param>
        </member>
        <member name="M:Azure.AI.Translation.Text.DictionaryTranslation.ToRequestContent">
            <summary> Convert into a <see cref="T:Azure.Core.RequestContent" />. </summary>
        </member>
        <member name="T:Azure.AI.Translation.Text.GetSupportedLanguagesResult">
            <summary> Response for the languages API. </summary>
        </member>
        <member name="M:Azure.AI.Translation.Text.GetSupportedLanguagesResult.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.AI.Translation.Text.GetSupportedLanguagesResult" />. </summary>
        </member>
        <member name="M:Azure.AI.Translation.Text.GetSupportedLanguagesResult.#ctor(System.Collections.Generic.IReadOnlyDictionary{System.String,Azure.AI.Translation.Text.TranslationLanguage},System.Collections.Generic.IReadOnlyDictionary{System.String,Azure.AI.Translation.Text.TransliterationLanguage},System.Collections.Generic.IReadOnlyDictionary{System.String,Azure.AI.Translation.Text.SourceDictionaryLanguage},System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.AI.Translation.Text.GetSupportedLanguagesResult" />. </summary>
            <param name="translation"> Languages that support translate API. </param>
            <param name="transliteration"> Languages that support transliteration API. </param>
            <param name="dictionary"> Languages that support dictionary API. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="P:Azure.AI.Translation.Text.GetSupportedLanguagesResult.Translation">
            <summary> Languages that support translate API. </summary>
        </member>
        <member name="P:Azure.AI.Translation.Text.GetSupportedLanguagesResult.Transliteration">
            <summary> Languages that support transliteration API. </summary>
        </member>
        <member name="P:Azure.AI.Translation.Text.GetSupportedLanguagesResult.Dictionary">
            <summary> Languages that support dictionary API. </summary>
        </member>
        <member name="M:Azure.AI.Translation.Text.GetSupportedLanguagesResult.FromResponse(Azure.Response)">
            <summary> Deserializes the model from a raw response. </summary>
            <param name="response"> The response to deserialize the model from. </param>
        </member>
        <member name="M:Azure.AI.Translation.Text.GetSupportedLanguagesResult.ToRequestContent">
            <summary> Convert into a <see cref="T:Azure.Core.RequestContent" />. </summary>
        </member>
        <member name="T:Azure.AI.Translation.Text.InputTextItem">
            <summary> Element containing the text for translation. </summary>
        </member>
        <member name="F:Azure.AI.Translation.Text.InputTextItem._serializedAdditionalRawData">
            <summary>
            Keeps track of any properties unknown to the library.
            <para>
            To assign an object to the value of this property use <see cref="M:System.BinaryData.FromObjectAsJson``1(``0,System.Text.Json.JsonSerializerOptions)" />.
            </para>
            <para>
            To assign an already formatted json string to this property use <see cref="M:System.BinaryData.FromString(System.String)" />.
            </para>
            <para>
            Examples:
            <list type="bullet">
            <item>
            <term>BinaryData.FromObjectAsJson("foo")</term>
            <description>Creates a payload of "foo".</description>
            </item>
            <item>
            <term>BinaryData.FromString("\"foo\"")</term>
            <description>Creates a payload of "foo".</description>
            </item>
            <item>
            <term>BinaryData.FromObjectAsJson(new { key = "value" })</term>
            <description>Creates a payload of { "key": "value" }.</description>
            </item>
            <item>
            <term>BinaryData.FromString("{\"key\": \"value\"}")</term>
            <description>Creates a payload of { "key": "value" }.</description>
            </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="M:Azure.AI.Translation.Text.InputTextItem.#ctor(System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.AI.Translation.Text.InputTextItem" />. </summary>
            <param name="text"> Text to translate. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="text" /> is null. </exception>
        </member>
        <member name="M:Azure.AI.Translation.Text.InputTextItem.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.AI.Translation.Text.InputTextItem" />. </summary>
            <param name="text"> Text to translate. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="M:Azure.AI.Translation.Text.InputTextItem.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.AI.Translation.Text.InputTextItem" /> for deserialization. </summary>
        </member>
        <member name="P:Azure.AI.Translation.Text.InputTextItem.Text">
            <summary> Text to translate. </summary>
        </member>
        <member name="M:Azure.AI.Translation.Text.InputTextItem.FromResponse(Azure.Response)">
            <summary> Deserializes the model from a raw response. </summary>
            <param name="response"> The response to deserialize the model from. </param>
        </member>
        <member name="M:Azure.AI.Translation.Text.InputTextItem.ToRequestContent">
            <summary> Convert into a <see cref="T:Azure.Core.RequestContent" />. </summary>
        </member>
        <member name="T:Azure.AI.Translation.Text.LanguageDirectionality">
            <summary> Language Directionality. </summary>
        </member>
        <member name="F:Azure.AI.Translation.Text.LanguageDirectionality.LeftToRight">
            <summary> Language is written left to right. </summary>
        </member>
        <member name="F:Azure.AI.Translation.Text.LanguageDirectionality.RightToLeft">
            <summary> Language is written right to left. </summary>
        </member>
        <member name="T:Azure.AI.Translation.Text.LanguageScript">
            <summary> Common properties of language script. </summary>
        </member>
        <member name="F:Azure.AI.Translation.Text.LanguageScript._serializedAdditionalRawData">
            <summary>
            Keeps track of any properties unknown to the library.
            <para>
            To assign an object to the value of this property use <see cref="M:System.BinaryData.FromObjectAsJson``1(``0,System.Text.Json.JsonSerializerOptions)" />.
            </para>
            <para>
            To assign an already formatted json string to this property use <see cref="M:System.BinaryData.FromString(System.String)" />.
            </para>
            <para>
            Examples:
            <list type="bullet">
            <item>
            <term>BinaryData.FromObjectAsJson("foo")</term>
            <description>Creates a payload of "foo".</description>
            </item>
            <item>
            <term>BinaryData.FromString("\"foo\"")</term>
            <description>Creates a payload of "foo".</description>
            </item>
            <item>
            <term>BinaryData.FromObjectAsJson(new { key = "value" })</term>
            <description>Creates a payload of { "key": "value" }.</description>
            </item>
            <item>
            <term>BinaryData.FromString("{\"key\": \"value\"}")</term>
            <description>Creates a payload of { "key": "value" }.</description>
            </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="M:Azure.AI.Translation.Text.LanguageScript.#ctor(System.String,System.String,System.String,Azure.AI.Translation.Text.LanguageDirectionality)">
            <summary> Initializes a new instance of <see cref="T:Azure.AI.Translation.Text.LanguageScript" />. </summary>
            <param name="code"> Code identifying the script. </param>
            <param name="name"> Display name of the script in the locale requested via Accept-Language header. </param>
            <param name="nativeName"> Display name of the language in the locale native for the language. </param>
            <param name="directionality"> Directionality, which is rtl for right-to-left languages or ltr for left-to-right languages. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="code" />, <paramref name="name" /> or <paramref name="nativeName" /> is null. </exception>
        </member>
        <member name="M:Azure.AI.Translation.Text.LanguageScript.#ctor(System.String,System.String,System.String,Azure.AI.Translation.Text.LanguageDirectionality,System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.AI.Translation.Text.LanguageScript" />. </summary>
            <param name="code"> Code identifying the script. </param>
            <param name="name"> Display name of the script in the locale requested via Accept-Language header. </param>
            <param name="nativeName"> Display name of the language in the locale native for the language. </param>
            <param name="directionality"> Directionality, which is rtl for right-to-left languages or ltr for left-to-right languages. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="M:Azure.AI.Translation.Text.LanguageScript.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.AI.Translation.Text.LanguageScript" /> for deserialization. </summary>
        </member>
        <member name="P:Azure.AI.Translation.Text.LanguageScript.Code">
            <summary> Code identifying the script. </summary>
        </member>
        <member name="P:Azure.AI.Translation.Text.LanguageScript.Name">
            <summary> Display name of the script in the locale requested via Accept-Language header. </summary>
        </member>
        <member name="P:Azure.AI.Translation.Text.LanguageScript.NativeName">
            <summary> Display name of the language in the locale native for the language. </summary>
        </member>
        <member name="P:Azure.AI.Translation.Text.LanguageScript.Directionality">
            <summary> Directionality, which is rtl for right-to-left languages or ltr for left-to-right languages. </summary>
        </member>
        <member name="M:Azure.AI.Translation.Text.LanguageScript.FromResponse(Azure.Response)">
            <summary> Deserializes the model from a raw response. </summary>
            <param name="response"> The response to deserialize the model from. </param>
        </member>
        <member name="M:Azure.AI.Translation.Text.LanguageScript.ToRequestContent">
            <summary> Convert into a <see cref="T:Azure.Core.RequestContent" />. </summary>
        </member>
        <member name="T:Azure.AI.Translation.Text.ProfanityAction">
            <summary> Translator profanity actions. </summary>
        </member>
        <member name="F:Azure.AI.Translation.Text.ProfanityAction.NoAction">
            <summary> No Action is taken on profanity. </summary>
        </member>
        <member name="F:Azure.AI.Translation.Text.ProfanityAction.Marked">
            <summary> Profanity is marked. </summary>
        </member>
        <member name="F:Azure.AI.Translation.Text.ProfanityAction.Deleted">
            <summary> Profanity is deleted from the translated text. </summary>
        </member>
        <member name="T:Azure.AI.Translation.Text.ProfanityMarker">
            <summary> Translator profanity markers. </summary>
        </member>
        <member name="F:Azure.AI.Translation.Text.ProfanityMarker.Asterisk">
            <summary> Profanity is marked with asterisk. </summary>
        </member>
        <member name="F:Azure.AI.Translation.Text.ProfanityMarker.Tag">
            <summary> Profanity is marked with the tags. </summary>
        </member>
        <member name="T:Azure.AI.Translation.Text.SentenceBoundaries">
            <summary> An object returning sentence boundaries in the input and output texts. </summary>
        </member>
        <member name="M:Azure.AI.Translation.Text.SentenceBoundaries.#ctor(System.Collections.Generic.IEnumerable{System.Int32},System.Collections.Generic.IEnumerable{System.Int32})">
            <summary> Initializes a new instance of <see cref="T:Azure.AI.Translation.Text.SentenceBoundaries" />. </summary>
            <param name="sourceSentencesLengths">
            An integer array representing the lengths of the sentences in the input text.
            The length of the array is the number of sentences, and the values are the length of each sentence.
            </param>
            <param name="translatedSentencesLengths">
            An integer array representing the lengths of the sentences in the translated text.
            The length of the array is the number of sentences, and the values are the length of each sentence.
            </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="sourceSentencesLengths" /> or <paramref name="translatedSentencesLengths" /> is null. </exception>
        </member>
        <member name="M:Azure.AI.Translation.Text.SentenceBoundaries.#ctor(System.Collections.Generic.IReadOnlyList{System.Int32},System.Collections.Generic.IReadOnlyList{System.Int32},System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.AI.Translation.Text.SentenceBoundaries" />. </summary>
            <param name="sourceSentencesLengths">
            An integer array representing the lengths of the sentences in the input text.
            The length of the array is the number of sentences, and the values are the length of each sentence.
            </param>
            <param name="translatedSentencesLengths">
            An integer array representing the lengths of the sentences in the translated text.
            The length of the array is the number of sentences, and the values are the length of each sentence.
            </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="M:Azure.AI.Translation.Text.SentenceBoundaries.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.AI.Translation.Text.SentenceBoundaries" /> for deserialization. </summary>
        </member>
        <member name="P:Azure.AI.Translation.Text.SentenceBoundaries.SourceSentencesLengths">
            <summary>
            An integer array representing the lengths of the sentences in the input text.
            The length of the array is the number of sentences, and the values are the length of each sentence.
            </summary>
        </member>
        <member name="P:Azure.AI.Translation.Text.SentenceBoundaries.TranslatedSentencesLengths">
            <summary>
            An integer array representing the lengths of the sentences in the translated text.
            The length of the array is the number of sentences, and the values are the length of each sentence.
            </summary>
        </member>
        <member name="M:Azure.AI.Translation.Text.SentenceBoundaries.FromResponse(Azure.Response)">
            <summary> Deserializes the model from a raw response. </summary>
            <param name="response"> The response to deserialize the model from. </param>
        </member>
        <member name="M:Azure.AI.Translation.Text.SentenceBoundaries.ToRequestContent">
            <summary> Convert into a <see cref="T:Azure.Core.RequestContent" />. </summary>
        </member>
        <member name="T:Azure.AI.Translation.Text.SourceDictionaryLanguage">
            <summary> Properties ot the source dictionary language. </summary>
        </member>
        <member name="M:Azure.AI.Translation.Text.SourceDictionaryLanguage.#ctor(System.String,System.String,Azure.AI.Translation.Text.LanguageDirectionality,System.Collections.Generic.IEnumerable{Azure.AI.Translation.Text.TargetDictionaryLanguage})">
            <summary> Initializes a new instance of <see cref="T:Azure.AI.Translation.Text.SourceDictionaryLanguage" />. </summary>
            <param name="name"> Display name of the language in the locale requested via Accept-Language header. </param>
            <param name="nativeName"> Display name of the language in the locale native for this language. </param>
            <param name="directionality"> Directionality, which is rtl for right-to-left languages or ltr for left-to-right languages. </param>
            <param name="translations"> List of languages with alterative translations and examples for the query expressed in the source language. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="name" />, <paramref name="nativeName" /> or <paramref name="translations" /> is null. </exception>
        </member>
        <member name="M:Azure.AI.Translation.Text.SourceDictionaryLanguage.#ctor(System.String,System.String,Azure.AI.Translation.Text.LanguageDirectionality,System.Collections.Generic.IReadOnlyList{Azure.AI.Translation.Text.TargetDictionaryLanguage},System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.AI.Translation.Text.SourceDictionaryLanguage" />. </summary>
            <param name="name"> Display name of the language in the locale requested via Accept-Language header. </param>
            <param name="nativeName"> Display name of the language in the locale native for this language. </param>
            <param name="directionality"> Directionality, which is rtl for right-to-left languages or ltr for left-to-right languages. </param>
            <param name="translations"> List of languages with alterative translations and examples for the query expressed in the source language. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="M:Azure.AI.Translation.Text.SourceDictionaryLanguage.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.AI.Translation.Text.SourceDictionaryLanguage" /> for deserialization. </summary>
        </member>
        <member name="P:Azure.AI.Translation.Text.SourceDictionaryLanguage.Name">
            <summary> Display name of the language in the locale requested via Accept-Language header. </summary>
        </member>
        <member name="P:Azure.AI.Translation.Text.SourceDictionaryLanguage.NativeName">
            <summary> Display name of the language in the locale native for this language. </summary>
        </member>
        <member name="P:Azure.AI.Translation.Text.SourceDictionaryLanguage.Directionality">
            <summary> Directionality, which is rtl for right-to-left languages or ltr for left-to-right languages. </summary>
        </member>
        <member name="P:Azure.AI.Translation.Text.SourceDictionaryLanguage.Translations">
            <summary> List of languages with alterative translations and examples for the query expressed in the source language. </summary>
        </member>
        <member name="M:Azure.AI.Translation.Text.SourceDictionaryLanguage.FromResponse(Azure.Response)">
            <summary> Deserializes the model from a raw response. </summary>
            <param name="response"> The response to deserialize the model from. </param>
        </member>
        <member name="M:Azure.AI.Translation.Text.SourceDictionaryLanguage.ToRequestContent">
            <summary> Convert into a <see cref="T:Azure.Core.RequestContent" />. </summary>
        </member>
        <member name="T:Azure.AI.Translation.Text.SourceText">
            <summary> Input text in the default script of the source language. </summary>
        </member>
        <member name="M:Azure.AI.Translation.Text.SourceText.#ctor(System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.AI.Translation.Text.SourceText" />. </summary>
            <param name="text"> Input text in the default script of the source language. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="text" /> is null. </exception>
        </member>
        <member name="M:Azure.AI.Translation.Text.SourceText.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.AI.Translation.Text.SourceText" />. </summary>
            <param name="text"> Input text in the default script of the source language. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="M:Azure.AI.Translation.Text.SourceText.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.AI.Translation.Text.SourceText" /> for deserialization. </summary>
        </member>
        <member name="P:Azure.AI.Translation.Text.SourceText.Text">
            <summary> Input text in the default script of the source language. </summary>
        </member>
        <member name="M:Azure.AI.Translation.Text.SourceText.FromResponse(Azure.Response)">
            <summary> Deserializes the model from a raw response. </summary>
            <param name="response"> The response to deserialize the model from. </param>
        </member>
        <member name="M:Azure.AI.Translation.Text.SourceText.ToRequestContent">
            <summary> Convert into a <see cref="T:Azure.Core.RequestContent" />. </summary>
        </member>
        <member name="T:Azure.AI.Translation.Text.TargetDictionaryLanguage">
            <summary> Properties of the target dictionary language. </summary>
        </member>
        <member name="M:Azure.AI.Translation.Text.TargetDictionaryLanguage.#ctor(System.String,System.String,Azure.AI.Translation.Text.LanguageDirectionality,System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.AI.Translation.Text.TargetDictionaryLanguage" />. </summary>
            <param name="name"> Display name of the language in the locale requested via Accept-Language header. </param>
            <param name="nativeName"> Display name of the language in the locale native for this language. </param>
            <param name="directionality"> Directionality, which is rtl for right-to-left languages or ltr for left-to-right languages. </param>
            <param name="code"> Language code identifying the target language. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="name" />, <paramref name="nativeName" /> or <paramref name="code" /> is null. </exception>
        </member>
        <member name="M:Azure.AI.Translation.Text.TargetDictionaryLanguage.#ctor(System.String,System.String,Azure.AI.Translation.Text.LanguageDirectionality,System.String,System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.AI.Translation.Text.TargetDictionaryLanguage" />. </summary>
            <param name="name"> Display name of the language in the locale requested via Accept-Language header. </param>
            <param name="nativeName"> Display name of the language in the locale native for this language. </param>
            <param name="directionality"> Directionality, which is rtl for right-to-left languages or ltr for left-to-right languages. </param>
            <param name="code"> Language code identifying the target language. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="M:Azure.AI.Translation.Text.TargetDictionaryLanguage.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.AI.Translation.Text.TargetDictionaryLanguage" /> for deserialization. </summary>
        </member>
        <member name="P:Azure.AI.Translation.Text.TargetDictionaryLanguage.Name">
            <summary> Display name of the language in the locale requested via Accept-Language header. </summary>
        </member>
        <member name="P:Azure.AI.Translation.Text.TargetDictionaryLanguage.NativeName">
            <summary> Display name of the language in the locale native for this language. </summary>
        </member>
        <member name="P:Azure.AI.Translation.Text.TargetDictionaryLanguage.Directionality">
            <summary> Directionality, which is rtl for right-to-left languages or ltr for left-to-right languages. </summary>
        </member>
        <member name="P:Azure.AI.Translation.Text.TargetDictionaryLanguage.Code">
            <summary> Language code identifying the target language. </summary>
        </member>
        <member name="M:Azure.AI.Translation.Text.TargetDictionaryLanguage.FromResponse(Azure.Response)">
            <summary> Deserializes the model from a raw response. </summary>
            <param name="response"> The response to deserialize the model from. </param>
        </member>
        <member name="M:Azure.AI.Translation.Text.TargetDictionaryLanguage.ToRequestContent">
            <summary> Convert into a <see cref="T:Azure.Core.RequestContent" />. </summary>
        </member>
        <member name="T:Azure.AI.Translation.Text.TextType">
            <summary> Translation text type. </summary>
        </member>
        <member name="M:Azure.AI.Translation.Text.TextType.#ctor(System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.AI.Translation.Text.TextType" />. </summary>
            <exception cref="T:System.ArgumentNullException"> <paramref name="value" /> is null. </exception>
        </member>
        <member name="P:Azure.AI.Translation.Text.TextType.Plain">
            <summary> Plain text. </summary>
        </member>
        <member name="P:Azure.AI.Translation.Text.TextType.Html">
            <summary> HTML-encoded text. </summary>
        </member>
        <member name="M:Azure.AI.Translation.Text.TextType.op_Equality(Azure.AI.Translation.Text.TextType,Azure.AI.Translation.Text.TextType)">
            <summary> Determines if two <see cref="T:Azure.AI.Translation.Text.TextType" /> values are the same. </summary>
        </member>
        <member name="M:Azure.AI.Translation.Text.TextType.op_Inequality(Azure.AI.Translation.Text.TextType,Azure.AI.Translation.Text.TextType)">
            <summary> Determines if two <see cref="T:Azure.AI.Translation.Text.TextType" /> values are not the same. </summary>
        </member>
        <member name="M:Azure.AI.Translation.Text.TextType.op_Implicit(System.String)~Azure.AI.Translation.Text.TextType">
            <summary> Converts a string to a <see cref="T:Azure.AI.Translation.Text.TextType" />. </summary>
        </member>
        <member name="M:Azure.AI.Translation.Text.TextType.Equals(System.Object)">
            <summary>Indicates whether this instance and a specified object are equal.</summary><param name="obj">The object to compare with the current instance.</param><returns><see langword="true" /> if <paramref name="obj" /> and this instance are the same type and represent the same value; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.AI.Translation.Text.TextType.Equals(Azure.AI.Translation.Text.TextType)">
            <summary>Indicates whether the current object is equal to another object of the same type.</summary><param name="other">An object to compare with this object.</param><returns><see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.AI.Translation.Text.TextType.GetHashCode">
            <summary>Returns the hash code for this instance.</summary><returns>A 32-bit signed integer that is the hash code for this instance.</returns>
        </member>
        <member name="M:Azure.AI.Translation.Text.TextType.ToString">
            <summary>Returns the fully qualified type name of this instance.</summary><returns>The fully qualified type name.</returns>
        </member>
        <member name="T:Azure.AI.Translation.Text.TranslatedTextAlignment">
            <summary> Alignment information object. </summary>
        </member>
        <member name="M:Azure.AI.Translation.Text.TranslatedTextAlignment.#ctor(System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.AI.Translation.Text.TranslatedTextAlignment" />. </summary>
            <param name="projections">
            Maps input text to translated text. The alignment information is only provided when the request
            parameter includeAlignment is true. Alignment is returned as a string value of the following
            format: [[SourceTextStartIndex]:[SourceTextEndIndex]–[TgtTextStartIndex]:[TgtTextEndIndex]].
            The colon separates start and end index, the dash separates the languages, and space separates the words.
            One word may align with zero, one, or multiple words in the other language, and the aligned words may
            be non-contiguous. When no alignment information is available, the alignment element will be empty.
            </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="projections" /> is null. </exception>
        </member>
        <member name="M:Azure.AI.Translation.Text.TranslatedTextAlignment.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.AI.Translation.Text.TranslatedTextAlignment" />. </summary>
            <param name="projections">
            Maps input text to translated text. The alignment information is only provided when the request
            parameter includeAlignment is true. Alignment is returned as a string value of the following
            format: [[SourceTextStartIndex]:[SourceTextEndIndex]–[TgtTextStartIndex]:[TgtTextEndIndex]].
            The colon separates start and end index, the dash separates the languages, and space separates the words.
            One word may align with zero, one, or multiple words in the other language, and the aligned words may
            be non-contiguous. When no alignment information is available, the alignment element will be empty.
            </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="M:Azure.AI.Translation.Text.TranslatedTextAlignment.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.AI.Translation.Text.TranslatedTextAlignment" /> for deserialization. </summary>
        </member>
        <member name="P:Azure.AI.Translation.Text.TranslatedTextAlignment.Projections">
            <summary>
            Maps input text to translated text. The alignment information is only provided when the request
            parameter includeAlignment is true. Alignment is returned as a string value of the following
            format: [[SourceTextStartIndex]:[SourceTextEndIndex]–[TgtTextStartIndex]:[TgtTextEndIndex]].
            The colon separates start and end index, the dash separates the languages, and space separates the words.
            One word may align with zero, one, or multiple words in the other language, and the aligned words may
            be non-contiguous. When no alignment information is available, the alignment element will be empty.
            </summary>
        </member>
        <member name="M:Azure.AI.Translation.Text.TranslatedTextAlignment.FromResponse(Azure.Response)">
            <summary> Deserializes the model from a raw response. </summary>
            <param name="response"> The response to deserialize the model from. </param>
        </member>
        <member name="M:Azure.AI.Translation.Text.TranslatedTextAlignment.ToRequestContent">
            <summary> Convert into a <see cref="T:Azure.Core.RequestContent" />. </summary>
        </member>
        <member name="T:Azure.AI.Translation.Text.TranslatedTextItem">
            <summary> Element containing the translated text. </summary>
        </member>
        <member name="M:Azure.AI.Translation.Text.TranslatedTextItem.#ctor(System.Collections.Generic.IEnumerable{Azure.AI.Translation.Text.TranslationText})">
            <summary> Initializes a new instance of <see cref="T:Azure.AI.Translation.Text.TranslatedTextItem" />. </summary>
            <param name="translations">
            An array of translation results. The size of the array matches the number of target
            languages specified through the to query parameter.
            </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="translations" /> is null. </exception>
        </member>
        <member name="M:Azure.AI.Translation.Text.TranslatedTextItem.#ctor(Azure.AI.Translation.Text.DetectedLanguage,System.Collections.Generic.IReadOnlyList{Azure.AI.Translation.Text.TranslationText},Azure.AI.Translation.Text.SourceText,System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.AI.Translation.Text.TranslatedTextItem" />. </summary>
            <param name="detectedLanguage"> The detectedLanguage property is only present in the result object when language auto-detection is requested. </param>
            <param name="translations">
            An array of translation results. The size of the array matches the number of target
            languages specified through the to query parameter.
            </param>
            <param name="sourceText">
            Input text in the default script of the source language. sourceText property is present only when
            the input is expressed in a script that's not the usual script for the language. For example,
            if the input were Arabic written in Latin script, then sourceText.text would be the same Arabic text
            converted into Arab script.
            </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="M:Azure.AI.Translation.Text.TranslatedTextItem.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.AI.Translation.Text.TranslatedTextItem" /> for deserialization. </summary>
        </member>
        <member name="P:Azure.AI.Translation.Text.TranslatedTextItem.DetectedLanguage">
            <summary> The detectedLanguage property is only present in the result object when language auto-detection is requested. </summary>
        </member>
        <member name="P:Azure.AI.Translation.Text.TranslatedTextItem.Translations">
            <summary>
            An array of translation results. The size of the array matches the number of target
            languages specified through the to query parameter.
            </summary>
        </member>
        <member name="P:Azure.AI.Translation.Text.TranslatedTextItem.SourceText">
            <summary>
            Input text in the default script of the source language. sourceText property is present only when
            the input is expressed in a script that's not the usual script for the language. For example,
            if the input were Arabic written in Latin script, then sourceText.text would be the same Arabic text
            converted into Arab script.
            </summary>
        </member>
        <member name="M:Azure.AI.Translation.Text.TranslatedTextItem.FromResponse(Azure.Response)">
            <summary> Deserializes the model from a raw response. </summary>
            <param name="response"> The response to deserialize the model from. </param>
        </member>
        <member name="M:Azure.AI.Translation.Text.TranslatedTextItem.ToRequestContent">
            <summary> Convert into a <see cref="T:Azure.Core.RequestContent" />. </summary>
        </member>
        <member name="T:Azure.AI.Translation.Text.TranslationLanguage">
            <summary>
            The value of the translation property is a dictionary of (key, value) pairs. Each key is a BCP 47 language tag.
            A key identifies a language for which text can be translated to or translated from.
            </summary>
        </member>
        <member name="M:Azure.AI.Translation.Text.TranslationLanguage.#ctor(System.String,System.String,Azure.AI.Translation.Text.LanguageDirectionality)">
            <summary> Initializes a new instance of <see cref="T:Azure.AI.Translation.Text.TranslationLanguage" />. </summary>
            <param name="name"> Display name of the language in the locale requested via Accept-Language header. </param>
            <param name="nativeName"> Display name of the language in the locale native for this language. </param>
            <param name="directionality"> Directionality, which is rtl for right-to-left languages or ltr for left-to-right languages. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="name" /> or <paramref name="nativeName" /> is null. </exception>
        </member>
        <member name="M:Azure.AI.Translation.Text.TranslationLanguage.#ctor(System.String,System.String,Azure.AI.Translation.Text.LanguageDirectionality,System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.AI.Translation.Text.TranslationLanguage" />. </summary>
            <param name="name"> Display name of the language in the locale requested via Accept-Language header. </param>
            <param name="nativeName"> Display name of the language in the locale native for this language. </param>
            <param name="directionality"> Directionality, which is rtl for right-to-left languages or ltr for left-to-right languages. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="M:Azure.AI.Translation.Text.TranslationLanguage.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.AI.Translation.Text.TranslationLanguage" /> for deserialization. </summary>
        </member>
        <member name="P:Azure.AI.Translation.Text.TranslationLanguage.Name">
            <summary> Display name of the language in the locale requested via Accept-Language header. </summary>
        </member>
        <member name="P:Azure.AI.Translation.Text.TranslationLanguage.NativeName">
            <summary> Display name of the language in the locale native for this language. </summary>
        </member>
        <member name="P:Azure.AI.Translation.Text.TranslationLanguage.Directionality">
            <summary> Directionality, which is rtl for right-to-left languages or ltr for left-to-right languages. </summary>
        </member>
        <member name="M:Azure.AI.Translation.Text.TranslationLanguage.FromResponse(Azure.Response)">
            <summary> Deserializes the model from a raw response. </summary>
            <param name="response"> The response to deserialize the model from. </param>
        </member>
        <member name="M:Azure.AI.Translation.Text.TranslationLanguage.ToRequestContent">
            <summary> Convert into a <see cref="T:Azure.Core.RequestContent" />. </summary>
        </member>
        <member name="T:Azure.AI.Translation.Text.TranslationText">
            <summary> Translation result. </summary>
        </member>
        <member name="M:Azure.AI.Translation.Text.TranslationText.#ctor(System.String,System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.AI.Translation.Text.TranslationText" />. </summary>
            <param name="targetLanguage"> A string representing the language code of the target language. </param>
            <param name="text"> A string giving the translated text. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="targetLanguage" /> or <paramref name="text" /> is null. </exception>
        </member>
        <member name="M:Azure.AI.Translation.Text.TranslationText.#ctor(System.String,System.String,Azure.AI.Translation.Text.TransliteratedText,Azure.AI.Translation.Text.TranslatedTextAlignment,Azure.AI.Translation.Text.SentenceBoundaries,System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.AI.Translation.Text.TranslationText" />. </summary>
            <param name="targetLanguage"> A string representing the language code of the target language. </param>
            <param name="text"> A string giving the translated text. </param>
            <param name="transliteration"> An object giving the translated text in the script specified by the toScript parameter. </param>
            <param name="alignment"> Alignment information. </param>
            <param name="sentenceBoundaries"> Sentence boundaries in the input and output texts. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="M:Azure.AI.Translation.Text.TranslationText.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.AI.Translation.Text.TranslationText" /> for deserialization. </summary>
        </member>
        <member name="P:Azure.AI.Translation.Text.TranslationText.TargetLanguage">
            <summary> A string representing the language code of the target language. </summary>
        </member>
        <member name="P:Azure.AI.Translation.Text.TranslationText.Text">
            <summary> A string giving the translated text. </summary>
        </member>
        <member name="P:Azure.AI.Translation.Text.TranslationText.Transliteration">
            <summary> An object giving the translated text in the script specified by the toScript parameter. </summary>
        </member>
        <member name="P:Azure.AI.Translation.Text.TranslationText.Alignment">
            <summary> Alignment information. </summary>
        </member>
        <member name="P:Azure.AI.Translation.Text.TranslationText.SentenceBoundaries">
            <summary> Sentence boundaries in the input and output texts. </summary>
        </member>
        <member name="M:Azure.AI.Translation.Text.TranslationText.FromResponse(Azure.Response)">
            <summary> Deserializes the model from a raw response. </summary>
            <param name="response"> The response to deserialize the model from. </param>
        </member>
        <member name="M:Azure.AI.Translation.Text.TranslationText.ToRequestContent">
            <summary> Convert into a <see cref="T:Azure.Core.RequestContent" />. </summary>
        </member>
        <member name="T:Azure.AI.Translation.Text.TransliterableScript">
            <summary> Script definition with list of script into which given script can be translitered. </summary>
        </member>
        <member name="M:Azure.AI.Translation.Text.TransliterableScript.#ctor(System.String,System.String,System.String,Azure.AI.Translation.Text.LanguageDirectionality,System.Collections.Generic.IEnumerable{Azure.AI.Translation.Text.LanguageScript})">
            <summary> Initializes a new instance of <see cref="T:Azure.AI.Translation.Text.TransliterableScript" />. </summary>
            <param name="code"> Code identifying the script. </param>
            <param name="name"> Display name of the script in the locale requested via Accept-Language header. </param>
            <param name="nativeName"> Display name of the language in the locale native for the language. </param>
            <param name="directionality"> Directionality, which is rtl for right-to-left languages or ltr for left-to-right languages. </param>
            <param name="targetLanguageScripts"> List of scripts available to convert text to. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="code" />, <paramref name="name" />, <paramref name="nativeName" /> or <paramref name="targetLanguageScripts" /> is null. </exception>
        </member>
        <member name="M:Azure.AI.Translation.Text.TransliterableScript.#ctor(System.String,System.String,System.String,Azure.AI.Translation.Text.LanguageDirectionality,System.Collections.Generic.IDictionary{System.String,System.BinaryData},System.Collections.Generic.IReadOnlyList{Azure.AI.Translation.Text.LanguageScript})">
            <summary> Initializes a new instance of <see cref="T:Azure.AI.Translation.Text.TransliterableScript" />. </summary>
            <param name="code"> Code identifying the script. </param>
            <param name="name"> Display name of the script in the locale requested via Accept-Language header. </param>
            <param name="nativeName"> Display name of the language in the locale native for the language. </param>
            <param name="directionality"> Directionality, which is rtl for right-to-left languages or ltr for left-to-right languages. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
            <param name="targetLanguageScripts"> List of scripts available to convert text to. </param>
        </member>
        <member name="M:Azure.AI.Translation.Text.TransliterableScript.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.AI.Translation.Text.TransliterableScript" /> for deserialization. </summary>
        </member>
        <member name="P:Azure.AI.Translation.Text.TransliterableScript.TargetLanguageScripts">
            <summary> List of scripts available to convert text to. </summary>
        </member>
        <member name="M:Azure.AI.Translation.Text.TransliterableScript.FromResponse(Azure.Response)">
            <summary> Deserializes the model from a raw response. </summary>
            <param name="response"> The response to deserialize the model from. </param>
        </member>
        <member name="M:Azure.AI.Translation.Text.TransliterableScript.ToRequestContent">
            <summary> Convert into a <see cref="T:Azure.Core.RequestContent" />. </summary>
        </member>
        <member name="T:Azure.AI.Translation.Text.TransliteratedText">
            <summary> Transliterated text element. </summary>
        </member>
        <member name="M:Azure.AI.Translation.Text.TransliteratedText.#ctor(System.String,System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.AI.Translation.Text.TransliteratedText" />. </summary>
            <param name="text"> A string which is the result of converting the input string to the output script. </param>
            <param name="script"> A string specifying the script used in the output. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="text" /> or <paramref name="script" /> is null. </exception>
        </member>
        <member name="M:Azure.AI.Translation.Text.TransliteratedText.#ctor(System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.AI.Translation.Text.TransliteratedText" />. </summary>
            <param name="text"> A string which is the result of converting the input string to the output script. </param>
            <param name="script"> A string specifying the script used in the output. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="M:Azure.AI.Translation.Text.TransliteratedText.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.AI.Translation.Text.TransliteratedText" /> for deserialization. </summary>
        </member>
        <member name="P:Azure.AI.Translation.Text.TransliteratedText.Text">
            <summary> A string which is the result of converting the input string to the output script. </summary>
        </member>
        <member name="P:Azure.AI.Translation.Text.TransliteratedText.Script">
            <summary> A string specifying the script used in the output. </summary>
        </member>
        <member name="M:Azure.AI.Translation.Text.TransliteratedText.FromResponse(Azure.Response)">
            <summary> Deserializes the model from a raw response. </summary>
            <param name="response"> The response to deserialize the model from. </param>
        </member>
        <member name="M:Azure.AI.Translation.Text.TransliteratedText.ToRequestContent">
            <summary> Convert into a <see cref="T:Azure.Core.RequestContent" />. </summary>
        </member>
        <member name="T:Azure.AI.Translation.Text.TransliterationLanguage">
            <summary>
            The value of the transliteration property is a dictionary of (key, value) pairs.
            Each key is a BCP 47 language tag. A key identifies a language for which text can be converted from one script
            to another script.
            </summary>
        </member>
        <member name="M:Azure.AI.Translation.Text.TransliterationLanguage.#ctor(System.String,System.String,System.Collections.Generic.IEnumerable{Azure.AI.Translation.Text.TransliterableScript})">
            <summary> Initializes a new instance of <see cref="T:Azure.AI.Translation.Text.TransliterationLanguage" />. </summary>
            <param name="name"> Display name of the language in the locale requested via Accept-Language header. </param>
            <param name="nativeName"> Display name of the language in the locale native for this language. </param>
            <param name="scripts"> List of scripts to convert from. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="name" />, <paramref name="nativeName" /> or <paramref name="scripts" /> is null. </exception>
        </member>
        <member name="M:Azure.AI.Translation.Text.TransliterationLanguage.#ctor(System.String,System.String,System.Collections.Generic.IReadOnlyList{Azure.AI.Translation.Text.TransliterableScript},System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.AI.Translation.Text.TransliterationLanguage" />. </summary>
            <param name="name"> Display name of the language in the locale requested via Accept-Language header. </param>
            <param name="nativeName"> Display name of the language in the locale native for this language. </param>
            <param name="scripts"> List of scripts to convert from. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="M:Azure.AI.Translation.Text.TransliterationLanguage.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.AI.Translation.Text.TransliterationLanguage" /> for deserialization. </summary>
        </member>
        <member name="P:Azure.AI.Translation.Text.TransliterationLanguage.Name">
            <summary> Display name of the language in the locale requested via Accept-Language header. </summary>
        </member>
        <member name="P:Azure.AI.Translation.Text.TransliterationLanguage.NativeName">
            <summary> Display name of the language in the locale native for this language. </summary>
        </member>
        <member name="P:Azure.AI.Translation.Text.TransliterationLanguage.Scripts">
            <summary> List of scripts to convert from. </summary>
        </member>
        <member name="M:Azure.AI.Translation.Text.TransliterationLanguage.FromResponse(Azure.Response)">
            <summary> Deserializes the model from a raw response. </summary>
            <param name="response"> The response to deserialize the model from. </param>
        </member>
        <member name="M:Azure.AI.Translation.Text.TransliterationLanguage.ToRequestContent">
            <summary> Convert into a <see cref="T:Azure.Core.RequestContent" />. </summary>
        </member>
        <member name="T:Azure.AI.Translation.Text.InputTextWithTranslation">
            <summary> Input Text Element for Translator Requests. </summary>
        </member>
        <member name="M:Azure.AI.Translation.Text.InputTextWithTranslation.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.AI.Translation.Text.InputTextWithTranslation" /> class.
            </summary>
            <param name="word">Word to lookup in the dictionary.</param>
            <param name="translation">Translation of the word.</param>
        </member>
        <member name="P:Azure.AI.Translation.Text.InputTextWithTranslation.Text">
            <summary> Gets or Sets the Text to be translated. </summary>
        </member>
        <member name="P:Azure.AI.Translation.Text.InputTextWithTranslation.Translation">
            <summary> Gets or Sets the Translation of the Text. </summary>
        </member>
        <member name="T:Azure.AI.Translation.Text.TextTranslationAADAuthenticationPolicy">
            <summary>
            A policy that sends an <see cref="T:Azure.Core.AccessToken" /> provided by a <see cref="T:Azure.Core.TokenCredential" /> as an Authentication header
            together with the Ocp-Apim-Subscription-Region and Ocp-Apim-ResourceId headers.
            </summary>
        </member>
        <member name="M:Azure.AI.Translation.Text.TextTranslationAADAuthenticationPolicy.ProcessAsync(Azure.Core.HttpMessage,System.ReadOnlyMemory{Azure.Core.Pipeline.HttpPipelinePolicy})">
            <summary>
            Applies the policy to the <paramref name="message" />. Implementers are expected to mutate <see cref="P:Azure.Core.HttpMessage.Request" /> before calling <see cref="M:Azure.Core.Pipeline.HttpPipelinePolicy.ProcessNextAsync(Azure.Core.HttpMessage,System.ReadOnlyMemory{Azure.Core.Pipeline.HttpPipelinePolicy})" /> and observe the <see cref="P:Azure.Core.HttpMessage.Response" /> changes after.
            </summary><param name="message">The <see cref="T:Azure.Core.HttpMessage" /> this policy would be applied to.</param><param name="pipeline">The set of <see cref="T:Azure.Core.Pipeline.HttpPipelinePolicy" /> to execute after current one.</param><returns>The <see cref="T:System.Threading.Tasks.ValueTask" /> representing the asynchronous operation.</returns>
        </member>
        <member name="M:Azure.AI.Translation.Text.TextTranslationAADAuthenticationPolicy.Process(Azure.Core.HttpMessage,System.ReadOnlyMemory{Azure.Core.Pipeline.HttpPipelinePolicy})">
            <summary>
            Applies the policy to the <paramref name="message" />. Implementers are expected to mutate <see cref="P:Azure.Core.HttpMessage.Request" /> before calling <see cref="M:Azure.Core.Pipeline.HttpPipelinePolicy.ProcessNextAsync(Azure.Core.HttpMessage,System.ReadOnlyMemory{Azure.Core.Pipeline.HttpPipelinePolicy})" /> and observe the <see cref="P:Azure.Core.HttpMessage.Response" /> changes after.
            </summary><param name="message">The <see cref="T:Azure.Core.HttpMessage" /> this policy would be applied to.</param><param name="pipeline">The set of <see cref="T:Azure.Core.Pipeline.HttpPipelinePolicy" /> to execute after current one.</param>
        </member>
        <member name="T:Azure.AI.Translation.Text.UriExtensions">
            <summary>
            Extension methods for Uri.
            </summary>
        </member>
        <member name="M:Azure.AI.Translation.Text.UriExtensions.IsPlatformHost(System.Uri)">
            <summary>
            Checks the uri and decides whether it is platform host.
            </summary>
            <param name="uri">Uri to check</param>
            <returns>True - uri is pointing to platform. False otherwise.</returns>
        </member>
        <member name="T:Azure.Core.ArrayBufferWriter`1">
            <summary>
            Represents a heap-based, array-backed output sink into which <typeparam name="T" /> data can be written.
            </summary>
        </member>
        <member name="M:Azure.Core.ArrayBufferWriter`1.#ctor">
            <summary>
            Creates an instance of an <see cref="T:Azure.Core.ArrayBufferWriter`1" />, in which data can be written to,
            with the default initial capacity.
            </summary>
        </member>
        <member name="M:Azure.Core.ArrayBufferWriter`1.#ctor(System.Int32)">
            <summary>
            Creates an instance of an <see cref="T:Azure.Core.ArrayBufferWriter`1" />, in which data can be written to,
            with an initial capacity specified.
            </summary>
            <param name="initialCapacity">The minimum capacity with which to initialize the underlying buffer.</param>
            <exception cref="T:System.ArgumentException">
            Thrown when <paramref name="initialCapacity" /> is not positive (i.e. less than or equal to 0).
            </exception>
        </member>
        <member name="P:Azure.Core.ArrayBufferWriter`1.WrittenMemory">
            <summary>
            Returns the data written to the underlying buffer so far, as a <see cref="T:System.ReadOnlyMemory`1" />.
            </summary>
        </member>
        <member name="P:Azure.Core.ArrayBufferWriter`1.WrittenSpan">
            <summary>
            Returns the data written to the underlying buffer so far, as a <see cref="T:System.ReadOnlySpan`1" />.
            </summary>
        </member>
        <member name="P:Azure.Core.ArrayBufferWriter`1.WrittenCount">
            <summary>
            Returns the amount of data written to the underlying buffer so far.
            </summary>
        </member>
        <member name="P:Azure.Core.ArrayBufferWriter`1.Capacity">
            <summary>
            Returns the total amount of space within the underlying buffer.
            </summary>
        </member>
        <member name="P:Azure.Core.ArrayBufferWriter`1.FreeCapacity">
            <summary>
            Returns the amount of space available that can still be written into without forcing the underlying buffer to grow.
            </summary>
        </member>
        <member name="M:Azure.Core.ArrayBufferWriter`1.Clear">
            <summary>
            Clears the data written to the underlying buffer.
            </summary>
            <remarks>
            You must clear the <see cref="T:Azure.Core.ArrayBufferWriter`1" /> before trying to re-use it.
            </remarks>
        </member>
        <member name="M:Azure.Core.ArrayBufferWriter`1.Advance(System.Int32)">
            <summary>
            Notifies <see cref="T:System.Buffers.IBufferWriter`1" /> that <paramref name="count" /> amount of data was written to the output <see cref="T:System.Span`1" />/<see cref="T:System.Memory`1" />.
            </summary>
            <exception cref="T:System.ArgumentException">
            Thrown when <paramref name="count" /> is negative.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            Thrown when attempting to advance past the end of the underlying buffer.
            </exception>
            <remarks>
            You must request a new buffer after calling Advance to continue writing more data and cannot write to a previously acquired buffer.
            </remarks>
        </member>
        <member name="M:Azure.Core.ArrayBufferWriter`1.GetMemory(System.Int32)">
            <summary>
            Returns a <see cref="T:System.Memory`1" /> to write to that is at least the requested length (specified by <paramref name="sizeHint" />).
            If no <paramref name="sizeHint" /> is provided (or it's equal to <code>0</code>), some non-empty buffer is returned.
            </summary>
            <exception cref="T:System.ArgumentException">
            Thrown when <paramref name="sizeHint" /> is negative.
            </exception>
            <remarks>
            This will never return an empty <see cref="T:System.Memory`1" />.
            </remarks>
            <remarks>
            There is no guarantee that successive calls will return the same buffer or the same-sized buffer.
            </remarks>
            <remarks>
            You must request a new buffer after calling Advance to continue writing more data and cannot write to a previously acquired buffer.
            </remarks>
        </member>
        <member name="M:Azure.Core.ArrayBufferWriter`1.GetSpan(System.Int32)">
            <summary>
            Returns a <see cref="T:System.Span`1" /> to write to that is at least the requested length (specified by <paramref name="sizeHint" />).
            If no <paramref name="sizeHint" /> is provided (or it's equal to <code>0</code>), some non-empty buffer is returned.
            </summary>
            <exception cref="T:System.ArgumentException">
            Thrown when <paramref name="sizeHint" /> is negative.
            </exception>
            <remarks>
            This will never return an empty <see cref="T:System.Span`1" />.
            </remarks>
            <remarks>
            There is no guarantee that successive calls will return the same buffer or the same-sized buffer.
            </remarks>
            <remarks>
            You must request a new buffer after calling Advance to continue writing more data and cannot write to a previously acquired buffer.
            </remarks>
        </member>
        <member name="T:Azure.Core.AzureResourceProviderNamespaceAttribute">
            <summary>
            This attribute should be set on all client assemblies with value of one of the resource providers
            from the https://docs.microsoft.com/azure/azure-resource-manager/management/azure-services-resource-providers list.
            </summary>
        </member>
        <member name="M:Azure.Core.AzureKeyCredentialPolicy.#ctor(Azure.AzureKeyCredential,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.Core.AzureKeyCredentialPolicy" /> class.
            </summary>
            <param name="credential">The <see cref="T:Azure.AzureKeyCredential" /> used to authenticate requests.</param>
            <param name="name">The name of the key header used for the credential.</param>
            <param name="prefix">The prefix to apply before the credential key. For example, a prefix of "SharedAccessKey" would result in
            a value of "SharedAccessKey {credential.Key}" being stamped on the request header with header key of <paramref name="name" />.</param>
        </member>
        <member name="M:Azure.Core.AzureKeyCredentialPolicy.OnSendingRequest(Azure.Core.HttpMessage)">
            <summary>
            Method is invoked before the request is sent.
            </summary><param name="message">The <see cref="T:Azure.Core.HttpMessage" /> containing the request.</param>
        </member>
        <member name="P:Azure.Core.CodeGenModelAttribute.Usage">
            <summary>
            Gets or sets a coma separated list of additional model usage modes. Allowed values: model, error, intput, output.
            </summary>
        </member>
        <member name="P:Azure.Core.CodeGenModelAttribute.Formats">
            <summary>
            Gets or sets a coma separated list of additional model serialization formats.
            </summary>
        </member>
        <member name="P:Azure.Core.CodeGenSerializationAttribute.PropertyName">
            <summary>
            Gets or sets the property name which these hooks should apply to
            </summary>
        </member>
        <member name="P:Azure.Core.CodeGenSerializationAttribute.SerializationPath">
            <summary>
            Gets or sets the serialization path of the property in the JSON
            </summary>
        </member>
        <member name="P:Azure.Core.CodeGenSerializationAttribute.SerializationValueHook">
            <summary>
            Gets or sets the method name to use when serializing the property value (property name excluded)
            The signature of the serialization hook method must be or compatible with when invoking:
            private void SerializeHook(Utf8JsonWriter writer);
            </summary>
        </member>
        <member name="P:Azure.Core.CodeGenSerializationAttribute.DeserializationValueHook">
            <summary>
            Gets or sets the method name to use when deserializing the property value from the JSON
            private static void DeserializationHook(JsonProperty property, ref TypeOfTheProperty propertyValue); // if the property is required
            private static void DeserializationHook(JsonProperty property, ref Optional&lt;TypeOfTheProperty&gt; propertyValue); // if the property is optional
            </summary>
        </member>
        <member name="P:Azure.Core.CodeGenSerializationAttribute.BicepSerializationValueHook">
            <summary>
            Gets or sets the method name to use when serializing the property value (property name excluded)
            The signature of the serialization hook method must be or compatible with when invoking:
            private void SerializeHook(StringBuilder builder);
            </summary>
        </member>
        <member name="T:Azure.Core.AppContextSwitchHelper">
            <summary>
            Helper for interacting with AppConfig settings and their related Environment variable settings.
            </summary>
        </member>
        <member name="M:Azure.Core.AppContextSwitchHelper.GetConfigValue(System.String,System.String)">
            <summary>
            Determines if either an AppContext switch or its corresponding Environment Variable is set
            </summary>
            <param name="appContexSwitchName">Name of the AppContext switch.</param>
            <param name="environmentVariableName">Name of the Environment variable.</param>
            <returns>If the AppContext switch has been set, returns the value of the switch.
            If the AppContext switch has not been set, returns the value of the environment variable.
            False if neither is set.
            </returns>
        </member>
        <member name="T:Azure.Core.AsyncLockWithValue`1">
            <summary>
            Primitive that combines async lock and value cache
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Azure.Core.AsyncLockWithValue`1.GetLockOrValueAsync(System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Method that either returns cached value or acquire a lock.
            If one caller has acquired a lock, other callers will be waiting for the lock to be released.
            If value is set, lock is released and all waiters get that value.
            If value isn't set, the next waiter in the queue will get the lock.
            </summary>
            <param name="async"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="P:Azure.Core.AsyncLockWithValue`1.LockOrValue.HasValue">
            <summary>
            Returns true if lock contains the cached value. Otherwise false.
            </summary>
        </member>
        <member name="P:Azure.Core.AsyncLockWithValue`1.LockOrValue.Value">
            <summary>
            Returns cached value if it was set when lock has been created. Throws exception otherwise.
            </summary>
            <exception cref="T:System.InvalidOperationException">Value isn't set.</exception>
        </member>
        <member name="M:Azure.Core.AsyncLockWithValue`1.LockOrValue.SetValue(`0)">
            <summary>
            Set value to the cache and to all the waiters.
            </summary>
            <param name="value"></param>
            <exception cref="T:System.InvalidOperationException">Value is set already.</exception>
        </member>
        <member name="M:Azure.Core.Pipeline.ClientDiagnostics.#ctor(Azure.Core.ClientOptions,System.Nullable{System.Boolean})">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.Core.Pipeline.ClientDiagnostics" /> class.
            </summary>
            <param name="options">The customer provided client options object.</param>
            <param name="suppressNestedClientActivities">Flag controlling if <see cref="T:System.Diagnostics.Activity" />
             created by this <see cref="T:Azure.Core.Pipeline.ClientDiagnostics" /> for client method calls should be suppressed when called
             by other Azure SDK client methods.  It's recommended to set it to true for new clients; use default (null)
             for backward compatibility reasons, or set it to false to explicitly disable suppression for specific cases.
             The default value could change in the future, the flag should be only set to false if suppression for the client
             should never be enabled.</param>
        </member>
        <member name="M:Azure.Core.Pipeline.ClientDiagnostics.#ctor(System.String,System.String,Azure.Core.DiagnosticsOptions,System.Nullable{System.Boolean})">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.Core.Pipeline.ClientDiagnostics" /> class.
            </summary>
            <param name="optionsNamespace">Namespace of the client class, such as Azure.Storage or Azure.AppConfiguration.</param>
            <param name="providerNamespace">Azure Resource Provider namespace of the Azure service SDK is primarily used for.</param>
            <param name="diagnosticsOptions">The customer provided client diagnostics options.</param>
            <param name="suppressNestedClientActivities">Flag controlling if <see cref="T:System.Diagnostics.Activity" />
             created by this <see cref="T:Azure.Core.Pipeline.ClientDiagnostics" /> for client method calls should be suppressed when called
             by other Azure SDK client methods.  It's recommended to set it to true for new clients, use default (null) for old clients
             for backward compatibility reasons, or set it to false to explicitly disable suppression for specific cases.
             The default value could change in the future, the flag should be only set to false if suppression for the client
             should never be enabled.</param>
        </member>
        <member name="M:Azure.Core.Pipeline.DiagnosticScope.AddLink(System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Adds a link to the scope. This must be called before <see cref="M:Azure.Core.Pipeline.DiagnosticScope.Start" /> has been called for the DiagnosticScope.
            </summary>
            <param name="traceparent">The traceparent for the link.</param>
            <param name="tracestate">The tracestate for the link.</param>
            <param name="attributes">Optional attributes to associate with the link.</param>
        </member>
        <member name="M:Azure.Core.Pipeline.DiagnosticScope.SetTraceContext(System.String,System.String)">
            <summary>
            Sets the trace context for the current scope.
            </summary>
            <param name="traceparent">The trace parent to set for the current scope.</param>
            <param name="tracestate">The trace state to set for the current scope.</param>
        </member>
        <member name="M:Azure.Core.Pipeline.DiagnosticScope.Failed(System.Exception)">
            <summary>
            Marks the scope as failed.
            </summary>
            <param name="exception">The exception to associate with the failed scope.</param>
        </member>
        <member name="M:Azure.Core.Pipeline.DiagnosticScope.Failed(System.String)">
            <summary>
            Marks the scope as failed with low-cardinality error.type attribute.
            </summary>
            <param name="errorCode">Error code to associate with the failed scope.</param>
        </member>
        <member name="T:Azure.Core.Pipeline.ActivityExtensions">
            <summary>
            Until Activity Source is no longer considered experimental.
            </summary>
        </member>
        <member name="M:Azure.Core.Pipeline.DiagnosticScopeFactory.#ctor(System.String,System.String,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Creates diagnostic scope factory.
            </summary>
            <param name="clientNamespace">The namespace which is used as a prefix for all ActivitySources created by the factory and the name of DiagnosticSource (when used).</param>
            <param name="resourceProviderNamespace">Azure resource provider namespace.</param>
            <param name="isActivityEnabled">Flag indicating if distributed tracing is enabled.</param>
            <param name="suppressNestedClientActivities">Flag indicating if nested Azure SDK activities describing public API calls should be suppressed.</param>
            <param name="isStable">Whether instrumentation is considered stable. When false, experimental feature flag controls if tracing is enabled.</param>
        </member>
        <member name="T:Azure.Core.Pipeline.TaskExtensions.Enumerable`1">
            <summary>
            Both <see cref="T:Azure.Core.Pipeline.TaskExtensions.Enumerable`1" /> and <see cref="T:Azure.Core.Pipeline.TaskExtensions.Enumerator`1" /> are defined as public structs so that foreach can use duck typing
            to call <see cref="M:Azure.Core.Pipeline.TaskExtensions.Enumerable`1.GetEnumerator" /> and avoid heap memory allocation.
            Please don't delete this method and don't make these types private.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="T:Azure.Core.FixedDelayWithNoJitterStrategy">
            <summary>
            A delay strategy that uses a fixed delay with no jitter applied. This is used by data plane LROs.
            </summary>
        </member>
        <member name="T:Azure.Core.OperationInternal">
            <summary>
            A helper class used to build long-running operation instances. In order to use this helper:
            <list type="number">
              <item>Make sure your LRO implements the <see cref="T:Azure.Core.IOperation" /> interface.</item>
              <item>Add a private <see cref="T:Azure.Core.OperationInternal" /> field to your LRO, and instantiate it during construction.</item>
              <item>Delegate method calls to the <see cref="T:Azure.Core.OperationInternal" /> implementations.</item>
            </list>
            Supported members:
            <list type="bullet">
              <item>
                <description><see cref="P:Azure.Core.OperationInternalBase.HasCompleted" /></description>
              </item>
              <item>
                <description><see cref="P:Azure.Core.OperationInternalBase.RawResponse" />, used for <see cref="M:Azure.Operation.GetRawResponse" /></description>
              </item>
              <item>
                <description><see cref="M:Azure.Core.OperationInternalBase.UpdateStatus(System.Threading.CancellationToken)" /></description>
              </item>
              <item>
                <description><see cref="M:Azure.Core.OperationInternalBase.UpdateStatusAsync(System.Threading.CancellationToken)" /></description>
              </item>
              <item>
                <description><see cref="M:Azure.Core.OperationInternalBase.WaitForCompletionResponseAsync(System.Threading.CancellationToken)" /></description>
              </item>
              <item>
                <description><see cref="M:Azure.Core.OperationInternalBase.WaitForCompletionResponseAsync(System.TimeSpan,System.Threading.CancellationToken)" /></description>
              </item>
            </list>
            </summary>
        </member>
        <member name="M:Azure.Core.OperationInternal.Succeeded(Azure.Response)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.Core.OperationInternal" /> class in a final successful state.
            </summary>
            <param name="rawResponse">The final value of <see cref="P:Azure.Core.OperationInternalBase.RawResponse" />.</param>
        </member>
        <member name="M:Azure.Core.OperationInternal.Failed(Azure.Response,Azure.RequestFailedException)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.Core.OperationInternal" /> class in a final failed state.
            </summary>
            <param name="rawResponse">The final value of <see cref="P:Azure.Core.OperationInternalBase.RawResponse" />.</param>
            <param name="operationFailedException">The exception that will be thrown by <c>UpdateStatusAsync</c>.</param>
        </member>
        <member name="M:Azure.Core.OperationInternal.#ctor(Azure.Core.IOperation,Azure.Core.Pipeline.ClientDiagnostics,Azure.Response,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}},Azure.Core.DelayStrategy)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.Core.OperationInternal" /> class.
            </summary>
            <param name="operation">The long-running operation making use of this class. Passing "<c>this</c>" is expected.</param>
            <param name="clientDiagnostics">Used for diagnostic scope and exception creation. This is expected to be the instance created during the construction of your main client.</param>
            <param name="rawResponse">
                The initial value of <see cref="P:Azure.Core.OperationInternalBase.RawResponse" />. Usually, long-running operation objects can be instantiated in two ways:
                <list type="bullet">
                    <item>
                        When calling a client's "<c>Start&lt;OperationName&gt;</c>" method, a service call is made to start the operation, and an <see cref="T:Azure.Operation" /> instance is returned.
                        In this case, the response received from this service call can be passed here.
                    </item>
                    <item>
                        When a user instantiates an <see cref="T:Azure.Operation" /> directly using a public constructor, there's no previous service call. In this case, passing <c>null</c> is expected.
                    </item>
                </list>
            </param>
            <param name="operationTypeName">
                The type name of the long-running operation making use of this class. Used when creating diagnostic scopes. If left <c>null</c>, the type name will be inferred based on the
                parameter <paramref name="operation" />.
            </param>
            <param name="scopeAttributes">The attributes to use during diagnostic scope creation.</param>
            <param name="fallbackStrategy"> The delay strategy to use. Default is <see cref="T:Azure.Core.FixedDelayWithNoJitterStrategy" />.</param>
        </member>
        <member name="T:Azure.Core.IOperation">
            <summary>
            An interface used by <see cref="T:Azure.Core.OperationInternal" /> for making service calls and updating state. It's expected that
            your long-running operation classes implement this interface.
            </summary>
        </member>
        <member name="M:Azure.Core.IOperation.UpdateStateAsync(System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Calls the service and updates the state of the long-running operation. Properties directly handled by the
            <see cref="T:Azure.Core.OperationInternal" /> class, such as <see cref="P:Azure.Core.OperationInternalBase.RawResponse" />
            don't need to be updated. Operation-specific properties, such as "<c>CreateOn</c>" or "<c>LastModified</c>",
            must be manually updated by the operation implementing this method.
            <example>Usage example:
            <code>
              async ValueTask&lt;OperationState&gt; IOperation.UpdateStateAsync(bool async, CancellationToken cancellationToken)<br />
              {<br />
                Response&lt;R&gt; response = async ? &lt;async service call&gt; : &lt;sync service call&gt;;<br />
                if (&lt;operation succeeded&gt;) return OperationState.Success(response.GetRawResponse(), &lt;parse response&gt;);<br />
                if (&lt;operation failed&gt;) return OperationState.Failure(response.GetRawResponse());<br />
                return OperationState.Pending(response.GetRawResponse());<br />
              }
            </code>
            </example>
            </summary>
            <param name="async"><c>true</c> if the call should be executed asynchronously. Otherwise, <c>false</c>.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
            <returns>
            A structure indicating the current operation state. The <see cref="T:Azure.Core.OperationState" /> structure must be instantiated by one of
            its static methods:
            <list type="bullet">
              <item>Use <see cref="M:Azure.Core.OperationState.Success(Azure.Response)" /> when the operation has completed successfully.</item>
              <item>Use <see cref="M:Azure.Core.OperationState.Failure(Azure.Response,Azure.RequestFailedException)" /> when the operation has completed with failures.</item>
              <item>Use <see cref="M:Azure.Core.OperationState.Pending(Azure.Response)" /> when the operation has not completed yet.</item>
            </list>
            </returns>
        </member>
        <member name="T:Azure.Core.OperationState">
            <summary>
            A helper structure passed to <see cref="T:Azure.Core.OperationInternal" /> to indicate the current operation state. This structure must be
            instantiated by one of its static methods, depending on the operation state:
            <list type="bullet">
              <item>Use <see cref="M:Azure.Core.OperationState.Success(Azure.Response)" /> when the operation has completed successfully.</item>
              <item>Use <see cref="M:Azure.Core.OperationState.Failure(Azure.Response,Azure.RequestFailedException)" /> when the operation has completed with failures.</item>
              <item>Use <see cref="M:Azure.Core.OperationState.Pending(Azure.Response)" /> when the operation has not completed yet.</item>
            </list>
            </summary>
        </member>
        <member name="M:Azure.Core.OperationState.Success(Azure.Response)">
            <summary>
            Instantiates an <see cref="T:Azure.Core.OperationState" /> indicating the operation has completed successfully.
            </summary>
            <param name="rawResponse">The HTTP response obtained during the status update.</param>
            <returns>A new <see cref="T:Azure.Core.OperationState" /> instance.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown if <paramref name="rawResponse" /> is <c>null</c>.</exception>
        </member>
        <member name="M:Azure.Core.OperationState.Failure(Azure.Response,Azure.RequestFailedException)">
            <summary>
            Instantiates an <see cref="T:Azure.Core.OperationState" /> indicating the operation has completed with failures.
            </summary>
            <param name="rawResponse">The HTTP response obtained during the status update.</param>
            <param name="operationFailedException">
            The exception to throw from <c>UpdateStatus</c> because of the operation failure. If left <c>null</c>,
            a default exception is created based on the <paramref name="rawResponse" /> parameter.
            </param>
            <returns>A new <see cref="T:Azure.Core.OperationState" /> instance.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown if <paramref name="rawResponse" /> is <c>null</c>.</exception>
        </member>
        <member name="M:Azure.Core.OperationState.Pending(Azure.Response)">
            <summary>
            Instantiates an <see cref="T:Azure.Core.OperationState" /> indicating the operation has not completed yet.
            </summary>
            <param name="rawResponse">The HTTP response obtained during the status update.</param>
            <returns>A new <see cref="T:Azure.Core.OperationState" /> instance.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown if <paramref name="rawResponse" /> is <c>null</c>.</exception>
        </member>
        <member name="P:Azure.Core.OperationInternalBase.RawResponse">
            <summary>
            The last HTTP response received from the server. Its update already handled in calls to "<c>UpdateStatus</c>" and
            "<c>WaitForCompletionAsync</c>", but custom methods not supported by this class, such as "<c>CancelOperation</c>",
            must update it as well.
            <example>Usage example:
            <code>
              public Response GetRawResponse() =&gt; _operationInternal.RawResponse;
            </code>
            </example>
            </summary>
        </member>
        <member name="P:Azure.Core.OperationInternalBase.HasCompleted">
            <summary>
            Returns <c>true</c> if the long-running operation has completed.
            <example>Usage example:
            <code>
              public bool HasCompleted =&gt; _operationInternal.HasCompleted;
            </code>
            </example>
            </summary>
        </member>
        <member name="M:Azure.Core.OperationInternalBase.UpdateStatusAsync(System.Threading.CancellationToken)">
            <summary>
            Calls the server to get the latest status of the long-running operation, handling diagnostic scope creation for distributed
            tracing. The default scope name can be changed with the "<c>operationTypeName</c>" parameter passed to the constructor.
            <example>Usage example:
            <code>
              public async ValueTask&lt;Response&gt; UpdateStatusAsync(CancellationToken cancellationToken) =&gt;
                await _operationInternal.UpdateStatusAsync(cancellationToken).ConfigureAwait(false);
            </code>
            </example>
            </summary>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
            <returns>The HTTP response received from the server.</returns>
            <remarks>
            After a successful run, this method will update <see cref="P:Azure.Core.OperationInternalBase.RawResponse" /> and might update <see cref="P:Azure.Core.OperationInternalBase.HasCompleted" />.
            </remarks>
            <exception cref="T:Azure.RequestFailedException">Thrown if there's been any issues during the connection, or if the operation has completed with failures.</exception>
        </member>
        <member name="M:Azure.Core.OperationInternalBase.UpdateStatus(System.Threading.CancellationToken)">
            <summary>
            Calls the server to get the latest status of the long-running operation, handling diagnostic scope creation for distributed
            tracing. The default scope name can be changed with the "<c>operationTypeName</c>" parameter passed to the constructor.
            <example>Usage example:
            <code>
              public Response UpdateStatus(CancellationToken cancellationToken) =&gt; _operationInternal.UpdateStatus(cancellationToken);
            </code>
            </example>
            </summary>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
            <returns>The HTTP response received from the server.</returns>
            <remarks>
            After a successful run, this method will update <see cref="P:Azure.Core.OperationInternalBase.RawResponse" /> and might update <see cref="P:Azure.Core.OperationInternalBase.HasCompleted" />.
            </remarks>
            <exception cref="T:Azure.RequestFailedException">Thrown if there's been any issues during the connection, or if the operation has completed with failures.</exception>
        </member>
        <member name="M:Azure.Core.OperationInternalBase.WaitForCompletionResponseAsync(System.Threading.CancellationToken)">
            <summary>
            Periodically calls <see cref="M:Azure.Core.OperationInternalBase.UpdateStatusAsync(System.Threading.CancellationToken)" /> until the long-running operation completes.
            After each service call, a retry-after header may be returned to communicate that there is no reason to poll
            for status change until the specified time has passed.  The maximum of the retry after value and the fallback strategy
            is then used as the wait interval.
            Headers supported are: "Retry-After", "retry-after-ms", and "x-ms-retry-after-ms",
            <example>Usage example:
            <code>
              public async ValueTask&lt;Response&lt;T&gt;&gt; WaitForCompletionAsync(CancellationToken cancellationToken) =&gt;
                await _operationInternal.WaitForCompletionAsync(cancellationToken).ConfigureAwait(false);
            </code>
            </example>
            </summary>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
            <returns>The last HTTP response received from the server, including the final result of the long-running operation.</returns>
            <exception cref="T:Azure.RequestFailedException">Thrown if there's been any issues during the connection, or if the operation has completed with failures.</exception>
        </member>
        <member name="M:Azure.Core.OperationInternalBase.WaitForCompletionResponseAsync(System.TimeSpan,System.Threading.CancellationToken)">
            <summary>
            Periodically calls <see cref="M:Azure.Core.OperationInternalBase.UpdateStatusAsync(System.Threading.CancellationToken)" /> until the long-running operation completes. The interval
            between calls is defined by the parameter <paramref name="pollingInterval" />, but it can change based on information returned
            from the server. After each service call, a retry-after header may be returned to communicate that there is no reason to poll
            for status change until the specified time has passed. In this case, the maximum value between the <paramref name="pollingInterval" />
            parameter and the retry-after header is chosen as the wait interval. Headers supported are: "Retry-After", "retry-after-ms",
            and "x-ms-retry-after-ms".
            <example>Usage example:
            <code>
              public async ValueTask&lt;Response&lt;T&gt;&gt; WaitForCompletionAsync(TimeSpan pollingInterval, CancellationToken cancellationToken) =&gt;
                await _operationInternal.WaitForCompletionAsync(pollingInterval, cancellationToken).ConfigureAwait(false);
            </code>
            </example>
            </summary>
            <param name="pollingInterval">The interval between status requests to the server. <strong></strong></param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
            <returns>The last HTTP response received from the server, including the final result of the long-running operation.</returns>
            <exception cref="T:Azure.RequestFailedException">Thrown if there's been any issues during the connection, or if the operation has completed with failures.</exception>
        </member>
        <member name="M:Azure.Core.OperationInternalBase.WaitForCompletionResponse(System.Threading.CancellationToken)">
            <summary>
            Periodically calls <see cref="M:Azure.Core.OperationInternalBase.UpdateStatus(System.Threading.CancellationToken)" /> until the long-running operation completes.
            After each service call, a retry-after header may be returned to communicate that there is no reason to poll
            for status change until the specified time has passed.  The maximum of the retry after value and the fallback strategy
            is then used as the wait interval.
            Headers supported are: "Retry-After", "retry-after-ms", and "x-ms-retry-after-ms",
            and "x-ms-retry-after-ms".
            <example>Usage example:
            <code>
              public async ValueTask&lt;Response&lt;T&gt;&gt; WaitForCompletionAsync(TimeSpan pollingInterval, CancellationToken cancellationToken) =&gt;
                await _operationInternal.WaitForCompletionAsync(pollingInterval, cancellationToken).ConfigureAwait(false);
            </code>
            </example>
            </summary>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
            <returns>The last HTTP response received from the server, including the final result of the long-running operation.</returns>
            <exception cref="T:Azure.RequestFailedException">Thrown if there's been any issues during the connection, or if the operation has completed with failures.</exception>
        </member>
        <member name="M:Azure.Core.OperationInternalBase.WaitForCompletionResponse(System.TimeSpan,System.Threading.CancellationToken)">
            <summary>
            Periodically calls <see cref="M:Azure.Core.OperationInternalBase.UpdateStatus(System.Threading.CancellationToken)" /> until the long-running operation completes. The interval
            between calls is defined by the parameter <paramref name="pollingInterval" />, but it can change based on information returned
            from the server. After each service call, a retry-after header may be returned to communicate that there is no reason to poll
            for status change until the specified time has passed. In this case, the maximum value between the <paramref name="pollingInterval" />
            parameter and the retry-after header is chosen as the wait interval. Headers supported are: "Retry-After", "retry-after-ms",
            and "x-ms-retry-after-ms".
            <example>Usage example:
            <code>
              public async ValueTask&lt;Response&lt;T&gt;&gt; WaitForCompletionAsync(TimeSpan pollingInterval, CancellationToken cancellationToken) =&gt;
                await _operationInternal.WaitForCompletionAsync(pollingInterval, cancellationToken).ConfigureAwait(false);
            </code>
            </example>
            </summary>
            <param name="pollingInterval">The interval between status requests to the server.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
            <returns>The last HTTP response received from the server, including the final result of the long-running operation.</returns>
            <exception cref="T:Azure.RequestFailedException">Thrown if there's been any issues during the connection, or if the operation has completed with failures.</exception>
        </member>
        <member name="T:Azure.Core.OperationInternal`1">
            <summary>
            A helper class used to build long-running operation instances. In order to use this helper:
            <list type="number">
              <item>Make sure your LRO implements the <see cref="T:Azure.Core.IOperation`1" /> interface.</item>
              <item>Add a private <see cref="T:Azure.Core.OperationInternal`1" /> field to your LRO, and instantiate it during construction.</item>
              <item>Delegate method calls to the <see cref="T:Azure.Core.OperationInternal`1" /> implementations.</item>
            </list>
            Supported members:
            <list type="bullet">
              <item>
                <description><see cref="P:Azure.Core.OperationInternal`1.HasValue" /></description>
              </item>
              <item>
                <description><see cref="P:Azure.Core.OperationInternalBase.HasCompleted" /></description>
              </item>
              <item>
                <description><see cref="P:Azure.Core.OperationInternal`1.Value" /></description>
              </item>
              <item>
                <description><see cref="P:Azure.Core.OperationInternalBase.RawResponse" />, used for <see cref="M:Azure.Operation.GetRawResponse" /></description>
              </item>
              <item>
                <description><see cref="M:Azure.Core.OperationInternalBase.UpdateStatus(System.Threading.CancellationToken)" /></description>
              </item>
              <item>
                <description><see cref="M:Azure.Core.OperationInternalBase.UpdateStatusAsync(System.Threading.CancellationToken)" /></description>
              </item>
              <item>
                <description><see cref="M:Azure.Core.OperationInternal`1.WaitForCompletionAsync(System.Threading.CancellationToken)" /></description>
              </item>
              <item>
                <description><see cref="M:Azure.Core.OperationInternal`1.WaitForCompletionAsync(System.TimeSpan,System.Threading.CancellationToken)" /></description>
              </item>
            </list>
            </summary>
            <typeparam name="T">The final result of the long-running operation. Must match the type used in <see cref="T:Azure.Operation`1" />.</typeparam>
        </member>
        <member name="M:Azure.Core.OperationInternal`1.Succeeded(Azure.Response,`0)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.Core.OperationInternal" /> class in a final successful state.
            </summary>
            <param name="rawResponse">The final value of <see cref="P:Azure.Core.OperationInternalBase.RawResponse" />.</param>
            <param name="value">The final result of the long-running operation.</param>
        </member>
        <member name="M:Azure.Core.OperationInternal`1.Failed(Azure.Response,Azure.RequestFailedException)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.Core.OperationInternal" /> class in a final failed state.
            </summary>
            <param name="rawResponse">The final value of <see cref="P:Azure.Core.OperationInternalBase.RawResponse" />.</param>
            <param name="operationFailedException">The exception that will be thrown by <c>UpdateStatusAsync</c>.</param>
        </member>
        <member name="M:Azure.Core.OperationInternal`1.#ctor(Azure.Core.IOperation{`0},Azure.Core.Pipeline.ClientDiagnostics,Azure.Response,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}},Azure.Core.DelayStrategy)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.Core.OperationInternal`1" /> class.
            </summary>
            <param name="operation">The long-running operation making use of this class. Passing "<c>this</c>" is expected.</param>
            <param name="clientDiagnostics">Used for diagnostic scope and exception creation. This is expected to be the instance created during the construction of your main client.</param>
            <param name="rawResponse">
                The initial value of <see cref="P:Azure.Core.OperationInternalBase.RawResponse" />. Usually, long-running operation objects can be instantiated in two ways:
                <list type="bullet">
                    <item>
                        When calling a client's "<c>Start&lt;OperationName&gt;</c>" method, a service call is made to start the operation, and an <see cref="T:Azure.Operation`1" /> instance is returned.
                        In this case, the response received from this service call can be passed here.
                    </item>
                    <item>
                        When a user instantiates an <see cref="T:Azure.Operation`1" /> directly using a public constructor, there's no previous service call. In this case, passing <c>null</c> is expected.
                    </item>
                </list>
            </param>
            <param name="operationTypeName">
                The type name of the long-running operation making use of this class. Used when creating diagnostic scopes. If left <c>null</c>, the type name will be inferred based on the
                parameter <paramref name="operation" />.
            </param>
            <param name="scopeAttributes">The attributes to use during diagnostic scope creation.</param>
            <param name="fallbackStrategy">The delay strategy when Retry-After header is not present.  When it is present, the longer of the two delays will be used.
                Default is <see cref="T:Azure.Core.FixedDelayWithNoJitterStrategy" />.</param>
        </member>
        <member name="P:Azure.Core.OperationInternal`1.HasValue">
            <summary>
            Returns <c>true</c> if the long-running operation completed successfully and has produced a final result.
            <example>Usage example:
            <code>
              public bool HasValue =&gt; _operationInternal.HasValue;
            </code>
            </example>
            </summary>
        </member>
        <member name="P:Azure.Core.OperationInternal`1.Value">
            <summary>
            The final result of the long-running operation.
            <example>Usage example:
            <code>
              public T Value =&gt; _operationInternal.Value;
            </code>
            </example>
            </summary>
            <exception cref="T:System.InvalidOperationException">Thrown when the operation has not completed yet.</exception>
            <exception cref="T:Azure.RequestFailedException">Thrown when the operation has completed with failures.</exception>
        </member>
        <member name="M:Azure.Core.OperationInternal`1.WaitForCompletionAsync(System.Threading.CancellationToken)">
            <summary>
            Periodically calls <see cref="M:Azure.Core.OperationInternalBase.UpdateStatusAsync(System.Threading.CancellationToken)" /> until the long-running operation completes.
            After each service call, a retry-after header may be returned to communicate that there is no reason to poll
            for status change until the specified time has passed.
            Headers supported are: "Retry-After", "retry-after-ms", and "x-ms-retry-after-ms",
            <example>Usage example:
            <code>
              public async ValueTask&lt;Response&lt;T&gt;&gt; WaitForCompletionAsync(CancellationToken cancellationToken) =&gt;
                await _operationInternal.WaitForCompletionAsync(cancellationToken).ConfigureAwait(false);
            </code>
            </example>
            </summary>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
            <returns>The last HTTP response received from the server, including the final result of the long-running operation.</returns>
            <exception cref="T:Azure.RequestFailedException">Thrown if there's been any issues during the connection, or if the operation has completed with failures.</exception>
        </member>
        <member name="M:Azure.Core.OperationInternal`1.WaitForCompletionAsync(System.TimeSpan,System.Threading.CancellationToken)">
            <summary>
            Periodically calls <see cref="M:Azure.Core.OperationInternalBase.UpdateStatusAsync(System.Threading.CancellationToken)" /> until the long-running operation completes. The interval
            between calls is defined by the parameter <paramref name="pollingInterval" />, but it can change based on information returned
            from the server. After each service call, a retry-after header may be returned to communicate that there is no reason to poll
            for status change until the specified time has passed. In this case, the maximum value between the <paramref name="pollingInterval" />
            parameter and the retry-after header is chosen as the wait interval. Headers supported are: "Retry-After", "retry-after-ms",
            and "x-ms-retry-after-ms".
            <example>Usage example:
            <code>
              public async ValueTask&lt;Response&lt;T&gt;&gt; WaitForCompletionAsync(TimeSpan pollingInterval, CancellationToken cancellationToken) =&gt;
                await _operationInternal.WaitForCompletionAsync(pollingInterval, cancellationToken).ConfigureAwait(false);
            </code>
            </example>
            </summary>
            <param name="pollingInterval">The interval between status requests to the server.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
            <returns>The last HTTP response received from the server, including the final result of the long-running operation.</returns>
            <exception cref="T:Azure.RequestFailedException">Thrown if there's been any issues during the connection, or if the operation has completed with failures.</exception>
        </member>
        <member name="M:Azure.Core.OperationInternal`1.WaitForCompletion(System.Threading.CancellationToken)">
            <summary>
            Periodically calls <see cref="M:Azure.Core.OperationInternalBase.UpdateStatus(System.Threading.CancellationToken)" /> until the long-running operation completes.
            After each service call, a retry-after header may be returned to communicate that there is no reason to poll
            for status change until the specified time has passed.
            Headers supported are: "Retry-After", "retry-after-ms", and "x-ms-retry-after-ms",
            <example>Usage example:
            <code>
              public async ValueTask&lt;Response&lt;T&gt;&gt; WaitForCompletionAsync(CancellationToken cancellationToken) =&gt;
                await _operationInternal.WaitForCompletionAsync(cancellationToken).ConfigureAwait(false);
            </code>
            </example>
            </summary>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
            <returns>The last HTTP response received from the server, including the final result of the long-running operation.</returns>
            <exception cref="T:Azure.RequestFailedException">Thrown if there's been any issues during the connection, or if the operation has completed with failures.</exception>
        </member>
        <member name="M:Azure.Core.OperationInternal`1.WaitForCompletion(System.TimeSpan,System.Threading.CancellationToken)">
            <summary>
            Periodically calls <see cref="M:Azure.Core.OperationInternalBase.UpdateStatus(System.Threading.CancellationToken)" /> until the long-running operation completes. The interval
            between calls is defined by the <see cref="T:Azure.Core.FixedDelayWithNoJitterStrategy" />, which takes into account any retry-after header that is returned
            from the server.
            <example>Usage example:
            <code>
              public async ValueTask&lt;Response&lt;T&gt;&gt; WaitForCompletionAsync(CancellationToken cancellationToken) =&gt;
                await _operationInternal.WaitForCompletionAsync(cancellationToken).ConfigureAwait(false);
            </code>
            </example>
            </summary>
            <param name="pollingInterval">The interval between status requests to the server.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
            <returns>The last HTTP response received from the server, including the final result of the long-running operation.</returns>
            <exception cref="T:Azure.RequestFailedException">Thrown if there's been any issues during the connection, or if the operation has completed with failures.</exception>
        </member>
        <member name="T:Azure.Core.IOperation`1">
            <summary>
            An interface used by <see cref="T:Azure.Core.OperationInternal`1" /> for making service calls and updating state. It's expected that
            your long-running operation classes implement this interface.
            </summary>
            <typeparam name="T">The final result of the long-running operation. Must match the type used in <see cref="T:Azure.Operation`1" />.</typeparam>
        </member>
        <member name="M:Azure.Core.IOperation`1.UpdateStateAsync(System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Calls the service and updates the state of the long-running operation. Properties directly handled by the
            <see cref="T:Azure.Core.OperationInternal`1" /> class, such as <see cref="P:Azure.Core.OperationInternalBase.RawResponse" /> or
            <see cref="P:Azure.Core.OperationInternal`1.Value" />, don't need to be updated. Operation-specific properties, such
            as "<c>CreateOn</c>" or "<c>LastModified</c>", must be manually updated by the operation implementing this
            method.
            <example>Usage example:
            <code>
              async ValueTask&lt;OperationState&lt;T&gt;&gt; IOperation&lt;T&gt;.UpdateStateAsync(bool async, CancellationToken cancellationToken)<br />
              {<br />
                Response&lt;R&gt; response = async ? &lt;async service call&gt; : &lt;sync service call&gt;;<br />
                if (&lt;operation succeeded&gt;) return OperationState&lt;T&gt;.Success(response.GetRawResponse(), &lt;parse response&gt;);<br />
                if (&lt;operation failed&gt;) return OperationState&lt;T&gt;.Failure(response.GetRawResponse());<br />
                return OperationState&lt;T&gt;.Pending(response.GetRawResponse());<br />
              }
            </code>
            </example>
            </summary>
            <param name="async"><c>true</c> if the call should be executed asynchronously. Otherwise, <c>false</c>.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
            <returns>
            A structure indicating the current operation state. The <see cref="T:Azure.Core.OperationState`1" /> structure must be instantiated by one of
            its static methods:
            <list type="bullet">
              <item>Use <see cref="M:Azure.Core.OperationState`1.Success(Azure.Response,`0)" /> when the operation has completed successfully.</item>
              <item>Use <see cref="M:Azure.Core.OperationState`1.Failure(Azure.Response,Azure.RequestFailedException)" /> when the operation has completed with failures.</item>
              <item>Use <see cref="M:Azure.Core.OperationState`1.Pending(Azure.Response)" /> when the operation has not completed yet.</item>
            </list>
            </returns>
        </member>
        <member name="T:Azure.Core.OperationState`1">
            <summary>
            A helper structure passed to <see cref="T:Azure.Core.OperationInternal`1" /> to indicate the current operation state. This structure must be
            instantiated by one of its static methods, depending on the operation state:
            <list type="bullet">
              <item>Use <see cref="M:Azure.Core.OperationState`1.Success(Azure.Response,`0)" /> when the operation has completed successfully.</item>
              <item>Use <see cref="M:Azure.Core.OperationState`1.Failure(Azure.Response,Azure.RequestFailedException)" /> when the operation has completed with failures.</item>
              <item>Use <see cref="M:Azure.Core.OperationState`1.Pending(Azure.Response)" /> when the operation has not completed yet.</item>
            </list>
            </summary>
            <typeparam name="T">The final result of the long-running operation. Must match the type used in <see cref="T:Azure.Operation`1" />.</typeparam>
        </member>
        <member name="M:Azure.Core.OperationState`1.Success(Azure.Response,`0)">
            <summary>
            Instantiates an <see cref="T:Azure.Core.OperationState`1" /> indicating the operation has completed successfully.
            </summary>
            <param name="rawResponse">The HTTP response obtained during the status update.</param>
            <param name="value">The final result of the long-running operation.</param>
            <returns>A new <see cref="T:Azure.Core.OperationState`1" /> instance.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown if <paramref name="rawResponse" /> or <paramref name="value" /> is <c>null</c>.</exception>
        </member>
        <member name="M:Azure.Core.OperationState`1.Failure(Azure.Response,Azure.RequestFailedException)">
            <summary>
            Instantiates an <see cref="T:Azure.Core.OperationState`1" /> indicating the operation has completed with failures.
            </summary>
            <param name="rawResponse">The HTTP response obtained during the status update.</param>
            <param name="operationFailedException">
            The exception to throw from <c>UpdateStatus</c> because of the operation failure. The same exception will be thrown when
            <see cref="P:Azure.Core.OperationInternal`1.Value" /> is called. If left <c>null</c>, a default exception is created based on the
            <paramref name="rawResponse" /> parameter.
            </param>
            <returns>A new <see cref="T:Azure.Core.OperationState`1" /> instance.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown if <paramref name="rawResponse" /> is <c>null</c>.</exception>
        </member>
        <member name="M:Azure.Core.OperationState`1.Pending(Azure.Response)">
            <summary>
            Instantiates an <see cref="T:Azure.Core.OperationState`1" /> indicating the operation has not completed yet.
            </summary>
            <param name="rawResponse">The HTTP response obtained during the status update.</param>
            <returns>A new <see cref="T:Azure.Core.OperationState`1" /> instance.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown if <paramref name="rawResponse" /> is <c>null</c>.</exception>
        </member>
        <member name="T:Azure.Core.OperationPoller">
            <summary>
            Implementation of LRO polling logic.
            </summary>
        </member>
        <member name="P:Azure.Core.ProtocolOperation`1.Id">
            <summary>
            Gets an ID representing the operation that can be used to poll for
            the status of the long-running operation.
            There are cases that operation id is not available, we return "NOT_SET" for unavailable operation id.
            </summary>
        </member>
        <member name="P:Azure.Core.ProtocolOperation`1.Value">
            <summary>
            Final result of the long-running operation.
            </summary><remarks>
            This property can be accessed only after the operation completes successfully (HasValue is true).
            </remarks>
        </member>
        <member name="P:Azure.Core.ProtocolOperation`1.HasCompleted">
            <summary>
            Returns true if the long-running operation completed.
            </summary>
        </member>
        <member name="P:Azure.Core.ProtocolOperation`1.HasValue">
            <summary>
            Returns true if the long-running operation completed successfully and has produced final result (accessible by Value property).
            </summary>
        </member>
        <member name="M:Azure.Core.ProtocolOperation`1.GetRawResponse">
            <summary>
            The last HTTP response received from the server.
            </summary><remarks>
            The last response returned from the server during the lifecycle of this instance.
            An instance of <see cref="T:Azure.Operation`1" /> sends requests to a server in UpdateStatusAsync, UpdateStatus, and other methods.
            Responses from these requests can be accessed using GetRawResponse.
            </remarks>
        </member>
        <member name="M:Azure.Core.ProtocolOperation`1.UpdateStatus(System.Threading.CancellationToken)">
            <summary>
            Calls the server to get updated status of the long-running operation.
            </summary><param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> used for the service call.</param><returns>The HTTP response received from the server.</returns><remarks>
            This operation will update the value returned from GetRawResponse and might update HasCompleted.
            </remarks>
        </member>
        <member name="M:Azure.Core.ProtocolOperation`1.UpdateStatusAsync(System.Threading.CancellationToken)">
            <summary>
            Calls the server to get updated status of the long-running operation.
            </summary><param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> used for the service call.</param><returns>The HTTP response received from the server.</returns><remarks>
            This operation will update the value returned from GetRawResponse and might update HasCompleted.
            </remarks>
        </member>
        <member name="M:Azure.Core.ProtocolOperation`1.WaitForCompletionAsync(System.Threading.CancellationToken)">
            <summary>
            Periodically calls the server till the long-running operation completes.
            </summary><param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> used for the periodical service calls.</param><returns>The last HTTP response received from the server.</returns><remarks>
            This method will periodically call UpdateStatusAsync till HasCompleted is true, then return the final result of the operation.
            </remarks>
        </member>
        <member name="M:Azure.Core.ProtocolOperation`1.WaitForCompletionAsync(System.TimeSpan,System.Threading.CancellationToken)">
            <summary>
            Periodically calls the server till the long-running operation completes.
            </summary><param name="pollingInterval">
            The interval between status requests to the server.
            The interval can change based on information returned from the server.
            For example, the server might communicate to the client that there is not reason to poll for status change sooner than some time.
            </param><param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> used for the periodical service calls.</param><returns>The last HTTP response received from the server.</returns><remarks>
            This method will periodically call UpdateStatusAsync till HasCompleted is true, then return the final result of the operation.
            </remarks>
        </member>
        <member name="T:Azure.Core.SequentialDelayStrategy">
            <summary>
            A delay strategy that uses a fixed sequence of delays with no jitter applied. This is used by management LROs.
            </summary>
        </member>
        <member name="T:Microsoft.Extensions.Azure.TextTranslationClientBuilderExtensions">
            <summary> Extension methods to add <see cref="T:Azure.AI.Translation.Text.TextTranslationClient" /> to client builder. </summary>
        </member>
        <member name="M:Microsoft.Extensions.Azure.TextTranslationClientBuilderExtensions.AddTextTranslationClient``1(``0,Azure.AzureKeyCredential)">
            <summary> Registers a <see cref="T:Azure.AI.Translation.Text.TextTranslationClient" /> instance. </summary>
            <param name="builder"> The builder to register with. </param>
            <param name="credential">Azure Credentials</param>
        </member>
        <member name="M:Microsoft.Extensions.Azure.TextTranslationClientBuilderExtensions.AddTextTranslationClient``1(``0,Azure.AzureKeyCredential,System.String)">
            <summary> Registers a <see cref="T:Azure.AI.Translation.Text.TextTranslationClient" /> instance. </summary>
            <param name="builder"> The builder to register with. </param>
            <param name="credential">Azure Credentials</param>
            <param name="region">Region of Azure Resource</param>
        </member>
        <member name="M:Microsoft.Extensions.Azure.TextTranslationClientBuilderExtensions.AddTextTranslationClient``1(``0,Azure.AzureKeyCredential,System.Uri)">
            <summary> Registers a <see cref="T:Azure.AI.Translation.Text.TextTranslationClient" /> instance. </summary>
            <param name="builder"> The builder to register with. </param>
            <param name="credential">Azure Credentials</param>
            <param name="endpoint">Endpoint of the translation service</param>
        </member>
        <member name="M:Microsoft.Extensions.Azure.TextTranslationClientBuilderExtensions.AddTextTranslationClient``1(``0,Azure.AzureKeyCredential,System.Uri,System.String)">
            <summary> Registers a <see cref="T:Azure.AI.Translation.Text.TextTranslationClient" /> instance. </summary>
            <param name="builder"> The builder to register with. </param>
            <param name="credential">Azure Credentials</param>
            <param name="endpoint">Endpoint of the translation service</param>
            <param name="region">Region of Azure Resource</param>
        </member>
        <member name="M:Microsoft.Extensions.Azure.TextTranslationClientBuilderExtensions.AddTextTranslationClient``1(``0,Azure.Core.TokenCredential)">
            <summary> Registers a <see cref="T:Azure.AI.Translation.Text.TextTranslationClient" /> instance. </summary>
            <param name="builder"> The builder to register with. </param>
            <param name="credential">Cognitive Services Token</param>
        </member>
        <member name="M:Microsoft.Extensions.Azure.TextTranslationClientBuilderExtensions.AddTextTranslationClient``1(``0,Azure.Core.TokenCredential,System.Uri)">
            <summary> Registers a <see cref="T:Azure.AI.Translation.Text.TextTranslationClient" /> instance. </summary>
            <param name="builder"> The builder to register with. </param>
            <param name="credential">Cognitive Services Token</param>
            <param name="endpoint">Endpoint of the translation service</param>
        </member>
        <member name="M:Microsoft.Extensions.Azure.TextTranslationClientBuilderExtensions.AddTextTranslationClient``2(``0,``1)">
            <summary> Registers a <see cref="T:Azure.AI.Translation.Text.TextTranslationClient" /> instance. </summary>
            <param name="builder"> The builder to register with. </param>
            <param name="configuration"> The configuration values. </param>
        </member>
        <member name="T:System.Diagnostics.CodeAnalysis.RequiresDynamicCodeAttribute">
            <summary>
            Indicates that the specified method requires the ability to generate new code at runtime,
            for example through <see cref="N:System.Reflection" />.
            </summary>
            <remarks>
            This allows tools to understand which methods are unsafe to call when compiling ahead of time.
            </remarks>
        </member>
        <member name="M:System.Diagnostics.CodeAnalysis.RequiresDynamicCodeAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:System.Diagnostics.CodeAnalysis.RequiresDynamicCodeAttribute" /> class
            with the specified message.
            </summary>
            <param name="message">
            A message that contains information about the usage of dynamic code.
            </param>
        </member>
        <member name="P:System.Diagnostics.CodeAnalysis.RequiresDynamicCodeAttribute.Message">
            <summary>
            Gets a message that contains information about the usage of dynamic code.
            </summary>
        </member>
        <member name="P:System.Diagnostics.CodeAnalysis.RequiresDynamicCodeAttribute.Url">
            <summary>
            Gets or sets an optional URL that contains more information about the method,
            why it requires dynamic code, and what options a consumer has to deal with it.
            </summary>
        </member>
        <member name="T:System.Diagnostics.CodeAnalysis.RequiresUnreferencedCodeAttribute">
            <summary>
            Indicates that the specified method requires dynamic access to code that is not referenced
            statically, for example through <see cref="N:System.Reflection" />.
            </summary>
            <remarks>
            This allows tools to understand which methods are unsafe to call when removing unreferenced
            code from an application.
            </remarks>
        </member>
        <member name="M:System.Diagnostics.CodeAnalysis.RequiresUnreferencedCodeAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:System.Diagnostics.CodeAnalysis.RequiresUnreferencedCodeAttribute" /> class
            with the specified message.
            </summary>
            <param name="message">
            A message that contains information about the usage of unreferenced code.
            </param>
        </member>
        <member name="P:System.Diagnostics.CodeAnalysis.RequiresUnreferencedCodeAttribute.Message">
            <summary>
            Gets a message that contains information about the usage of unreferenced code.
            </summary>
        </member>
        <member name="P:System.Diagnostics.CodeAnalysis.RequiresUnreferencedCodeAttribute.Url">
            <summary>
            Gets or sets an optional URL that contains more information about the method,
            why it requires unreferenced code, and what options a consumer has to deal with it.
            </summary>
        </member>
        <member name="T:System.Diagnostics.CodeAnalysis.UnconditionalSuppressMessageAttribute">
            <summary>
            Suppresses reporting of a specific rule violation, allowing multiple suppressions on a
            single code artifact.
            </summary>
            <remarks>
            <see cref="T:System.Diagnostics.CodeAnalysis.UnconditionalSuppressMessageAttribute" /> is different than
            <see cref="T:System.Diagnostics.CodeAnalysis.SuppressMessageAttribute" /> in that it doesn't have a
            <see cref="T:System.Diagnostics.ConditionalAttribute" />. So it is always preserved in the compiled assembly.
            </remarks>
        </member>
        <member name="M:System.Diagnostics.CodeAnalysis.UnconditionalSuppressMessageAttribute.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:System.Diagnostics.CodeAnalysis.UnconditionalSuppressMessageAttribute" />
            class, specifying the category of the tool and the identifier for an analysis rule.
            </summary>
            <param name="category">The category for the attribute.</param>
            <param name="checkId">The identifier of the analysis rule the attribute applies to.</param>
        </member>
        <member name="P:System.Diagnostics.CodeAnalysis.UnconditionalSuppressMessageAttribute.Category">
            <summary>
            Gets the category identifying the classification of the attribute.
            </summary>
            <remarks>
            The <see cref="P:System.Diagnostics.CodeAnalysis.UnconditionalSuppressMessageAttribute.Category" /> property describes the tool or tool analysis category
            for which a message suppression attribute applies.
            </remarks>
        </member>
        <member name="P:System.Diagnostics.CodeAnalysis.UnconditionalSuppressMessageAttribute.CheckId">
            <summary>
            Gets the identifier of the analysis tool rule to be suppressed.
            </summary>
            <remarks>
            Concatenated together, the <see cref="P:System.Diagnostics.CodeAnalysis.UnconditionalSuppressMessageAttribute.Category" /> and <see cref="P:System.Diagnostics.CodeAnalysis.UnconditionalSuppressMessageAttribute.CheckId" />
            properties form a unique check identifier.
            </remarks>
        </member>
        <member name="P:System.Diagnostics.CodeAnalysis.UnconditionalSuppressMessageAttribute.Scope">
            <summary>
            Gets or sets the scope of the code that is relevant for the attribute.
            </summary>
            <remarks>
            The Scope property is an optional argument that specifies the metadata scope for which
            the attribute is relevant.
            </remarks>
        </member>
        <member name="P:System.Diagnostics.CodeAnalysis.UnconditionalSuppressMessageAttribute.Target">
            <summary>
            Gets or sets a fully qualified path that represents the target of the attribute.
            </summary>
            <remarks>
            The <see cref="P:System.Diagnostics.CodeAnalysis.UnconditionalSuppressMessageAttribute.Target" /> property is an optional argument identifying the analysis target
            of the attribute. An example value is "System.IO.Stream.ctor():System.Void".
            Because it is fully qualified, it can be long, particularly for targets such as parameters.
            The analysis tool user interface should be capable of automatically formatting the parameter.
            </remarks>
        </member>
        <member name="P:System.Diagnostics.CodeAnalysis.UnconditionalSuppressMessageAttribute.MessageId">
            <summary>
            Gets or sets an optional argument expanding on exclusion criteria.
            </summary>
            <remarks>
            The <see cref="P:System.Diagnostics.CodeAnalysis.UnconditionalSuppressMessageAttribute.MessageId" /> property is an optional argument that specifies additional
            exclusion where the literal metadata target is not sufficiently precise. For example,
            the <see cref="T:System.Diagnostics.CodeAnalysis.UnconditionalSuppressMessageAttribute" /> cannot be applied within a method,
            and it may be desirable to suppress a violation against a statement in the method that will
            give a rule violation, but not against all statements in the method.
            </remarks>
        </member>
        <member name="P:System.Diagnostics.CodeAnalysis.UnconditionalSuppressMessageAttribute.Justification">
            <summary>
            Gets or sets the justification for suppressing the code analysis message.
            </summary>
        </member>
        <member name="T:System.Diagnostics.CodeAnalysis.DynamicDependencyAttribute">
            <summary>
            States a dependency that one member has on another.
            </summary>
            <remarks>
            This can be used to inform tooling of a dependency that is otherwise not evident purely from
            metadata and IL, for example a member relied on via reflection.
            </remarks>
        </member>
        <member name="M:System.Diagnostics.CodeAnalysis.DynamicDependencyAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:System.Diagnostics.CodeAnalysis.DynamicDependencyAttribute" /> class
            with the specified signature of a member on the same type as the consumer.
            </summary>
            <param name="memberSignature">The signature of the member depended on.</param>
        </member>
        <member name="M:System.Diagnostics.CodeAnalysis.DynamicDependencyAttribute.#ctor(System.String,System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:System.Diagnostics.CodeAnalysis.DynamicDependencyAttribute" /> class
            with the specified signature of a member on a <see cref="T:System.Type" />.
            </summary>
            <param name="memberSignature">The signature of the member depended on.</param>
            <param name="type">The <see cref="T:System.Type" /> containing <paramref name="memberSignature" />.</param>
        </member>
        <member name="M:System.Diagnostics.CodeAnalysis.DynamicDependencyAttribute.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:System.Diagnostics.CodeAnalysis.DynamicDependencyAttribute" /> class
            with the specified signature of a member on a type in an assembly.
            </summary>
            <param name="memberSignature">The signature of the member depended on.</param>
            <param name="typeName">The full name of the type containing the specified member.</param>
            <param name="assemblyName">The assembly name of the type containing the specified member.</param>
        </member>
        <member name="M:System.Diagnostics.CodeAnalysis.DynamicDependencyAttribute.#ctor(System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes,System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:System.Diagnostics.CodeAnalysis.DynamicDependencyAttribute" /> class
            with the specified types of members on a <see cref="T:System.Type" />.
            </summary>
            <param name="memberTypes">The types of members depended on.</param>
            <param name="type">The <see cref="T:System.Type" /> containing the specified members.</param>
        </member>
        <member name="M:System.Diagnostics.CodeAnalysis.DynamicDependencyAttribute.#ctor(System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:System.Diagnostics.CodeAnalysis.DynamicDependencyAttribute" /> class
            with the specified types of members on a type in an assembly.
            </summary>
            <param name="memberTypes">The types of members depended on.</param>
            <param name="typeName">The full name of the type containing the specified members.</param>
            <param name="assemblyName">The assembly name of the type containing the specified members.</param>
        </member>
        <member name="P:System.Diagnostics.CodeAnalysis.DynamicDependencyAttribute.MemberSignature">
            <summary>
            Gets the signature of the member depended on.
            </summary>
            <remarks>
            Either <see cref="P:System.Diagnostics.CodeAnalysis.DynamicDependencyAttribute.MemberSignature" /> must be a valid string or <see cref="P:System.Diagnostics.CodeAnalysis.DynamicDependencyAttribute.MemberTypes" />
            must not equal <see cref="F:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.None" />, but not both.
            </remarks>
        </member>
        <member name="P:System.Diagnostics.CodeAnalysis.DynamicDependencyAttribute.MemberTypes">
            <summary>
            Gets the <see cref="T:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes" /> which specifies the type
            of members depended on.
            </summary>
            <remarks>
            Either <see cref="P:System.Diagnostics.CodeAnalysis.DynamicDependencyAttribute.MemberSignature" /> must be a valid string or <see cref="P:System.Diagnostics.CodeAnalysis.DynamicDependencyAttribute.MemberTypes" />
            must not equal <see cref="F:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.None" />, but not both.
            </remarks>
        </member>
        <member name="P:System.Diagnostics.CodeAnalysis.DynamicDependencyAttribute.Type">
            <summary>
            Gets the <see cref="T:System.Type" /> containing the specified member.
            </summary>
            <remarks>
            If neither <see cref="P:System.Diagnostics.CodeAnalysis.DynamicDependencyAttribute.Type" /> nor <see cref="P:System.Diagnostics.CodeAnalysis.DynamicDependencyAttribute.TypeName" /> are specified,
            the type of the consumer is assumed.
            </remarks>
        </member>
        <member name="P:System.Diagnostics.CodeAnalysis.DynamicDependencyAttribute.TypeName">
            <summary>
            Gets the full name of the type containing the specified member.
            </summary>
            <remarks>
            If neither <see cref="P:System.Diagnostics.CodeAnalysis.DynamicDependencyAttribute.Type" /> nor <see cref="P:System.Diagnostics.CodeAnalysis.DynamicDependencyAttribute.TypeName" /> are specified,
            the type of the consumer is assumed.
            </remarks>
        </member>
        <member name="P:System.Diagnostics.CodeAnalysis.DynamicDependencyAttribute.AssemblyName">
            <summary>
            Gets the assembly name of the specified type.
            </summary>
            <remarks>
            <see cref="P:System.Diagnostics.CodeAnalysis.DynamicDependencyAttribute.AssemblyName" /> is only valid when <see cref="P:System.Diagnostics.CodeAnalysis.DynamicDependencyAttribute.TypeName" /> is specified.
            </remarks>
        </member>
        <member name="P:System.Diagnostics.CodeAnalysis.DynamicDependencyAttribute.Condition">
            <summary>
            Gets or sets the condition in which the dependency is applicable, e.g. "DEBUG".
            </summary>
        </member>
        <member name="T:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMembersAttribute">
             <summary>
             Indicates that certain members on a specified <see cref="T:System.Type" /> are accessed dynamically,
             for example through <see cref="N:System.Reflection" />.
             </summary>
             <remarks>
             This allows tools to understand which members are being accessed during the execution
             of a program.
            
             This attribute is valid on members whose type is <see cref="T:System.Type" /> or <see cref="T:System.String" />.
            
             When this attribute is applied to a location of type <see cref="T:System.String" />, the assumption is
             that the string represents a fully qualified type name.
            
             When this attribute is applied to a class, interface, or struct, the members specified
             can be accessed dynamically on <see cref="T:System.Type" /> instances returned from calling
             <see cref="M:System.Object.GetType" /> on instances of that class, interface, or struct.
            
             If the attribute is applied to a method it's treated as a special case and it implies
             the attribute should be applied to the "this" parameter of the method. As such the attribute
             should only be used on instance methods of types assignable to System.Type (or string, but no methods
             will use it there).
             </remarks>
        </member>
        <member name="M:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMembersAttribute.#ctor(System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes)">
            <summary>
            Initializes a new instance of the <see cref="T:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMembersAttribute" /> class
            with the specified member types.
            </summary>
            <param name="memberTypes">The types of members dynamically accessed.</param>
        </member>
        <member name="P:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMembersAttribute.MemberTypes">
            <summary>
            Gets the <see cref="T:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes" /> which specifies the type
            of members dynamically accessed.
            </summary>
        </member>
        <member name="T:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes">
             <summary>
             Specifies the types of members that are dynamically accessed.
            
             This enumeration has a <see cref="T:System.FlagsAttribute" /> attribute that allows a
             bitwise combination of its member values.
             </summary>
        </member>
        <member name="F:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.None">
            <summary>
            Specifies no members.
            </summary>
        </member>
        <member name="F:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.PublicParameterlessConstructor">
            <summary>
            Specifies the default, parameterless public constructor.
            </summary>
        </member>
        <member name="F:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.PublicConstructors">
            <summary>
            Specifies all public constructors.
            </summary>
        </member>
        <member name="F:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.NonPublicConstructors">
            <summary>
            Specifies all non-public constructors.
            </summary>
        </member>
        <member name="F:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.PublicMethods">
            <summary>
            Specifies all public methods.
            </summary>
        </member>
        <member name="F:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.NonPublicMethods">
            <summary>
            Specifies all non-public methods.
            </summary>
        </member>
        <member name="F:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.PublicFields">
            <summary>
            Specifies all public fields.
            </summary>
        </member>
        <member name="F:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.NonPublicFields">
            <summary>
            Specifies all non-public fields.
            </summary>
        </member>
        <member name="F:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.PublicNestedTypes">
            <summary>
            Specifies all public nested types.
            </summary>
        </member>
        <member name="F:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.NonPublicNestedTypes">
            <summary>
            Specifies all non-public nested types.
            </summary>
        </member>
        <member name="F:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.PublicProperties">
            <summary>
            Specifies all public properties.
            </summary>
        </member>
        <member name="F:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.NonPublicProperties">
            <summary>
            Specifies all non-public properties.
            </summary>
        </member>
        <member name="F:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.PublicEvents">
            <summary>
            Specifies all public events.
            </summary>
        </member>
        <member name="F:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.NonPublicEvents">
            <summary>
            Specifies all non-public events.
            </summary>
        </member>
        <member name="F:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.Interfaces">
            <summary>
            Specifies all interfaces implemented by the type.
            </summary>
        </member>
        <member name="F:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.All">
            <summary>
            Specifies all members.
            </summary>
        </member>
        <member name="M:Azure.AI.Translation.Text.BackTranslation.System#ClientModel#Primitives#IJsonModel{Azure#AI#Translation#Text#BackTranslation}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.AI.Translation.Text.BackTranslation.System#ClientModel#Primitives#IJsonModel{Azure#AI#Translation#Text#BackTranslation}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.AI.Translation.Text.BackTranslation.System#ClientModel#Primitives#IPersistableModel{Azure#AI#Translation#Text#BackTranslation}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.AI.Translation.Text.BackTranslation.System#ClientModel#Primitives#IPersistableModel{Azure#AI#Translation#Text#BackTranslation}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.AI.Translation.Text.BackTranslation.System#ClientModel#Primitives#IPersistableModel{Azure#AI#Translation#Text#BackTranslation}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary><returns>The format that the model uses when communicating with the serivce.</returns>
        </member>
        <member name="M:Azure.AI.Translation.Text.BreakSentenceItem.System#ClientModel#Primitives#IJsonModel{Azure#AI#Translation#Text#BreakSentenceItem}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.AI.Translation.Text.BreakSentenceItem.System#ClientModel#Primitives#IJsonModel{Azure#AI#Translation#Text#BreakSentenceItem}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.AI.Translation.Text.BreakSentenceItem.System#ClientModel#Primitives#IPersistableModel{Azure#AI#Translation#Text#BreakSentenceItem}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.AI.Translation.Text.BreakSentenceItem.System#ClientModel#Primitives#IPersistableModel{Azure#AI#Translation#Text#BreakSentenceItem}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.AI.Translation.Text.BreakSentenceItem.System#ClientModel#Primitives#IPersistableModel{Azure#AI#Translation#Text#BreakSentenceItem}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary><returns>The format that the model uses when communicating with the serivce.</returns>
        </member>
        <member name="M:Azure.AI.Translation.Text.DetectedLanguage.System#ClientModel#Primitives#IJsonModel{Azure#AI#Translation#Text#DetectedLanguage}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.AI.Translation.Text.DetectedLanguage.System#ClientModel#Primitives#IJsonModel{Azure#AI#Translation#Text#DetectedLanguage}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.AI.Translation.Text.DetectedLanguage.System#ClientModel#Primitives#IPersistableModel{Azure#AI#Translation#Text#DetectedLanguage}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.AI.Translation.Text.DetectedLanguage.System#ClientModel#Primitives#IPersistableModel{Azure#AI#Translation#Text#DetectedLanguage}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.AI.Translation.Text.DetectedLanguage.System#ClientModel#Primitives#IPersistableModel{Azure#AI#Translation#Text#DetectedLanguage}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary><returns>The format that the model uses when communicating with the serivce.</returns>
        </member>
        <member name="M:Azure.AI.Translation.Text.DictionaryExample.System#ClientModel#Primitives#IJsonModel{Azure#AI#Translation#Text#DictionaryExample}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.AI.Translation.Text.DictionaryExample.System#ClientModel#Primitives#IJsonModel{Azure#AI#Translation#Text#DictionaryExample}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.AI.Translation.Text.DictionaryExample.System#ClientModel#Primitives#IPersistableModel{Azure#AI#Translation#Text#DictionaryExample}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.AI.Translation.Text.DictionaryExample.System#ClientModel#Primitives#IPersistableModel{Azure#AI#Translation#Text#DictionaryExample}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.AI.Translation.Text.DictionaryExample.System#ClientModel#Primitives#IPersistableModel{Azure#AI#Translation#Text#DictionaryExample}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary><returns>The format that the model uses when communicating with the serivce.</returns>
        </member>
        <member name="M:Azure.AI.Translation.Text.DictionaryExampleItem.System#ClientModel#Primitives#IJsonModel{Azure#AI#Translation#Text#DictionaryExampleItem}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.AI.Translation.Text.DictionaryExampleItem.System#ClientModel#Primitives#IJsonModel{Azure#AI#Translation#Text#DictionaryExampleItem}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.AI.Translation.Text.DictionaryExampleItem.System#ClientModel#Primitives#IPersistableModel{Azure#AI#Translation#Text#DictionaryExampleItem}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.AI.Translation.Text.DictionaryExampleItem.System#ClientModel#Primitives#IPersistableModel{Azure#AI#Translation#Text#DictionaryExampleItem}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.AI.Translation.Text.DictionaryExampleItem.System#ClientModel#Primitives#IPersistableModel{Azure#AI#Translation#Text#DictionaryExampleItem}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary><returns>The format that the model uses when communicating with the serivce.</returns>
        </member>
        <member name="M:Azure.AI.Translation.Text.DictionaryExampleTextItem.System#ClientModel#Primitives#IJsonModel{Azure#AI#Translation#Text#DictionaryExampleTextItem}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.AI.Translation.Text.DictionaryExampleTextItem.System#ClientModel#Primitives#IJsonModel{Azure#AI#Translation#Text#DictionaryExampleTextItem}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.AI.Translation.Text.DictionaryExampleTextItem.System#ClientModel#Primitives#IPersistableModel{Azure#AI#Translation#Text#DictionaryExampleTextItem}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.AI.Translation.Text.DictionaryExampleTextItem.System#ClientModel#Primitives#IPersistableModel{Azure#AI#Translation#Text#DictionaryExampleTextItem}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.AI.Translation.Text.DictionaryExampleTextItem.System#ClientModel#Primitives#IPersistableModel{Azure#AI#Translation#Text#DictionaryExampleTextItem}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary><returns>The format that the model uses when communicating with the serivce.</returns>
        </member>
        <member name="M:Azure.AI.Translation.Text.DictionaryLookupItem.System#ClientModel#Primitives#IJsonModel{Azure#AI#Translation#Text#DictionaryLookupItem}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.AI.Translation.Text.DictionaryLookupItem.System#ClientModel#Primitives#IJsonModel{Azure#AI#Translation#Text#DictionaryLookupItem}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.AI.Translation.Text.DictionaryLookupItem.System#ClientModel#Primitives#IPersistableModel{Azure#AI#Translation#Text#DictionaryLookupItem}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.AI.Translation.Text.DictionaryLookupItem.System#ClientModel#Primitives#IPersistableModel{Azure#AI#Translation#Text#DictionaryLookupItem}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.AI.Translation.Text.DictionaryLookupItem.System#ClientModel#Primitives#IPersistableModel{Azure#AI#Translation#Text#DictionaryLookupItem}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary><returns>The format that the model uses when communicating with the serivce.</returns>
        </member>
        <member name="M:Azure.AI.Translation.Text.DictionaryTranslation.System#ClientModel#Primitives#IJsonModel{Azure#AI#Translation#Text#DictionaryTranslation}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.AI.Translation.Text.DictionaryTranslation.System#ClientModel#Primitives#IJsonModel{Azure#AI#Translation#Text#DictionaryTranslation}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.AI.Translation.Text.DictionaryTranslation.System#ClientModel#Primitives#IPersistableModel{Azure#AI#Translation#Text#DictionaryTranslation}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.AI.Translation.Text.DictionaryTranslation.System#ClientModel#Primitives#IPersistableModel{Azure#AI#Translation#Text#DictionaryTranslation}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.AI.Translation.Text.DictionaryTranslation.System#ClientModel#Primitives#IPersistableModel{Azure#AI#Translation#Text#DictionaryTranslation}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary><returns>The format that the model uses when communicating with the serivce.</returns>
        </member>
        <member name="M:Azure.AI.Translation.Text.GetSupportedLanguagesResult.System#ClientModel#Primitives#IJsonModel{Azure#AI#Translation#Text#GetSupportedLanguagesResult}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.AI.Translation.Text.GetSupportedLanguagesResult.System#ClientModel#Primitives#IJsonModel{Azure#AI#Translation#Text#GetSupportedLanguagesResult}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.AI.Translation.Text.GetSupportedLanguagesResult.System#ClientModel#Primitives#IPersistableModel{Azure#AI#Translation#Text#GetSupportedLanguagesResult}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.AI.Translation.Text.GetSupportedLanguagesResult.System#ClientModel#Primitives#IPersistableModel{Azure#AI#Translation#Text#GetSupportedLanguagesResult}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.AI.Translation.Text.GetSupportedLanguagesResult.System#ClientModel#Primitives#IPersistableModel{Azure#AI#Translation#Text#GetSupportedLanguagesResult}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary><returns>The format that the model uses when communicating with the serivce.</returns>
        </member>
        <member name="M:Azure.AI.Translation.Text.InputTextItem.System#ClientModel#Primitives#IJsonModel{Azure#AI#Translation#Text#InputTextItem}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.AI.Translation.Text.InputTextItem.System#ClientModel#Primitives#IJsonModel{Azure#AI#Translation#Text#InputTextItem}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.AI.Translation.Text.InputTextItem.System#ClientModel#Primitives#IPersistableModel{Azure#AI#Translation#Text#InputTextItem}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.AI.Translation.Text.InputTextItem.System#ClientModel#Primitives#IPersistableModel{Azure#AI#Translation#Text#InputTextItem}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.AI.Translation.Text.InputTextItem.System#ClientModel#Primitives#IPersistableModel{Azure#AI#Translation#Text#InputTextItem}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary><returns>The format that the model uses when communicating with the serivce.</returns>
        </member>
        <member name="P:Azure.AI.Translation.Text.ChangeTrackingDictionary`2.System#Collections#Generic#IReadOnlyDictionary{TKey@TValue}#Keys">
            <summary>Gets an enumerable collection that contains the keys in the read-only dictionary.</summary><returns>An enumerable collection that contains the keys in the read-only dictionary.</returns>
        </member>
        <member name="P:Azure.AI.Translation.Text.ChangeTrackingDictionary`2.System#Collections#Generic#IReadOnlyDictionary{TKey@TValue}#Values">
            <summary>Gets an enumerable collection that contains the values in the read-only dictionary.</summary><returns>An enumerable collection that contains the values in the read-only dictionary.</returns>
        </member>
        <member name="M:Azure.AI.Translation.Text.ChangeTrackingDictionary`2.System#Collections#IEnumerable#GetEnumerator">
            <summary>Returns an enumerator that iterates through a collection.</summary><returns>An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Azure.AI.Translation.Text.ChangeTrackingList`1.System#Collections#IEnumerable#GetEnumerator">
            <summary>Returns an enumerator that iterates through a collection.</summary><returns>An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Azure.AI.Translation.Text.LanguageScript.System#ClientModel#Primitives#IJsonModel{Azure#AI#Translation#Text#LanguageScript}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.AI.Translation.Text.LanguageScript.System#ClientModel#Primitives#IJsonModel{Azure#AI#Translation#Text#LanguageScript}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.AI.Translation.Text.LanguageScript.System#ClientModel#Primitives#IPersistableModel{Azure#AI#Translation#Text#LanguageScript}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.AI.Translation.Text.LanguageScript.System#ClientModel#Primitives#IPersistableModel{Azure#AI#Translation#Text#LanguageScript}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.AI.Translation.Text.LanguageScript.System#ClientModel#Primitives#IPersistableModel{Azure#AI#Translation#Text#LanguageScript}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary><returns>The format that the model uses when communicating with the serivce.</returns>
        </member>
        <member name="M:Azure.AI.Translation.Text.SentenceBoundaries.System#ClientModel#Primitives#IJsonModel{Azure#AI#Translation#Text#SentenceBoundaries}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.AI.Translation.Text.SentenceBoundaries.System#ClientModel#Primitives#IJsonModel{Azure#AI#Translation#Text#SentenceBoundaries}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.AI.Translation.Text.SentenceBoundaries.System#ClientModel#Primitives#IPersistableModel{Azure#AI#Translation#Text#SentenceBoundaries}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.AI.Translation.Text.SentenceBoundaries.System#ClientModel#Primitives#IPersistableModel{Azure#AI#Translation#Text#SentenceBoundaries}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.AI.Translation.Text.SentenceBoundaries.System#ClientModel#Primitives#IPersistableModel{Azure#AI#Translation#Text#SentenceBoundaries}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary><returns>The format that the model uses when communicating with the serivce.</returns>
        </member>
        <member name="M:Azure.AI.Translation.Text.SourceDictionaryLanguage.System#ClientModel#Primitives#IJsonModel{Azure#AI#Translation#Text#SourceDictionaryLanguage}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.AI.Translation.Text.SourceDictionaryLanguage.System#ClientModel#Primitives#IJsonModel{Azure#AI#Translation#Text#SourceDictionaryLanguage}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.AI.Translation.Text.SourceDictionaryLanguage.System#ClientModel#Primitives#IPersistableModel{Azure#AI#Translation#Text#SourceDictionaryLanguage}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.AI.Translation.Text.SourceDictionaryLanguage.System#ClientModel#Primitives#IPersistableModel{Azure#AI#Translation#Text#SourceDictionaryLanguage}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.AI.Translation.Text.SourceDictionaryLanguage.System#ClientModel#Primitives#IPersistableModel{Azure#AI#Translation#Text#SourceDictionaryLanguage}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary><returns>The format that the model uses when communicating with the serivce.</returns>
        </member>
        <member name="M:Azure.AI.Translation.Text.SourceText.System#ClientModel#Primitives#IJsonModel{Azure#AI#Translation#Text#SourceText}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.AI.Translation.Text.SourceText.System#ClientModel#Primitives#IJsonModel{Azure#AI#Translation#Text#SourceText}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.AI.Translation.Text.SourceText.System#ClientModel#Primitives#IPersistableModel{Azure#AI#Translation#Text#SourceText}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.AI.Translation.Text.SourceText.System#ClientModel#Primitives#IPersistableModel{Azure#AI#Translation#Text#SourceText}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.AI.Translation.Text.SourceText.System#ClientModel#Primitives#IPersistableModel{Azure#AI#Translation#Text#SourceText}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary><returns>The format that the model uses when communicating with the serivce.</returns>
        </member>
        <member name="M:Azure.AI.Translation.Text.TargetDictionaryLanguage.System#ClientModel#Primitives#IJsonModel{Azure#AI#Translation#Text#TargetDictionaryLanguage}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.AI.Translation.Text.TargetDictionaryLanguage.System#ClientModel#Primitives#IJsonModel{Azure#AI#Translation#Text#TargetDictionaryLanguage}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.AI.Translation.Text.TargetDictionaryLanguage.System#ClientModel#Primitives#IPersistableModel{Azure#AI#Translation#Text#TargetDictionaryLanguage}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.AI.Translation.Text.TargetDictionaryLanguage.System#ClientModel#Primitives#IPersistableModel{Azure#AI#Translation#Text#TargetDictionaryLanguage}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.AI.Translation.Text.TargetDictionaryLanguage.System#ClientModel#Primitives#IPersistableModel{Azure#AI#Translation#Text#TargetDictionaryLanguage}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary><returns>The format that the model uses when communicating with the serivce.</returns>
        </member>
        <member name="M:Azure.AI.Translation.Text.TranslatedTextAlignment.System#ClientModel#Primitives#IJsonModel{Azure#AI#Translation#Text#TranslatedTextAlignment}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.AI.Translation.Text.TranslatedTextAlignment.System#ClientModel#Primitives#IJsonModel{Azure#AI#Translation#Text#TranslatedTextAlignment}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.AI.Translation.Text.TranslatedTextAlignment.System#ClientModel#Primitives#IPersistableModel{Azure#AI#Translation#Text#TranslatedTextAlignment}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.AI.Translation.Text.TranslatedTextAlignment.System#ClientModel#Primitives#IPersistableModel{Azure#AI#Translation#Text#TranslatedTextAlignment}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.AI.Translation.Text.TranslatedTextAlignment.System#ClientModel#Primitives#IPersistableModel{Azure#AI#Translation#Text#TranslatedTextAlignment}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary><returns>The format that the model uses when communicating with the serivce.</returns>
        </member>
        <member name="M:Azure.AI.Translation.Text.TranslatedTextItem.System#ClientModel#Primitives#IJsonModel{Azure#AI#Translation#Text#TranslatedTextItem}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.AI.Translation.Text.TranslatedTextItem.System#ClientModel#Primitives#IJsonModel{Azure#AI#Translation#Text#TranslatedTextItem}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.AI.Translation.Text.TranslatedTextItem.System#ClientModel#Primitives#IPersistableModel{Azure#AI#Translation#Text#TranslatedTextItem}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.AI.Translation.Text.TranslatedTextItem.System#ClientModel#Primitives#IPersistableModel{Azure#AI#Translation#Text#TranslatedTextItem}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.AI.Translation.Text.TranslatedTextItem.System#ClientModel#Primitives#IPersistableModel{Azure#AI#Translation#Text#TranslatedTextItem}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary><returns>The format that the model uses when communicating with the serivce.</returns>
        </member>
        <member name="M:Azure.AI.Translation.Text.TranslationLanguage.System#ClientModel#Primitives#IJsonModel{Azure#AI#Translation#Text#TranslationLanguage}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.AI.Translation.Text.TranslationLanguage.System#ClientModel#Primitives#IJsonModel{Azure#AI#Translation#Text#TranslationLanguage}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.AI.Translation.Text.TranslationLanguage.System#ClientModel#Primitives#IPersistableModel{Azure#AI#Translation#Text#TranslationLanguage}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.AI.Translation.Text.TranslationLanguage.System#ClientModel#Primitives#IPersistableModel{Azure#AI#Translation#Text#TranslationLanguage}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.AI.Translation.Text.TranslationLanguage.System#ClientModel#Primitives#IPersistableModel{Azure#AI#Translation#Text#TranslationLanguage}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary><returns>The format that the model uses when communicating with the serivce.</returns>
        </member>
        <member name="M:Azure.AI.Translation.Text.TranslationText.System#ClientModel#Primitives#IJsonModel{Azure#AI#Translation#Text#TranslationText}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.AI.Translation.Text.TranslationText.System#ClientModel#Primitives#IJsonModel{Azure#AI#Translation#Text#TranslationText}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.AI.Translation.Text.TranslationText.System#ClientModel#Primitives#IPersistableModel{Azure#AI#Translation#Text#TranslationText}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.AI.Translation.Text.TranslationText.System#ClientModel#Primitives#IPersistableModel{Azure#AI#Translation#Text#TranslationText}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.AI.Translation.Text.TranslationText.System#ClientModel#Primitives#IPersistableModel{Azure#AI#Translation#Text#TranslationText}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary><returns>The format that the model uses when communicating with the serivce.</returns>
        </member>
        <member name="M:Azure.AI.Translation.Text.TransliterableScript.System#ClientModel#Primitives#IJsonModel{Azure#AI#Translation#Text#TransliterableScript}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.AI.Translation.Text.TransliterableScript.System#ClientModel#Primitives#IJsonModel{Azure#AI#Translation#Text#TransliterableScript}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.AI.Translation.Text.TransliterableScript.System#ClientModel#Primitives#IPersistableModel{Azure#AI#Translation#Text#TransliterableScript}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.AI.Translation.Text.TransliterableScript.System#ClientModel#Primitives#IPersistableModel{Azure#AI#Translation#Text#TransliterableScript}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.AI.Translation.Text.TransliterableScript.System#ClientModel#Primitives#IPersistableModel{Azure#AI#Translation#Text#TransliterableScript}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary><returns>The format that the model uses when communicating with the serivce.</returns>
        </member>
        <member name="M:Azure.AI.Translation.Text.TransliteratedText.System#ClientModel#Primitives#IJsonModel{Azure#AI#Translation#Text#TransliteratedText}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.AI.Translation.Text.TransliteratedText.System#ClientModel#Primitives#IJsonModel{Azure#AI#Translation#Text#TransliteratedText}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.AI.Translation.Text.TransliteratedText.System#ClientModel#Primitives#IPersistableModel{Azure#AI#Translation#Text#TransliteratedText}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.AI.Translation.Text.TransliteratedText.System#ClientModel#Primitives#IPersistableModel{Azure#AI#Translation#Text#TransliteratedText}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.AI.Translation.Text.TransliteratedText.System#ClientModel#Primitives#IPersistableModel{Azure#AI#Translation#Text#TransliteratedText}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary><returns>The format that the model uses when communicating with the serivce.</returns>
        </member>
        <member name="M:Azure.AI.Translation.Text.TransliterationLanguage.System#ClientModel#Primitives#IJsonModel{Azure#AI#Translation#Text#TransliterationLanguage}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.AI.Translation.Text.TransliterationLanguage.System#ClientModel#Primitives#IJsonModel{Azure#AI#Translation#Text#TransliterationLanguage}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.AI.Translation.Text.TransliterationLanguage.System#ClientModel#Primitives#IPersistableModel{Azure#AI#Translation#Text#TransliterationLanguage}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.AI.Translation.Text.TransliterationLanguage.System#ClientModel#Primitives#IPersistableModel{Azure#AI#Translation#Text#TransliterationLanguage}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.AI.Translation.Text.TransliterationLanguage.System#ClientModel#Primitives#IPersistableModel{Azure#AI#Translation#Text#TransliterationLanguage}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary><returns>The format that the model uses when communicating with the serivce.</returns>
        </member>
        <member name="M:Azure.Core.Pipeline.TaskExtensions.Enumerable`1.System#Collections#Generic#IEnumerable{T}#GetEnumerator">
            <summary>Returns an enumerator that iterates through the collection.</summary><returns>An enumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Azure.Core.Pipeline.TaskExtensions.Enumerable`1.System#Collections#IEnumerable#GetEnumerator">
            <summary>Returns an enumerator that iterates through a collection.</summary><returns>An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</returns>
        </member>
        <member name="P:Azure.Core.Pipeline.TaskExtensions.Enumerator`1.System#Collections#IEnumerator#Current">
            <summary>Gets the element in the collection at the current position of the enumerator.</summary><returns>The element in the collection at the current position of the enumerator.</returns>
        </member>
    </members>
</doc>
